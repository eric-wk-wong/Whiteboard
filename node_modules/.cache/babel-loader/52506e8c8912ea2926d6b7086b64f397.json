{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nimport { extend } from './util';\nimport { Property, Complex, NotifyPropertyChanges, Event } from './notify-property-change';\nimport { Browser } from './browser';\nimport { Base } from './base';\nimport { ChildProperty } from './child-property';\nimport { EventHandler } from './event-handler';\n/**\n * SwipeSettings is a framework module that provides support to handle swipe event like swipe up, swipe right, etc..,\n */\n\nvar SwipeSettings =\n/** @class */\nfunction (_super) {\n  __extends(SwipeSettings, _super);\n\n  function SwipeSettings() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  __decorate([Property(50)], SwipeSettings.prototype, \"swipeThresholdDistance\", void 0);\n\n  return SwipeSettings;\n}(ChildProperty);\n\nexport { SwipeSettings };\nvar swipeRegex = /(Up|Down)/;\n/**\n * Touch class provides support to handle the touch event like tap, double tap, tap hold, etc..,\n * ```typescript\n *    let node: HTMLElement;\n * let touchObj: Touch = new Touch({\n *    element: node,\n *    tap: function (e) {\n *        // tap handler function code\n *    }\n *    tapHold: function (e) {\n *        // tap hold handler function code\n *    }\n *    scroll: function (e) {\n *        // scroll handler function code\n *    }\n *    swipe: function (e) {\n *        // swipe handler function code\n *    }\n * });\n * ```\n */\n\nvar Touch =\n/** @class */\nfunction (_super) {\n  __extends(Touch, _super);\n  /* End-Properties */\n\n\n  function Touch(element, options) {\n    var _this = _super.call(this, options, element) || this;\n\n    _this.touchAction = true;\n    _this.tapCount = 0;\n\n    _this.startEvent = function (evt) {\n      if (_this.touchAction === true) {\n        var point = evt.changedTouches ? evt.changedTouches[0] : evt;\n\n        if (evt.changedTouches !== undefined) {\n          _this.touchAction = false;\n        }\n\n        _this.isTouchMoved = false;\n        _this.movedDirection = '';\n        _this.startPoint = _this.lastMovedPoint = {\n          clientX: point.clientX,\n          clientY: point.clientY\n        };\n        _this.startEventData = point;\n        _this.hScrollLocked = _this.vScrollLocked = false;\n        _this.tStampStart = Date.now();\n        _this.timeOutTapHold = setTimeout(function () {\n          _this.tapHoldEvent(evt);\n        }, _this.tapHoldThreshold);\n        EventHandler.add(_this.element, Browser.touchMoveEvent, _this.moveEvent, _this);\n        EventHandler.add(_this.element, Browser.touchEndEvent, _this.endEvent, _this);\n        EventHandler.add(_this.element, Browser.touchCancelEvent, _this.cancelEvent, _this);\n      }\n    };\n\n    _this.moveEvent = function (evt) {\n      var point = evt.changedTouches ? evt.changedTouches[0] : evt;\n      _this.movedPoint = point;\n      _this.isTouchMoved = !(point.clientX === _this.startPoint.clientX && point.clientY === _this.startPoint.clientY);\n      var eScrollArgs = {};\n\n      if (_this.isTouchMoved) {\n        clearTimeout(_this.timeOutTapHold);\n\n        _this.calcScrollPoints(evt);\n\n        var scrollArg = {\n          startEvents: _this.startEventData,\n          originalEvent: evt,\n          startX: _this.startPoint.clientX,\n          startY: _this.startPoint.clientY,\n          distanceX: _this.distanceX,\n          distanceY: _this.distanceY,\n          scrollDirection: _this.scrollDirection,\n          velocity: _this.getVelocity(point)\n        };\n        eScrollArgs = extend(eScrollArgs, {}, scrollArg);\n\n        _this.trigger('scroll', eScrollArgs);\n\n        _this.lastMovedPoint = {\n          clientX: point.clientX,\n          clientY: point.clientY\n        };\n      }\n    };\n\n    _this.cancelEvent = function (evt) {\n      clearTimeout(_this.timeOutTapHold);\n      clearTimeout(_this.timeOutTap);\n      _this.tapCount = 0;\n\n      _this.swipeFn(evt);\n\n      EventHandler.remove(_this.element, Browser.touchCancelEvent, _this.cancelEvent);\n    };\n\n    _this.endEvent = function (evt) {\n      _this.swipeFn(evt);\n\n      if (!_this.isTouchMoved) {\n        if (typeof _this.tap === 'function') {\n          _this.trigger('tap', {\n            originalEvent: evt,\n            tapCount: ++_this.tapCount\n          });\n\n          _this.timeOutTap = setTimeout(function () {\n            _this.tapCount = 0;\n          }, _this.tapThreshold);\n        }\n      }\n\n      _this.modeclear();\n    };\n\n    _this.swipeFn = function (evt) {\n      clearTimeout(_this.timeOutTapHold);\n      clearTimeout(_this.timeOutTap);\n      var point = evt;\n\n      if (evt.changedTouches) {\n        point = evt.changedTouches[0];\n      }\n\n      var diffX = point.clientX - _this.startPoint.clientX;\n      var diffY = point.clientY - _this.startPoint.clientY;\n      diffX = Math.floor(diffX < 0 ? -1 * diffX : diffX);\n      diffY = Math.floor(diffY < 0 ? -1 * diffY : diffX);\n      _this.isTouchMoved = diffX > 1 || diffY > 1;\n      _this.endPoint = point;\n\n      _this.calcPoints(evt);\n\n      var swipeArgs = {\n        originalEvent: evt,\n        startEvents: _this.startEventData,\n        startX: _this.startPoint.clientX,\n        startY: _this.startPoint.clientY,\n        distanceX: _this.distanceX,\n        distanceY: _this.distanceY,\n        swipeDirection: _this.movedDirection,\n        velocity: _this.getVelocity(point)\n      };\n\n      if (_this.isTouchMoved) {\n        var eSwipeArgs = void 0;\n        var tDistance = _this.swipeSettings.swipeThresholdDistance;\n        eSwipeArgs = extend(eSwipeArgs, _this.defaultArgs, swipeArgs);\n        var canTrigger = false;\n        var ele = _this.element;\n\n        var scrollBool = _this.isScrollable(ele);\n\n        var moved = swipeRegex.test(_this.movedDirection);\n\n        if (tDistance < _this.distanceX && !moved || tDistance < _this.distanceY && moved) {\n          if (!scrollBool) {\n            canTrigger = true;\n          } else {\n            canTrigger = _this.checkSwipe(ele, moved);\n          }\n        }\n\n        if (canTrigger) {\n          _this.trigger('swipe', eSwipeArgs);\n        }\n      }\n\n      _this.modeclear();\n    };\n\n    _this.modeclear = function () {\n      _this.modeClear = setTimeout(function () {\n        _this.touchAction = true;\n      }, typeof _this.tap !== 'function' ? 0 : 20);\n      _this.lastTapTime = new Date().getTime();\n      EventHandler.remove(_this.element, Browser.touchMoveEvent, _this.moveEvent);\n      EventHandler.remove(_this.element, Browser.touchEndEvent, _this.endEvent);\n      EventHandler.remove(_this.element, Browser.touchCancelEvent, _this.cancelEvent);\n    };\n\n    _this.bind();\n\n    return _this;\n  } // triggers when property changed \n\n  /**\n   * @private\n   * @param newProp\n   * @param oldProp\n   */\n\n\n  Touch.prototype.onPropertyChanged = function (newProp, oldProp) {//No Code to handle\n  };\n\n  Touch.prototype.bind = function () {\n    this.wireEvents();\n\n    if (Browser.isIE) {\n      this.element.classList.add('e-block-touch');\n    }\n  };\n  /**\n   * To destroy the touch instance.\n   * @return {void}\n   */\n\n\n  Touch.prototype.destroy = function () {\n    this.unwireEvents();\n\n    _super.prototype.destroy.call(this);\n  }; // Need to changes the event binding once we updated the event handler.\n\n\n  Touch.prototype.wireEvents = function () {\n    EventHandler.add(this.element, Browser.touchStartEvent, this.startEvent, this);\n  };\n\n  Touch.prototype.unwireEvents = function () {\n    EventHandler.remove(this.element, Browser.touchStartEvent, this.startEvent);\n  };\n  /**\n   * Returns module name as touch\n   * @returns {string}\n   * @private\n   */\n\n\n  Touch.prototype.getModuleName = function () {\n    return 'touch';\n  };\n  /**\n   * Returns if the HTML element is Scrollable.\n   * @param {HTMLElement} element - HTML Element to check if Scrollable.\n   * @returns {boolean}\n   */\n\n\n  Touch.prototype.isScrollable = function (element) {\n    var eleStyle = getComputedStyle(element);\n    var style = eleStyle.overflow + eleStyle.overflowX + eleStyle.overflowY;\n\n    if (/(auto|scroll)/.test(style)) {\n      return true;\n    }\n\n    return false;\n  };\n\n  Touch.prototype.tapHoldEvent = function (evt) {\n    this.tapCount = 0;\n    this.touchAction = true;\n    var eTapArgs;\n    EventHandler.remove(this.element, Browser.touchMoveEvent, this.moveEvent);\n    EventHandler.remove(this.element, Browser.touchEndEvent, this.endEvent);\n    eTapArgs = {\n      originalEvent: evt\n    };\n    this.trigger('tapHold', eTapArgs);\n    EventHandler.remove(this.element, Browser.touchCancelEvent, this.cancelEvent);\n  };\n\n  Touch.prototype.calcPoints = function (evt) {\n    var point = evt.changedTouches ? evt.changedTouches[0] : evt;\n    this.defaultArgs = {\n      originalEvent: evt\n    };\n    this.distanceX = Math.abs(Math.abs(point.clientX) - Math.abs(this.startPoint.clientX));\n    this.distanceY = Math.abs(Math.abs(point.clientY) - Math.abs(this.startPoint.clientY));\n\n    if (this.distanceX > this.distanceY) {\n      this.movedDirection = point.clientX > this.startPoint.clientX ? 'Right' : 'Left';\n    } else {\n      this.movedDirection = point.clientY < this.startPoint.clientY ? 'Up' : 'Down';\n    }\n  };\n\n  Touch.prototype.calcScrollPoints = function (evt) {\n    var point = evt.changedTouches ? evt.changedTouches[0] : evt;\n    this.defaultArgs = {\n      originalEvent: evt\n    };\n    this.distanceX = Math.abs(Math.abs(point.clientX) - Math.abs(this.lastMovedPoint.clientX));\n    this.distanceY = Math.abs(Math.abs(point.clientY) - Math.abs(this.lastMovedPoint.clientY));\n\n    if ((this.distanceX > this.distanceY || this.hScrollLocked === true) && this.vScrollLocked === false) {\n      this.scrollDirection = point.clientX > this.lastMovedPoint.clientX ? 'Right' : 'Left';\n      this.hScrollLocked = true;\n    } else {\n      this.scrollDirection = point.clientY < this.lastMovedPoint.clientY ? 'Up' : 'Down';\n      this.vScrollLocked = true;\n    }\n  };\n\n  Touch.prototype.getVelocity = function (pnt) {\n    var newX = pnt.clientX;\n    var newY = pnt.clientY;\n    var newT = Date.now();\n    var xDist = newX - this.startPoint.clientX;\n    var yDist = newY - this.startPoint.clientX;\n    var interval = newT - this.tStampStart;\n    return Math.sqrt(xDist * xDist + yDist * yDist) / interval;\n  }; // tslint:disable-next-line:no-any\n\n\n  Touch.prototype.checkSwipe = function (ele, flag) {\n    var keys = ['scroll', 'offset'];\n    var temp = flag ? ['Height', 'Top'] : ['Width', 'Left'];\n\n    if (ele[keys[0] + temp[0]] <= ele[keys[1] + temp[0]]) {\n      return true;\n    }\n\n    return ele[keys[0] + temp[1]] === 0 || ele[keys[1] + temp[0]] + ele[keys[0] + temp[1]] >= ele[keys[0] + temp[0]];\n  };\n\n  __decorate([Event()], Touch.prototype, \"tap\", void 0);\n\n  __decorate([Event()], Touch.prototype, \"tapHold\", void 0);\n\n  __decorate([Event()], Touch.prototype, \"swipe\", void 0);\n\n  __decorate([Event()], Touch.prototype, \"scroll\", void 0);\n\n  __decorate([Property(350)], Touch.prototype, \"tapThreshold\", void 0);\n\n  __decorate([Property(750)], Touch.prototype, \"tapHoldThreshold\", void 0);\n\n  __decorate([Complex({}, SwipeSettings)], Touch.prototype, \"swipeSettings\", void 0);\n\n  Touch = __decorate([NotifyPropertyChanges], Touch);\n  return Touch;\n}(Base);\n\nexport { Touch };","map":{"version":3,"sources":["/Users/jay/node_modules/@syncfusion/ej2-base/src/touch.js"],"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","__decorate","decorators","target","key","desc","c","arguments","length","r","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","extend","Property","Complex","NotifyPropertyChanges","Event","Browser","Base","ChildProperty","EventHandler","SwipeSettings","_super","apply","swipeRegex","Touch","element","options","_this","call","touchAction","tapCount","startEvent","evt","point","changedTouches","undefined","isTouchMoved","movedDirection","startPoint","lastMovedPoint","clientX","clientY","startEventData","hScrollLocked","vScrollLocked","tStampStart","Date","now","timeOutTapHold","setTimeout","tapHoldEvent","tapHoldThreshold","add","touchMoveEvent","moveEvent","touchEndEvent","endEvent","touchCancelEvent","cancelEvent","movedPoint","eScrollArgs","clearTimeout","calcScrollPoints","scrollArg","startEvents","originalEvent","startX","startY","distanceX","distanceY","scrollDirection","velocity","getVelocity","trigger","timeOutTap","swipeFn","remove","tap","tapThreshold","modeclear","diffX","diffY","Math","floor","endPoint","calcPoints","swipeArgs","swipeDirection","eSwipeArgs","tDistance","swipeSettings","swipeThresholdDistance","defaultArgs","canTrigger","ele","scrollBool","isScrollable","moved","test","checkSwipe","modeClear","lastTapTime","getTime","bind","onPropertyChanged","newProp","oldProp","wireEvents","isIE","classList","destroy","unwireEvents","touchStartEvent","getModuleName","eleStyle","getComputedStyle","style","overflow","overflowX","overflowY","eTapArgs","abs","pnt","newX","newY","newT","xDist","yDist","interval","sqrt","flag","keys","temp"],"mappings":"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","sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { extend } from './util';\nimport { Property, Complex, NotifyPropertyChanges, Event } from './notify-property-change';\nimport { Browser } from './browser';\nimport { Base } from './base';\nimport { ChildProperty } from './child-property';\nimport { EventHandler } from './event-handler';\n/**\n * SwipeSettings is a framework module that provides support to handle swipe event like swipe up, swipe right, etc..,\n */\nvar SwipeSettings = /** @class */ (function (_super) {\n    __extends(SwipeSettings, _super);\n    function SwipeSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(50)\n    ], SwipeSettings.prototype, \"swipeThresholdDistance\", void 0);\n    return SwipeSettings;\n}(ChildProperty));\nexport { SwipeSettings };\nvar swipeRegex = /(Up|Down)/;\n/**\n * Touch class provides support to handle the touch event like tap, double tap, tap hold, etc..,\n * ```typescript\n *    let node: HTMLElement;\n * let touchObj: Touch = new Touch({\n *    element: node,\n *    tap: function (e) {\n *        // tap handler function code\n *    }\n *    tapHold: function (e) {\n *        // tap hold handler function code\n *    }\n *    scroll: function (e) {\n *        // scroll handler function code\n *    }\n *    swipe: function (e) {\n *        // swipe handler function code\n *    }\n * });\n * ```\n */\nvar Touch = /** @class */ (function (_super) {\n    __extends(Touch, _super);\n    /* End-Properties */\n    function Touch(element, options) {\n        var _this = _super.call(this, options, element) || this;\n        _this.touchAction = true;\n        _this.tapCount = 0;\n        _this.startEvent = function (evt) {\n            if (_this.touchAction === true) {\n                var point = (evt.changedTouches ? evt.changedTouches[0] : evt);\n                if (evt.changedTouches !== undefined) {\n                    _this.touchAction = false;\n                }\n                _this.isTouchMoved = false;\n                _this.movedDirection = '';\n                _this.startPoint = _this.lastMovedPoint = { clientX: point.clientX, clientY: point.clientY };\n                _this.startEventData = point;\n                _this.hScrollLocked = _this.vScrollLocked = false;\n                _this.tStampStart = Date.now();\n                _this.timeOutTapHold = setTimeout(function () { _this.tapHoldEvent(evt); }, _this.tapHoldThreshold);\n                EventHandler.add(_this.element, Browser.touchMoveEvent, _this.moveEvent, _this);\n                EventHandler.add(_this.element, Browser.touchEndEvent, _this.endEvent, _this);\n                EventHandler.add(_this.element, Browser.touchCancelEvent, _this.cancelEvent, _this);\n            }\n        };\n        _this.moveEvent = function (evt) {\n            var point = evt.changedTouches ? evt.changedTouches[0] : evt;\n            _this.movedPoint = point;\n            _this.isTouchMoved = !(point.clientX === _this.startPoint.clientX && point.clientY === _this.startPoint.clientY);\n            var eScrollArgs = {};\n            if (_this.isTouchMoved) {\n                clearTimeout(_this.timeOutTapHold);\n                _this.calcScrollPoints(evt);\n                var scrollArg = {\n                    startEvents: _this.startEventData,\n                    originalEvent: evt, startX: _this.startPoint.clientX,\n                    startY: _this.startPoint.clientY, distanceX: _this.distanceX,\n                    distanceY: _this.distanceY, scrollDirection: _this.scrollDirection,\n                    velocity: _this.getVelocity(point)\n                };\n                eScrollArgs = extend(eScrollArgs, {}, scrollArg);\n                _this.trigger('scroll', eScrollArgs);\n                _this.lastMovedPoint = { clientX: point.clientX, clientY: point.clientY };\n            }\n        };\n        _this.cancelEvent = function (evt) {\n            clearTimeout(_this.timeOutTapHold);\n            clearTimeout(_this.timeOutTap);\n            _this.tapCount = 0;\n            _this.swipeFn(evt);\n            EventHandler.remove(_this.element, Browser.touchCancelEvent, _this.cancelEvent);\n        };\n        _this.endEvent = function (evt) {\n            _this.swipeFn(evt);\n            if (!_this.isTouchMoved) {\n                if (typeof _this.tap === 'function') {\n                    _this.trigger('tap', { originalEvent: evt, tapCount: ++_this.tapCount });\n                    _this.timeOutTap = setTimeout(function () {\n                        _this.tapCount = 0;\n                    }, _this.tapThreshold);\n                }\n            }\n            _this.modeclear();\n        };\n        _this.swipeFn = function (evt) {\n            clearTimeout(_this.timeOutTapHold);\n            clearTimeout(_this.timeOutTap);\n            var point = evt;\n            if (evt.changedTouches) {\n                point = evt.changedTouches[0];\n            }\n            var diffX = point.clientX - _this.startPoint.clientX;\n            var diffY = point.clientY - _this.startPoint.clientY;\n            diffX = Math.floor(diffX < 0 ? -1 * diffX : diffX);\n            diffY = Math.floor(diffY < 0 ? -1 * diffY : diffX);\n            _this.isTouchMoved = diffX > 1 || diffY > 1;\n            _this.endPoint = point;\n            _this.calcPoints(evt);\n            var swipeArgs = {\n                originalEvent: evt,\n                startEvents: _this.startEventData,\n                startX: _this.startPoint.clientX,\n                startY: _this.startPoint.clientY,\n                distanceX: _this.distanceX, distanceY: _this.distanceY, swipeDirection: _this.movedDirection,\n                velocity: _this.getVelocity(point)\n            };\n            if (_this.isTouchMoved) {\n                var eSwipeArgs = void 0;\n                var tDistance = _this.swipeSettings.swipeThresholdDistance;\n                eSwipeArgs = extend(eSwipeArgs, _this.defaultArgs, swipeArgs);\n                var canTrigger = false;\n                var ele = _this.element;\n                var scrollBool = _this.isScrollable(ele);\n                var moved = swipeRegex.test(_this.movedDirection);\n                if ((tDistance < _this.distanceX && !moved) || (tDistance < _this.distanceY && moved)) {\n                    if (!scrollBool) {\n                        canTrigger = true;\n                    }\n                    else {\n                        canTrigger = _this.checkSwipe(ele, moved);\n                    }\n                }\n                if (canTrigger) {\n                    _this.trigger('swipe', eSwipeArgs);\n                }\n            }\n            _this.modeclear();\n        };\n        _this.modeclear = function () {\n            _this.modeClear = setTimeout(function () {\n                _this.touchAction = true;\n            }, (typeof _this.tap !== 'function' ? 0 : 20));\n            _this.lastTapTime = new Date().getTime();\n            EventHandler.remove(_this.element, Browser.touchMoveEvent, _this.moveEvent);\n            EventHandler.remove(_this.element, Browser.touchEndEvent, _this.endEvent);\n            EventHandler.remove(_this.element, Browser.touchCancelEvent, _this.cancelEvent);\n        };\n        _this.bind();\n        return _this;\n    }\n    // triggers when property changed \n    /**\n     * @private\n     * @param newProp\n     * @param oldProp\n     */\n    Touch.prototype.onPropertyChanged = function (newProp, oldProp) {\n        //No Code to handle\n    };\n    Touch.prototype.bind = function () {\n        this.wireEvents();\n        if (Browser.isIE) {\n            this.element.classList.add('e-block-touch');\n        }\n    };\n    /**\n     * To destroy the touch instance.\n     * @return {void}\n     */\n    Touch.prototype.destroy = function () {\n        this.unwireEvents();\n        _super.prototype.destroy.call(this);\n    };\n    // Need to changes the event binding once we updated the event handler.\n    Touch.prototype.wireEvents = function () {\n        EventHandler.add(this.element, Browser.touchStartEvent, this.startEvent, this);\n    };\n    Touch.prototype.unwireEvents = function () {\n        EventHandler.remove(this.element, Browser.touchStartEvent, this.startEvent);\n    };\n    /**\n     * Returns module name as touch\n     * @returns {string}\n     * @private\n     */\n    Touch.prototype.getModuleName = function () {\n        return 'touch';\n    };\n    /**\n     * Returns if the HTML element is Scrollable.\n     * @param {HTMLElement} element - HTML Element to check if Scrollable.\n     * @returns {boolean}\n     */\n    Touch.prototype.isScrollable = function (element) {\n        var eleStyle = getComputedStyle(element);\n        var style = eleStyle.overflow + eleStyle.overflowX + eleStyle.overflowY;\n        if ((/(auto|scroll)/).test(style)) {\n            return true;\n        }\n        return false;\n    };\n    Touch.prototype.tapHoldEvent = function (evt) {\n        this.tapCount = 0;\n        this.touchAction = true;\n        var eTapArgs;\n        EventHandler.remove(this.element, Browser.touchMoveEvent, this.moveEvent);\n        EventHandler.remove(this.element, Browser.touchEndEvent, this.endEvent);\n        eTapArgs = { originalEvent: evt };\n        this.trigger('tapHold', eTapArgs);\n        EventHandler.remove(this.element, Browser.touchCancelEvent, this.cancelEvent);\n    };\n    Touch.prototype.calcPoints = function (evt) {\n        var point = evt.changedTouches ? evt.changedTouches[0] : evt;\n        this.defaultArgs = { originalEvent: evt };\n        this.distanceX = Math.abs((Math.abs(point.clientX) - Math.abs(this.startPoint.clientX)));\n        this.distanceY = Math.abs((Math.abs(point.clientY) - Math.abs(this.startPoint.clientY)));\n        if (this.distanceX > this.distanceY) {\n            this.movedDirection = (point.clientX > this.startPoint.clientX) ? 'Right' : 'Left';\n        }\n        else {\n            this.movedDirection = (point.clientY < this.startPoint.clientY) ? 'Up' : 'Down';\n        }\n    };\n    Touch.prototype.calcScrollPoints = function (evt) {\n        var point = evt.changedTouches ? evt.changedTouches[0] : evt;\n        this.defaultArgs = { originalEvent: evt };\n        this.distanceX = Math.abs((Math.abs(point.clientX) - Math.abs(this.lastMovedPoint.clientX)));\n        this.distanceY = Math.abs((Math.abs(point.clientY) - Math.abs(this.lastMovedPoint.clientY)));\n        if ((this.distanceX > this.distanceY || this.hScrollLocked === true) && this.vScrollLocked === false) {\n            this.scrollDirection = (point.clientX > this.lastMovedPoint.clientX) ? 'Right' : 'Left';\n            this.hScrollLocked = true;\n        }\n        else {\n            this.scrollDirection = (point.clientY < this.lastMovedPoint.clientY) ? 'Up' : 'Down';\n            this.vScrollLocked = true;\n        }\n    };\n    Touch.prototype.getVelocity = function (pnt) {\n        var newX = pnt.clientX;\n        var newY = pnt.clientY;\n        var newT = Date.now();\n        var xDist = newX - this.startPoint.clientX;\n        var yDist = newY - this.startPoint.clientX;\n        var interval = newT - this.tStampStart;\n        return Math.sqrt(xDist * xDist + yDist * yDist) / interval;\n    };\n    // tslint:disable-next-line:no-any\n    Touch.prototype.checkSwipe = function (ele, flag) {\n        var keys = ['scroll', 'offset'];\n        var temp = flag ? ['Height', 'Top'] : ['Width', 'Left'];\n        if ((ele[keys[0] + temp[0]] <= ele[keys[1] + temp[0]])) {\n            return true;\n        }\n        return (ele[keys[0] + temp[1]] === 0) ||\n            (ele[keys[1] + temp[0]] + ele[keys[0] + temp[1]] >= ele[keys[0] + temp[0]]);\n    };\n    __decorate([\n        Event()\n    ], Touch.prototype, \"tap\", void 0);\n    __decorate([\n        Event()\n    ], Touch.prototype, \"tapHold\", void 0);\n    __decorate([\n        Event()\n    ], Touch.prototype, \"swipe\", void 0);\n    __decorate([\n        Event()\n    ], Touch.prototype, \"scroll\", void 0);\n    __decorate([\n        Property(350)\n    ], Touch.prototype, \"tapThreshold\", void 0);\n    __decorate([\n        Property(750)\n    ], Touch.prototype, \"tapHoldThreshold\", void 0);\n    __decorate([\n        Complex({}, SwipeSettings)\n    ], Touch.prototype, \"swipeSettings\", void 0);\n    Touch = __decorate([\n        NotifyPropertyChanges\n    ], Touch);\n    return Touch;\n}(Base));\nexport { Touch };\n"]},"metadata":{},"sourceType":"module"}