{"ast":null,"code":"import { classNames } from './list-view';\nimport { EventHandler, append, isNullOrUndefined, detach, removeClass, addClass, compile, formatUnit } from '@syncfusion/ej2-base';\nimport { ListBase } from '../common/list-base';\nimport { DataManager } from '@syncfusion/ej2-data';\n\nvar Virtualization =\n/** @class */\nfunction () {\n  function Virtualization(instance) {\n    this.listViewInstance = instance;\n  }\n  /**\n   * For internal use only.\n   * @private\n   */\n\n\n  Virtualization.prototype.isNgTemplate = function () {\n    return !isNullOrUndefined(this.listViewInstance.templateRef) && typeof this.listViewInstance.templateRef !== 'string';\n  };\n  /**\n   * For internal use only.\n   * @private\n   */\n\n\n  Virtualization.prototype.uiVirtualization = function () {\n    var curViewDS = this.listViewInstance.curViewDS;\n    var firstDs = curViewDS.slice(0, 1);\n    this.listViewInstance.ulElement = this.listViewInstance.curUL = ListBase.createList(this.listViewInstance.createElement, firstDs, this.listViewInstance.listBaseOption);\n    this.listViewInstance.contentContainer = this.listViewInstance.createElement('div', {\n      className: classNames.content\n    });\n    this.listViewInstance.element.appendChild(this.listViewInstance.contentContainer);\n    this.listViewInstance.contentContainer.appendChild(this.listViewInstance.ulElement);\n    this.listItemHeight = this.listViewInstance.ulElement.firstElementChild.getBoundingClientRect().height;\n    this.expectedDomItemCount = this.ValidateItemCount(10000);\n    this.domItemCount = this.ValidateItemCount(Object.keys(this.listViewInstance.curViewDS).length);\n    this.uiFirstIndex = 0;\n    this.uiLastIndex = this.domItemCount - 1;\n    this.wireScrollEvent(false);\n    var otherDs = curViewDS.slice(1, this.domItemCount);\n    var listItems = ListBase.createListItemFromJson(this.listViewInstance.createElement, otherDs, this.listViewInstance.listBaseOption);\n    append(listItems, this.listViewInstance.ulElement);\n    this.listViewInstance.liCollection = this.listViewInstance.curUL.querySelectorAll('li');\n    this.topElement = this.listViewInstance.createElement('div');\n    this.listViewInstance.ulElement.insertBefore(this.topElement, this.listViewInstance.ulElement.firstElementChild);\n    this.bottomElement = this.listViewInstance.createElement('div');\n    this.listViewInstance.ulElement.insertBefore(this.bottomElement, null);\n    this.totalHeight = Object.keys(curViewDS).length * this.listItemHeight - this.domItemCount * this.listItemHeight;\n    this.topElement.style.height = 0 + 'px';\n    this.bottomElement.style.height = this.totalHeight + 'px';\n    this.topElementHeight = 0;\n    this.bottomElementHeight = this.totalHeight;\n    this.listDiff = 0;\n    this.uiIndicesInitialization();\n  };\n\n  Virtualization.prototype.wireScrollEvent = function (destroy) {\n    if (!destroy) {\n      if (this.listViewInstance.isWindow) {\n        this.onVirtualScroll = this.onVirtualUiScroll.bind(this);\n        window.addEventListener('scroll', this.onVirtualScroll);\n      } else {\n        EventHandler.add(this.listViewInstance.element, 'scroll', this.onVirtualUiScroll, this);\n      }\n    } else {\n      this.listViewInstance.isWindow ? window.removeEventListener('scroll', this.onVirtualScroll) : EventHandler.remove(this.listViewInstance.element, 'scroll', this.onVirtualUiScroll);\n    }\n  };\n\n  Virtualization.prototype.ValidateItemCount = function (dataSourceLength) {\n    var height = parseFloat(formatUnit(this.listViewInstance.height));\n    var itemCount = this.listViewInstance.isWindow ? Math.round(window.innerHeight / this.listItemHeight * 3) : Math.round(height / this.listItemHeight * 1.5);\n\n    if (itemCount > dataSourceLength) {\n      itemCount = dataSourceLength;\n    }\n\n    return itemCount;\n  };\n\n  Virtualization.prototype.uiIndicesInitialization = function () {\n    this.uiIndices = {\n      'activeIndices': [],\n      'disabledItemIndices': [],\n      'hiddenItemIndices': []\n    };\n    var data = this.listViewInstance.curViewDS;\n\n    for (var i = 0; i < data.length; i++) {\n      if (this.listViewInstance.showCheckBox && data[i][this.listViewInstance.fields.isChecked]) {\n        this.uiIndices.activeIndices.push(i);\n      }\n\n      if (!isNullOrUndefined(data[i][this.listViewInstance.fields.enabled]) && !data[i][this.listViewInstance.fields.enabled]) {\n        this.uiIndices.disabledItemIndices.push(i);\n      }\n    }\n\n    if (this.isNgTemplate()) {\n      var items = this.listViewInstance.element.querySelectorAll('.' + classNames.listItem);\n\n      for (var index = 0; index < items.length; index++) {\n        items[index].context = this.listViewInstance.viewContainerRef._embeddedViews[index].context;\n      }\n    }\n  };\n\n  Virtualization.prototype.refreshItemHeight = function () {\n    if (this.listViewInstance.curViewDS.length) {\n      var curViewDS = this.listViewInstance.curViewDS;\n      this.listItemHeight = this.topElement.nextSibling.getBoundingClientRect().height;\n      this.totalHeight = Object.keys(curViewDS).length * this.listItemHeight - this.domItemCount * this.listItemHeight;\n      this.bottomElementHeight = this.totalHeight;\n      this.bottomElement.style.height = this.totalHeight + 'px';\n    }\n  };\n\n  Virtualization.prototype.getscrollerHeight = function (startingHeight) {\n    return this.listViewInstance.isWindow ? pageYOffset - startingHeight <= 0 ? 0 : pageYOffset - startingHeight : this.listViewInstance.element.scrollTop - startingHeight <= 0 ? 0 : this.listViewInstance.element.scrollTop - startingHeight;\n  };\n\n  Virtualization.prototype.onVirtualUiScroll = function () {\n    var _a;\n\n    var startingHeight;\n\n    if (this.listViewInstance.isWindow) {\n      startingHeight = this.listViewInstance.ulElement.getBoundingClientRect().top - document.documentElement.getBoundingClientRect().top;\n    } else {\n      startingHeight = this.listViewInstance.headerEle ? this.listViewInstance.headerEle.getBoundingClientRect().height : 0;\n    }\n\n    this.scrollPosition = isNullOrUndefined(this.scrollPosition) ? 0 : this.scrollPosition;\n    var scroll = this.getscrollerHeight(startingHeight);\n    this.topElementHeight = this.listItemHeight * Math.floor(scroll / this.listItemHeight);\n    this.bottomElementHeight = this.totalHeight - this.topElementHeight;\n    _a = scroll <= this.totalHeight ? [this.topElementHeight, this.bottomElementHeight] : [this.totalHeight, 0], this.topElementHeight = _a[0], this.bottomElementHeight = _a[1];\n\n    if (this.topElementHeight !== parseFloat(this.topElement.style.height)) {\n      this.topElement.style.height = this.topElementHeight + 'px';\n      this.bottomElement.style.height = this.bottomElementHeight + 'px';\n\n      if (scroll > this.scrollPosition) {\n        var listDiff = Math.round(this.topElementHeight / this.listItemHeight - this.listDiff);\n\n        if (listDiff > this.expectedDomItemCount + 5) {\n          this.onLongScroll(listDiff, true);\n        } else {\n          this.onNormalScroll(listDiff, true);\n        }\n      } else {\n        var listDiff = Math.round(this.listDiff - this.topElementHeight / this.listItemHeight);\n\n        if (listDiff > this.expectedDomItemCount + 5) {\n          this.onLongScroll(listDiff, false);\n        } else {\n          this.onNormalScroll(listDiff, false);\n        }\n      }\n\n      this.listDiff = Math.round(this.topElementHeight / this.listItemHeight);\n\n      if (typeof this.listViewInstance.onUIScrolled === 'function') {\n        this.listViewInstance.onUIScrolled();\n      }\n    }\n\n    this.scrollPosition = scroll;\n  };\n\n  Virtualization.prototype.onLongScroll = function (listDiff, isScrollingDown) {\n    var index = isScrollingDown ? this.uiFirstIndex + listDiff : this.uiFirstIndex - listDiff;\n    var elements = this.listViewInstance.ulElement.querySelectorAll('li');\n\n    for (var i = 0; i < elements.length; i++) {\n      this.updateUI(elements[i], index);\n      index++;\n    }\n\n    this.uiLastIndex = isScrollingDown ? this.uiLastIndex + listDiff : this.uiLastIndex - listDiff;\n    this.uiFirstIndex = isScrollingDown ? this.uiFirstIndex + listDiff : this.uiFirstIndex - listDiff;\n  };\n\n  Virtualization.prototype.onNormalScroll = function (listDiff, isScrollingDown) {\n    if (isScrollingDown) {\n      for (var i = 0; i < listDiff; i++) {\n        var index = ++this.uiLastIndex;\n        this.updateUI(this.topElement.nextElementSibling, index, this.bottomElement);\n        this.uiFirstIndex++;\n      }\n    } else {\n      for (var i = 0; i < listDiff; i++) {\n        var index = --this.uiFirstIndex;\n        var target = this.topElement.nextSibling;\n        this.updateUI(this.bottomElement.previousElementSibling, index, target);\n        this.uiLastIndex--;\n      }\n    }\n  };\n\n  Virtualization.prototype.updateUiContent = function (element, index) {\n    var curViewDs = this.listViewInstance.curViewDS;\n\n    if (typeof this.listViewInstance.dataSource[0] === 'string' || typeof this.listViewInstance.dataSource[0] === 'number') {\n      element.dataset.uid = ListBase.generateId();\n      element.getElementsByClassName(classNames.listItemText)[0].innerHTML = this.listViewInstance.curViewDS[index].toString();\n    } else {\n      element.dataset.uid = curViewDs[index][this.listViewInstance.fields.id] ? curViewDs[index][this.listViewInstance.fields.id].toString() : ListBase.generateId();\n      element.getElementsByClassName(classNames.listItemText)[0].innerHTML = curViewDs[index][this.listViewInstance.fields.text].toString();\n    }\n\n    if (this.listViewInstance.showIcon) {\n      if (element.querySelector('.' + classNames.listIcon)) {\n        detach(element.querySelector('.' + classNames.listIcon));\n      }\n\n      if (this.listViewInstance.curViewDS[index][this.listViewInstance.fields.iconCss]) {\n        var textContent = element.querySelector('.' + classNames.textContent);\n        var target = this.listViewInstance.createElement('div', {\n          className: classNames.listIcon + ' ' + this.listViewInstance.curViewDS[index][this.listViewInstance.fields.iconCss]\n        });\n        textContent.insertBefore(target, element.querySelector('.' + classNames.listItemText));\n      }\n    }\n\n    if (this.listViewInstance.showCheckBox && this.listViewInstance.fields.groupBy) {\n      if (!this.checkListWrapper) {\n        this.checkListWrapper = this.listViewInstance.curUL.querySelector('.' + classNames.checkboxWrapper).cloneNode(true);\n      }\n\n      var textContent = element.querySelector('.' + classNames.textContent);\n\n      if (this.listViewInstance.curViewDS[index].isHeader) {\n        if (element.querySelector('.' + classNames.checkboxWrapper)) {\n          element.classList.remove(classNames.checklist);\n          textContent.classList.remove(classNames.checkbox);\n          detach(element.querySelector('.' + classNames.checkboxWrapper));\n        }\n      } else {\n        if (!element.querySelector('.' + classNames.checkboxWrapper)) {\n          element.classList.add(classNames.checklist);\n          textContent.classList.add(classNames.checkbox);\n          textContent.insertBefore(this.checkListWrapper.cloneNode(true), element.querySelector('.' + classNames.listItemText));\n        }\n      }\n    }\n  };\n\n  Virtualization.prototype.changeElementAttributes = function (element, index) {\n    element.classList.remove(classNames.disable);\n\n    if (this.uiIndices.disabledItemIndices.length && this.uiIndices.disabledItemIndices.indexOf(index) !== -1) {\n      element.classList.add(classNames.disable);\n    }\n\n    element.style.display = '';\n\n    if (this.uiIndices.hiddenItemIndices.length && this.uiIndices.hiddenItemIndices.indexOf(index) !== -1) {\n      element.style.display = 'none';\n    }\n\n    if (this.listViewInstance.showCheckBox) {\n      var checklistElement = element.querySelector('.' + classNames.checkboxWrapper);\n      element.classList.remove(classNames.selected);\n      element.classList.remove(classNames.focused);\n\n      if (checklistElement) {\n        checklistElement.removeAttribute('aria-checked');\n        checklistElement.firstElementChild.classList.remove(classNames.checked);\n      }\n\n      if (this.uiIndices.activeIndices.length && this.uiIndices.activeIndices.indexOf(index) !== -1 && !this.listViewInstance.curUL.querySelector(classNames.selected)) {\n        element.classList.add(classNames.selected);\n        checklistElement.firstElementChild.classList.add(classNames.checked);\n        checklistElement.setAttribute('aria-checked', 'true');\n\n        if (this.activeIndex === index) {\n          element.classList.add(classNames.focused);\n        }\n      }\n    } else {\n      element.classList.remove(classNames.selected);\n      element.removeAttribute('aria-selected');\n\n      if (!isNullOrUndefined(this.activeIndex) && this.activeIndex === index && !this.listViewInstance.curUL.querySelector(classNames.selected)) {\n        element.classList.add(classNames.selected);\n        element.setAttribute('aria-selected', 'true');\n      }\n    }\n\n    if (this.listViewInstance.fields.groupBy) {\n      if (this.listViewInstance.curViewDS[index].isHeader) {\n        if (element.classList.contains(classNames.listItem)) {\n          element.classList.remove(classNames.listItem);\n          element.setAttribute('role', 'group');\n          element.classList.add(classNames.groupListItem);\n        }\n      } else {\n        if (element.classList.contains(classNames.groupListItem)) {\n          element.classList.remove(classNames.groupListItem);\n          element.setAttribute('role', 'listitem');\n          element.classList.add(classNames.listItem);\n        }\n      }\n    }\n  };\n\n  Virtualization.prototype.findDSAndIndexFromId = function (ds, fields) {\n    var _this = this;\n\n    var resultJSON = {};\n    fields = this.listViewInstance.getElementUID(fields);\n\n    if (!isNullOrUndefined(fields)) {\n      ds.some(function (data, index) {\n        if (fields[_this.listViewInstance.fields.id] && fields[_this.listViewInstance.fields.id].toString() === (data[_this.listViewInstance.fields.id] && data[_this.listViewInstance.fields.id].toString()) || fields === data) {\n          resultJSON.index = index;\n          resultJSON.data = data;\n          return true;\n        } else {\n          return false;\n        }\n      });\n    }\n\n    return resultJSON;\n  };\n\n  Virtualization.prototype.getSelectedItems = function () {\n    var _this = this;\n\n    if (!isNullOrUndefined(this.activeIndex) || this.listViewInstance.showCheckBox && this.uiIndices.activeIndices.length) {\n      var dataCollection = [];\n      var textCollection = [];\n\n      if (typeof this.listViewInstance.dataSource[0] === 'string' || typeof this.listViewInstance.dataSource[0] === 'number') {\n        var curViewDS_1 = this.listViewInstance.curViewDS;\n\n        if (this.listViewInstance.showCheckBox) {\n          var indices = this.uiIndices.activeIndices;\n\n          for (var i = 0; i < indices.length; i++) {\n            dataCollection.push(curViewDS_1[indices[i]]);\n          }\n\n          return {\n            text: dataCollection,\n            data: dataCollection,\n            index: this.uiIndices.activeIndices.map(function (index) {\n              return _this.listViewInstance.dataSource.indexOf(curViewDS_1[index]);\n            })\n          };\n        } else {\n          return {\n            text: curViewDS_1[this.activeIndex],\n            data: curViewDS_1[this.activeIndex],\n            index: this.listViewInstance.dataSource.indexOf(curViewDS_1[this.activeIndex])\n          };\n        }\n      } else {\n        var curViewDS_2 = this.listViewInstance.curViewDS;\n        var text = this.listViewInstance.fields.text;\n\n        if (this.listViewInstance.showCheckBox) {\n          var indexArray = this.uiIndices.activeIndices;\n\n          for (var i = 0; i < indexArray.length; i++) {\n            textCollection.push(curViewDS_2[indexArray[i]][text]);\n            dataCollection.push(curViewDS_2[indexArray[i]]);\n          }\n\n          var dataSource_1 = this.listViewInstance.dataSource instanceof DataManager ? curViewDS_2 : this.listViewInstance.dataSource;\n          return {\n            text: textCollection,\n            data: dataCollection,\n            index: this.uiIndices.activeIndices.map(function (index) {\n              return dataSource_1.indexOf(curViewDS_2[index]);\n            })\n          };\n        } else {\n          var dataSource = this.listViewInstance.dataSource instanceof DataManager ? curViewDS_2 : this.listViewInstance.dataSource;\n          return {\n            text: curViewDS_2[this.activeIndex][this.listViewInstance.fields.text],\n            data: curViewDS_2[this.activeIndex],\n            index: dataSource.indexOf(curViewDS_2[this.activeIndex])\n          };\n        }\n      }\n    } else {\n      return undefined;\n    }\n  };\n\n  Virtualization.prototype.selectItem = function (obj) {\n    var resutJSON = this.findDSAndIndexFromId(this.listViewInstance.curViewDS, obj);\n\n    if (Object.keys(resutJSON).length) {\n      var isSelected = this.activeIndex === resutJSON.index;\n      var isChecked = void 0;\n      this.activeIndex = resutJSON.index;\n\n      if (this.listViewInstance.showCheckBox) {\n        if (this.uiIndices.activeIndices.indexOf(resutJSON.index) === -1) {\n          isChecked = true;\n          this.uiIndices.activeIndices.push(resutJSON.index);\n        } else {\n          isChecked = false;\n          this.uiIndices.activeIndices.splice(this.uiIndices.activeIndices.indexOf(resutJSON.index), 1);\n        }\n\n        if (this.listViewInstance.curUL.querySelector('.' + classNames.focused)) {\n          this.listViewInstance.curUL.querySelector('.' + classNames.focused).classList.remove(classNames.focused);\n        }\n      }\n\n      if (this.listViewInstance.getLiFromObjOrElement(obj)) {\n        if (this.listViewInstance.showCheckBox) {\n          this.listViewInstance.setCheckboxLI(this.listViewInstance.getLiFromObjOrElement(obj));\n        } else {\n          this.listViewInstance.setSelectLI(this.listViewInstance.getLiFromObjOrElement(obj));\n        }\n      } else {\n        var eventArgs = void 0;\n\n        if (typeof this.listViewInstance.dataSource[0] === 'string' || typeof this.listViewInstance.dataSource[0] === 'number') {\n          eventArgs = {\n            text: this.listViewInstance.curViewDS[this.activeIndex],\n            data: this.listViewInstance.curViewDS[this.activeIndex],\n            index: this.activeIndex\n          };\n        } else {\n          var curViewDS = this.listViewInstance.curViewDS;\n          eventArgs = {\n            text: curViewDS[this.activeIndex][this.listViewInstance.fields.text],\n            data: curViewDS[this.activeIndex],\n            index: this.activeIndex\n          };\n        }\n\n        if (this.listViewInstance.showCheckBox) {\n          eventArgs.isChecked = isChecked;\n          this.listViewInstance.trigger('select', eventArgs);\n        } else if (!isSelected) {\n          this.listViewInstance.removeSelect();\n          this.listViewInstance.trigger('select', eventArgs);\n        }\n      }\n    } else if (isNullOrUndefined(obj) && !this.listViewInstance.showCheckBox) {\n      this.listViewInstance.removeSelect();\n      this.activeIndex = undefined;\n    }\n  };\n\n  Virtualization.prototype.enableItem = function (obj) {\n    var resutJSON = this.findDSAndIndexFromId(this.listViewInstance.curViewDS, obj);\n\n    if (Object.keys(resutJSON).length) {\n      this.uiIndices.disabledItemIndices.splice(this.uiIndices.disabledItemIndices.indexOf(resutJSON.index), 1);\n    }\n  };\n\n  Virtualization.prototype.disableItem = function (obj) {\n    var resutJSON = this.findDSAndIndexFromId(this.listViewInstance.curViewDS, obj);\n\n    if (Object.keys(resutJSON).length && this.uiIndices.disabledItemIndices.indexOf(resutJSON.index) === -1) {\n      this.uiIndices.disabledItemIndices.push(resutJSON.index);\n    }\n  };\n\n  Virtualization.prototype.showItem = function (obj) {\n    var resutJSON = this.findDSAndIndexFromId(this.listViewInstance.curViewDS, obj);\n\n    if (Object.keys(resutJSON).length) {\n      this.uiIndices.hiddenItemIndices.splice(this.uiIndices.hiddenItemIndices.indexOf(resutJSON.index), 1);\n    }\n  };\n\n  Virtualization.prototype.hideItem = function (obj) {\n    var resutJSON = this.findDSAndIndexFromId(this.listViewInstance.curViewDS, obj);\n\n    if (Object.keys(resutJSON).length && this.uiIndices.hiddenItemIndices.indexOf(resutJSON.index) === -1) {\n      this.uiIndices.hiddenItemIndices.push(resutJSON.index);\n    }\n  };\n\n  Virtualization.prototype.removeItem = function (obj) {\n    var dataSource;\n    var curViewDS = this.listViewInstance.curViewDS;\n    var resutJSON = this.findDSAndIndexFromId(curViewDS, obj);\n\n    if (Object.keys(resutJSON).length) {\n      dataSource = resutJSON.data;\n\n      if (curViewDS[resutJSON.index - 1] && curViewDS[resutJSON.index - 1].isHeader && curViewDS[resutJSON.index - 1].items.length === 1) {\n        this.removeUiItem(resutJSON.index - 1);\n        this.removeUiItem(resutJSON.index - 1);\n      } else {\n        this.removeUiItem(resutJSON.index);\n      }\n    }\n\n    var listDataSource = this.listViewInstance.dataSource instanceof DataManager ? this.listViewInstance.localData : this.listViewInstance.dataSource;\n    var index = listDataSource.indexOf(dataSource);\n\n    if (index !== -1) {\n      listDataSource.splice(index, 1);\n      this.listViewInstance.setViewDataSource(listDataSource);\n    } // recollect all the list item into collection\n\n\n    this.listViewInstance.liCollection = this.listViewInstance.curUL.querySelectorAll('li');\n  };\n\n  Virtualization.prototype.setCheckboxLI = function (li, e) {\n    var index = Array.prototype.indexOf.call(this.listViewInstance.curUL.querySelectorAll('li'), li) + this.uiFirstIndex;\n    this.activeIndex = Array.prototype.indexOf.call(this.listViewInstance.curUL.querySelectorAll('li'), li) + this.uiFirstIndex;\n\n    if (li.classList.contains(classNames.selected)) {\n      if (this.uiIndices.activeIndices.indexOf(index) === -1) {\n        this.uiIndices.activeIndices.push(index);\n      }\n    } else {\n      this.uiIndices.activeIndices.splice(this.uiIndices.activeIndices.indexOf(index), 1);\n    }\n  };\n\n  Virtualization.prototype.setSelectLI = function (li, e) {\n    this.activeIndex = Array.prototype.indexOf.call(this.listViewInstance.curUL.querySelectorAll('li'), li) + this.uiFirstIndex;\n  };\n\n  Virtualization.prototype.checkedItem = function (checked) {\n    if (checked) {\n      this.uiIndices.activeIndices = [];\n      this.activeIndex = undefined;\n      var data = this.listViewInstance.curViewDS;\n\n      for (var index = 0; index < data.length; index++) {\n        if (!data[index].isHeader) {\n          this.uiIndices.activeIndices.push(index);\n        }\n      }\n    } else {\n      this.activeIndex = undefined;\n      this.uiIndices.activeIndices = [];\n    }\n  };\n\n  Virtualization.prototype.addUiItem = function (index) {\n    // virtually new add list item based on the scollbar position\n    // if the scroll bar is at the top, just pretend the new item has been added since no UI\n    // change is required for the item that has been added at last but when scroll bar is at the bottom\n    // just detach top and inject into bottom to mimic new item is added\n    var curViewDs = this.listViewInstance.curViewDS;\n    this.changeUiIndices(index, true);\n\n    if (this.activeIndex && this.activeIndex >= index) {\n      this.activeIndex++;\n    }\n\n    if (this.listViewInstance.showCheckBox && curViewDs[index][this.listViewInstance.fields.isChecked]) {\n      this.uiIndices.activeIndices.push(index);\n    }\n\n    if (!parseFloat(this.bottomElement.style.height) && !parseFloat(this.topElement.style.height)) {\n      this.bottomElement.style.height = parseFloat(this.bottomElement.style.height) + this.listItemHeight + 'px';\n    }\n\n    if (parseFloat(this.bottomElement.style.height)) {\n      var liItem = this.listViewInstance.curUL.lastElementChild.previousSibling;\n      var target = this.listViewInstance.getLiFromObjOrElement(curViewDs[index + 1]) || this.listViewInstance.getLiFromObjOrElement(curViewDs[index + 2]);\n\n      if (target) {\n        this.bottomElement.style.height = parseFloat(this.bottomElement.style.height) + this.listItemHeight + 'px';\n        this.updateUI(liItem, index, target);\n      }\n    } else {\n      var liItem = this.listViewInstance.curUL.firstElementChild.nextSibling;\n      var target = void 0;\n\n      if (Object.keys(this.listViewInstance.curViewDS).length - 1 === index) {\n        target = this.listViewInstance.curUL.lastElementChild;\n      } else {\n        target = this.listViewInstance.getLiFromObjOrElement(curViewDs[index + 1]) || this.listViewInstance.getLiFromObjOrElement(curViewDs[index + 2]);\n      }\n\n      this.topElement.style.height = parseFloat(this.topElement.style.height) + this.listItemHeight + 'px';\n      this.uiFirstIndex++;\n      this.uiLastIndex++;\n\n      if (target) {\n        this.updateUI(liItem, index, target);\n        this.listViewInstance.isWindow ? window.scrollTo(0, pageYOffset + this.listItemHeight) : this.listViewInstance.element.scrollTop += this.listItemHeight;\n      }\n    }\n\n    this.totalHeight += this.listItemHeight;\n    this.listDiff = Math.round(parseFloat(this.topElement.style.height) / this.listItemHeight);\n  };\n\n  Virtualization.prototype.removeUiItem = function (index) {\n    this.totalHeight -= this.listItemHeight;\n    var curViewDS = this.listViewInstance.curViewDS[index];\n    var liItem = this.listViewInstance.getLiFromObjOrElement(curViewDS);\n    this.listViewInstance.curViewDS.splice(index, 1);\n\n    if (this.activeIndex && this.activeIndex >= index) {\n      this.activeIndex--;\n    }\n\n    if (liItem) {\n      if (this.domItemCount > Object.keys(this.listViewInstance.curViewDS).length) {\n        detach(liItem);\n        this.domItemCount--;\n        this.uiLastIndex--;\n        this.totalHeight = 0;\n      } else {\n        if (liItem.classList.contains(classNames.disable)) {\n          liItem.classList.remove(classNames.disable);\n          this.uiIndices.disabledItemIndices.splice(this.uiIndices.disabledItemIndices.indexOf(index), 1);\n        }\n\n        if (liItem.style.display === 'none') {\n          liItem.style.display = '';\n          this.uiIndices.hiddenItemIndices.splice(this.uiIndices.hiddenItemIndices.indexOf(index), 1);\n        }\n\n        if (this.listViewInstance.showCheckBox && liItem.classList.contains(classNames.selected)) {\n          this.listViewInstance.removeSelect();\n          this.uiIndices.activeIndices.splice(this.uiIndices.activeIndices.indexOf(index), 1);\n          var checklistElement = liItem.querySelector('.' + classNames.checkboxWrapper);\n          checklistElement.removeAttribute('aria-checked');\n          checklistElement.firstElementChild.classList.remove(classNames.checked);\n\n          if (liItem.classList.contains(classNames.focused)) {\n            liItem.classList.remove(classNames.focused);\n            this.activeIndex = undefined;\n          }\n        } else if (liItem.classList.contains(classNames.selected)) {\n          this.listViewInstance.removeSelect();\n          this.activeIndex = undefined;\n        }\n\n        if (!parseFloat(this.bottomElement.style.height) && !parseFloat(this.topElement.style.height)) {\n          this.updateUI(liItem, this.uiLastIndex, this.bottomElement);\n        } else if (parseFloat(this.bottomElement.style.height)) {\n          this.bottomElement.style.height = parseFloat(this.bottomElement.style.height) - this.listItemHeight + 'px';\n          this.updateUI(liItem, this.uiLastIndex, this.bottomElement);\n        } else {\n          this.topElement.style.height = parseFloat(this.topElement.style.height) - this.listItemHeight + 'px';\n          this.updateUI(liItem, this.uiFirstIndex - 1, this.topElement.nextSibling);\n          this.uiLastIndex--;\n          this.uiFirstIndex--;\n        }\n      }\n    }\n\n    this.changeUiIndices(index, false);\n    this.listDiff = Math.round(parseFloat(this.topElement.style.height) / this.listItemHeight);\n  };\n\n  Virtualization.prototype.changeUiIndices = function (index, increment) {\n    var keys = Object.keys(this.uiIndices);\n\n    for (var ind = 0; ind < keys.length; ind++) {\n      this.uiIndices[keys[ind]] = this.uiIndices[keys[ind]].map(function (i) {\n        if (i >= index) {\n          return increment ? ++i : --i;\n        } else {\n          return i;\n        }\n      });\n    }\n  };\n\n  Virtualization.prototype.addItem = function (data, fields, dataSource) {\n    for (var i = 0; i < data.length; i++) {\n      var currentItem = data[i]; // push the given data to main data array\n\n      dataSource.push(currentItem); // recalculate all the group data or other datasource related things\n\n      this.listViewInstance.setViewDataSource(dataSource); // render list items for first time due to no datasource present earlier\n\n      if (!this.domItemCount) {\n        // fresh rendering for first time\n        if ((this.listViewInstance.template || this.listViewInstance.groupTemplate) && !this.isNgTemplate()) {\n          this.listViewInstance.listBaseOption.template = null;\n          this.listViewInstance.listBaseOption.groupTemplate = null;\n          this.listViewInstance.listBaseOption.itemCreated = this.createUIItem.bind(this);\n        }\n\n        this.uiVirtualization(); // when expected expected DOM count doesn't meet the condition we need to create and inject new item into DOM\n      } else if (this.domItemCount < this.expectedDomItemCount) {\n        var ds = this.listViewInstance.findItemFromDS(dataSource, fields);\n\n        if (ds instanceof Array) {\n          if (this.listViewInstance.ulElement) {\n            var index = this.listViewInstance.curViewDS.indexOf(currentItem); // inject new list item into DOM\n\n            this.createAndInjectNewItem(currentItem, index); // check for group header item\n\n            var curViewDS = this.listViewInstance.curViewDS[index - 1];\n\n            if (curViewDS && curViewDS.isHeader && curViewDS.items.length === 1) {\n              // target group item index in datasource\n              --index; // inject new group header into DOM for previously created list item\n\n              this.createAndInjectNewItem(curViewDS, index);\n            }\n          } // recollect all the list item into collection\n\n\n          this.listViewInstance.liCollection = this.listViewInstance.curUL.querySelectorAll('li');\n        }\n      } else {\n        var index = this.listViewInstance.curViewDS.indexOf(currentItem); // virtually new add list item based on the scollbar position\n\n        this.addUiItem(index); // check for group header item needs to be added\n\n        var curViewDS = this.listViewInstance.curViewDS[index - 1];\n\n        if (curViewDS && curViewDS.isHeader && curViewDS.items.length === 1) {\n          this.addUiItem(index - 1);\n        }\n      }\n    }\n  };\n\n  Virtualization.prototype.createAndInjectNewItem = function (itemData, index) {\n    // generate li item for given datasource\n    var target;\n    var li = ListBase.createListItemFromJson(this.listViewInstance.createElement, [itemData], this.listViewInstance.listBaseOption); // check for target element whether to insert before last item or group item\n\n    if (Object.keys(this.listViewInstance.curViewDS).length - 1 === index) {\n      target = this.listViewInstance.curUL.lastElementChild;\n    } else {\n      // target group header's first child item to append its header\n      target = this.listViewInstance.getLiFromObjOrElement(this.listViewInstance.curViewDS[index + 1]) || this.listViewInstance.getLiFromObjOrElement(this.listViewInstance.curViewDS[index + 2]);\n    } // insert before the target element\n\n\n    this.listViewInstance.ulElement.insertBefore(li[0], target); // increment internal DOM count, last index count for new element\n\n    this.domItemCount++;\n\n    if (this.bottomElementHeight <= 0) {\n      this.uiLastIndex++;\n    } // recalculate the current item height, to avoid jumpy scroller\n\n\n    this.refreshItemHeight();\n  };\n\n  Virtualization.prototype.createUIItem = function (args) {\n    var virtualTemplate = this.listViewInstance.template;\n    var template = this.listViewInstance.createElement('div');\n    var commonTemplate = '<div class=\"e-text-content\" role=\"presentation\"> ' + '<span class=\"e-list-text\"> ${' + this.listViewInstance.fields.text + '} </span></div>';\n\n    if (this.listViewInstance.showCheckBox) {\n      // tslint:disable-next-line:no-any\n      this.listViewInstance.renderCheckbox(args); // tslint:enable-next-line:no-any\n\n      if (!isNullOrUndefined(this.listViewInstance.virtualCheckBox.outerHTML)) {\n        var div = document.createElement('div');\n        div.innerHTML = this.listViewInstance.template || commonTemplate;\n        div.children[0].classList.add('e-checkbox');\n        this.listViewInstance.checkBoxPosition === 'Left' ? div.children[0].classList.add('e-checkbox-left') : div.children[0].classList.add('e-checkbox-right');\n\n        if (this.listViewInstance.checkBoxPosition === 'Left') {\n          div.children[0].insertBefore(this.listViewInstance.virtualCheckBox, div.childNodes[0].children[0]);\n        } else {\n          div.children[0].appendChild(this.listViewInstance.virtualCheckBox);\n        }\n\n        this.listViewInstance.template = div.innerHTML;\n      }\n\n      template.innerHTML = this.listViewInstance.template;\n      this.listViewInstance.template = virtualTemplate;\n    } else {\n      template.innerHTML = this.listViewInstance.template || commonTemplate;\n    } // tslint:disable-next-line:no-any\n\n\n    var templateElements = template.getElementsByTagName('*');\n    var groupTemplate = this.listViewInstance.createElement('div');\n\n    if (this.listViewInstance.fields.groupBy) {\n      groupTemplate.innerHTML = this.listViewInstance.groupTemplate || commonTemplate;\n    } // tslint:disable-next-line:no-any\n\n\n    var groupTemplateElements = groupTemplate.getElementsByTagName('*');\n\n    if (args.curData.isHeader) {\n      this.headerData = args.curData;\n    }\n\n    this.templateData = args.curData.isHeader ? args.curData.items[0] : args.curData;\n    args.item.innerHTML = '';\n    args.item.context = {\n      data: args.curData,\n      nodes: {\n        flatTemplateNodes: [],\n        groupTemplateNodes: []\n      }\n    };\n\n    for (var i = 0; i < templateElements.length; i++) {\n      this.compileTemplate(templateElements[i], args.item, false);\n    }\n\n    for (var i = 0; i < groupTemplateElements.length; i++) {\n      this.compileTemplate(groupTemplateElements[i], args.item, true);\n    }\n\n    args.item.context.template = args.curData.isHeader ? template.firstElementChild : groupTemplate.firstElementChild;\n    args.item.context.type = args.curData.isHeader ? 'flatList' : 'groupList';\n    var element = args.curData.isHeader ? groupTemplate : template;\n    args.item.insertBefore(element.firstElementChild, null);\n  };\n\n  Virtualization.prototype.compileTemplate = function (element, item, isHeader) {\n    this.textProperty(element, item, isHeader);\n    this.classProperty(element, item, isHeader);\n    this.attributeProperty(element, item, isHeader);\n  };\n\n  Virtualization.prototype.onChange = function (newData, listElement) {\n    listElement.context.data = newData;\n    var groupTemplateNodes = listElement.context.nodes.groupTemplateNodes;\n    var flatTemplateNodes = listElement.context.nodes.flatTemplateNodes;\n\n    if (!isNullOrUndefined(newData.isHeader) && newData.isHeader && listElement.context.type === 'groupList') {\n      var element = listElement.firstElementChild;\n      detach(listElement.firstElementChild);\n      listElement.insertBefore(listElement.context.template, null);\n      listElement.context.template = element;\n      listElement.context.type = 'flatList';\n\n      for (var i = 0; i < groupTemplateNodes.length; i++) {\n        groupTemplateNodes[i].onChange(newData);\n      }\n    } else if (!newData.isHeader && listElement.context.type === 'flatList') {\n      var element = listElement.firstElementChild;\n      detach(listElement.firstElementChild);\n      listElement.insertBefore(listElement.context.template, null);\n      listElement.context.template = element;\n      listElement.context.type = 'groupList';\n\n      for (var i = 0; i < flatTemplateNodes.length; i++) {\n        flatTemplateNodes[i].onChange(newData);\n      }\n    } else if (!newData.isHeader) {\n      for (var i = 0; i < flatTemplateNodes.length; i++) {\n        flatTemplateNodes[i].onChange(newData);\n      }\n    } else {\n      for (var i = 0; i < groupTemplateNodes.length; i++) {\n        groupTemplateNodes[i].onChange(newData);\n      }\n    }\n  };\n\n  Virtualization.prototype.updateContextData = function (listElement, node, isHeader) {\n    if (isHeader) {\n      listElement.context.nodes.groupTemplateNodes.push(node);\n    } else {\n      listElement.context.nodes.flatTemplateNodes.push(node);\n    }\n  };\n\n  Virtualization.prototype.classProperty = function (element, listElement, isHeader) {\n    var regex = new RegExp('\\\\${([^}]*)}', 'g');\n    var resultantOutput = [];\n    var regexMatch;\n\n    while (regexMatch !== null) {\n      var match = regex.exec(element.className);\n      resultantOutput.push(match);\n      regexMatch = match;\n\n      if (regexMatch === null) {\n        resultantOutput.pop();\n      }\n    }\n\n    if (resultantOutput && resultantOutput.length) {\n      var _loop_1 = function (i) {\n        var classNameMatch = resultantOutput[i];\n        var classFunction;\n\n        if (classNameMatch[1].indexOf('?') !== -1 && classNameMatch[1].indexOf(':') !== -1) {\n          // tslint:disable-next-line:no-function-constructor-with-string-args\n          classFunction = new Function('data', 'return ' + classNameMatch[1].replace(/\\$/g, 'data.'));\n        } else {\n          // tslint:disable-next-line:no-function-constructor-with-string-args\n          classFunction = new Function('data', 'return ' + 'data.' + classNameMatch[1]);\n        }\n\n        var subNode = {};\n\n        if (isHeader) {\n          subNode.bindedvalue = classFunction(this_1.headerData);\n        } else {\n          subNode.bindedvalue = classFunction(this_1.templateData);\n        }\n\n        subNode.onChange = function (value) {\n          if (subNode.bindedvalue) {\n            removeClass([element], subNode.bindedvalue.split(' ').filter(function (css) {\n              return css;\n            }));\n          }\n\n          var newCss = classFunction(value);\n\n          if (newCss) {\n            addClass([element], newCss.split(' ').filter(function (css) {\n              return css;\n            }));\n          }\n\n          subNode.bindedvalue = newCss;\n        };\n\n        var className = classNameMatch[0].split(' ');\n\n        for (var i_1 = 0; i_1 < className.length; i_1++) {\n          element.classList.remove(className[i_1]);\n        }\n\n        if (subNode.bindedvalue) {\n          addClass([element], subNode.bindedvalue.split(' ').filter(function (css) {\n            return css;\n          }));\n        }\n\n        this_1.updateContextData(listElement, subNode, isHeader);\n      };\n\n      var this_1 = this;\n\n      for (var i = 0; i < resultantOutput.length; i++) {\n        _loop_1(i);\n      }\n    }\n  };\n\n  Virtualization.prototype.attributeProperty = function (element, listElement, isHeader) {\n    var attributeNames = [];\n\n    for (var i = 0; i < element.attributes.length; i++) {\n      attributeNames.push(element.attributes[i].nodeName);\n    }\n\n    if (attributeNames.indexOf('class') !== -1) {\n      attributeNames.splice(attributeNames.indexOf('class'), 1);\n    }\n\n    var _loop_2 = function (i) {\n      var attributeName = attributeNames[i];\n      var attrNameMatch = new RegExp('\\\\${([^}]*)}', 'g').exec(attributeName) || [];\n      var attrValueMatch = new RegExp('\\\\${([^}]*)}', 'g').exec(element.getAttribute(attributeName)) || [];\n      var attributeNameFunction;\n      var attributeValueFunction;\n\n      if (attrNameMatch.length || attrValueMatch.length) {\n        if (attrNameMatch[1]) {\n          // tslint:disable-next-line:no-function-constructor-with-string-args\n          attributeNameFunction = new Function('data', 'return ' + 'data.' + attrNameMatch[1]);\n        }\n\n        if (attrValueMatch[1]) {\n          if (attrValueMatch[1].indexOf('?') !== -1 && attrValueMatch[1].indexOf(':') !== -1) {\n            // tslint:disable-next-line:no-function-constructor-with-string-args\n            attributeValueFunction = new Function('data', 'return ' + attrValueMatch[1].replace(/\\$/g, 'data.'));\n          } else {\n            // tslint:disable-next-line:no-function-constructor-with-string-args\n            attributeValueFunction = new Function('data', 'return ' + 'data.' + attrValueMatch[1]);\n          }\n        }\n\n        var subNode_1 = {};\n\n        if (isHeader) {\n          subNode_1.bindedvalue = [attrNameMatch[1] === undefined ? undefined : attributeNameFunction(this_2.headerData), attrValueMatch[1] === undefined ? undefined : attributeValueFunction(this_2.headerData)];\n        } else {\n          subNode_1.bindedvalue = [attrNameMatch[1] === undefined ? undefined : attributeNameFunction(this_2.templateData), attrValueMatch[1] === undefined ? undefined : attributeValueFunction(this_2.templateData)];\n        }\n\n        subNode_1.attrName = subNode_1.bindedvalue[0] === undefined ? attributeName : subNode_1.bindedvalue[0];\n\n        subNode_1.onChange = function (value) {\n          var bindedvalue = subNode_1.bindedvalue[1] === undefined ? element.getAttribute(subNode_1.attrName) : attributeValueFunction(value);\n          element.removeAttribute(subNode_1.attrName);\n          subNode_1.attrName = subNode_1.bindedvalue[0] === undefined ? subNode_1.attrName : attributeNameFunction(value);\n          element.setAttribute(subNode_1.attrName, bindedvalue);\n          subNode_1.bindedvalue = [subNode_1.bindedvalue[0] === undefined ? undefined : attributeNameFunction(value), subNode_1.bindedvalue[1] === undefined ? undefined : attributeValueFunction(value)];\n        };\n\n        var attributeValue = subNode_1.bindedvalue[1] === undefined ? element.getAttribute(attributeName) : subNode_1.bindedvalue[1];\n        element.removeAttribute(attributeName);\n        element.setAttribute(subNode_1.attrName, attributeValue);\n        this_2.updateContextData(listElement, subNode_1, isHeader);\n      }\n    };\n\n    var this_2 = this;\n\n    for (var i = 0; i < attributeNames.length; i++) {\n      _loop_2(i);\n    }\n  };\n\n  Virtualization.prototype.textProperty = function (element, listElement, isHeader) {\n    var regex = new RegExp('\\\\${([^}]*)}', 'g');\n    var resultantOutput = [];\n    var regexMatch;\n\n    while (regexMatch !== null) {\n      var match = regex.exec(element.innerText);\n      resultantOutput.push(match);\n      regexMatch = match;\n\n      if (regexMatch === null) {\n        resultantOutput.pop();\n      }\n    }\n\n    var isChildHasTextContent = Array.prototype.some.call(element.children, function (element) {\n      if (new RegExp('\\\\${([^}]*)}', 'g').exec(element.innerText)) {\n        return true;\n      } else {\n        return false;\n      }\n    });\n\n    if (resultantOutput && resultantOutput.length && !isChildHasTextContent) {\n      var _loop_3 = function (i) {\n        var textPropertyMatch = resultantOutput[i];\n        var subNode = {};\n        var textFunction;\n\n        if (textPropertyMatch[1].indexOf('?') !== -1 && textPropertyMatch[1].indexOf(':') !== -1) {\n          // tslint:disable-next-line:no-function-constructor-with-string-args\n          textFunction = new Function('data', 'return ' + textPropertyMatch[1].replace(/\\$/g, 'data.'));\n        } else {\n          // tslint:disable-next-line:no-function-constructor-with-string-args\n          textFunction = new Function('data', 'return ' + 'data.' + textPropertyMatch[1]);\n        }\n\n        if (isHeader) {\n          subNode.bindedvalue = textFunction(this_3.headerData);\n        } else {\n          subNode.bindedvalue = textFunction(this_3.templateData);\n        }\n\n        subNode.onChange = function (value) {\n          element.innerText = element.innerText.replace(subNode.bindedvalue, textFunction(value));\n          subNode.bindedvalue = textFunction(value);\n        };\n\n        element.innerText = element.innerText.replace(textPropertyMatch[0], subNode.bindedvalue);\n        this_3.updateContextData(listElement, subNode, isHeader);\n      };\n\n      var this_3 = this;\n\n      for (var i = 0; i < resultantOutput.length; i++) {\n        _loop_3(i);\n      }\n    }\n  };\n\n  Virtualization.prototype.reRenderUiVirtualization = function () {\n    this.wireScrollEvent(true);\n\n    if (this.listViewInstance.contentContainer) {\n      detach(this.listViewInstance.contentContainer);\n    }\n\n    this.listViewInstance.preRender(); // resetting the dom count to 0, to avoid edge case of dataSource suddenly becoming zero\n    // and then manually adding item using addItem API\n\n    this.domItemCount = 0;\n    this.listViewInstance.header();\n    this.listViewInstance.setLocalData();\n  };\n\n  Virtualization.prototype.updateUI = function (element, index, targetElement) {\n    var onChange = this.isNgTemplate() ? this.onNgChange : this.onChange;\n\n    if (this.listViewInstance.template || this.listViewInstance.groupTemplate) {\n      var curViewDS = this.listViewInstance.curViewDS[index];\n      element.dataset.uid = curViewDS[this.listViewInstance.fields.id] ? curViewDS[this.listViewInstance.fields.id].toString() : ListBase.generateId();\n      onChange(curViewDS, element, this);\n    } else {\n      this.updateUiContent(element, index);\n    }\n\n    this.changeElementAttributes(element, index);\n\n    if (targetElement) {\n      this.listViewInstance.ulElement.insertBefore(element, targetElement);\n    }\n  };\n\n  Virtualization.prototype.onNgChange = function (newData, listElement, virtualThis) {\n    // compile given target element with template for new data\n    var templateCompiler = compile(virtualThis.listViewInstance.template);\n    var resultElement = templateCompiler(newData);\n\n    while (listElement.lastChild) {\n      listElement.removeChild(listElement.lastChild);\n    }\n\n    listElement.appendChild(resultElement[0]);\n  };\n\n  Virtualization.prototype.getModuleName = function () {\n    return 'virtualization';\n  };\n\n  Virtualization.prototype.destroy = function () {\n    this.wireScrollEvent(true);\n  };\n\n  return Virtualization;\n}();\n\nexport { Virtualization };","map":{"version":3,"sources":["D:/developing/projects/Whiteboard/node_modules/@syncfusion/ej2-lists/src/list-view/virtualization.js"],"names":["classNames","EventHandler","append","isNullOrUndefined","detach","removeClass","addClass","compile","formatUnit","ListBase","DataManager","Virtualization","instance","listViewInstance","prototype","isNgTemplate","templateRef","uiVirtualization","curViewDS","firstDs","slice","ulElement","curUL","createList","createElement","listBaseOption","contentContainer","className","content","element","appendChild","listItemHeight","firstElementChild","getBoundingClientRect","height","expectedDomItemCount","ValidateItemCount","domItemCount","Object","keys","length","uiFirstIndex","uiLastIndex","wireScrollEvent","otherDs","listItems","createListItemFromJson","liCollection","querySelectorAll","topElement","insertBefore","bottomElement","totalHeight","style","topElementHeight","bottomElementHeight","listDiff","uiIndicesInitialization","destroy","isWindow","onVirtualScroll","onVirtualUiScroll","bind","window","addEventListener","add","removeEventListener","remove","dataSourceLength","parseFloat","itemCount","Math","round","innerHeight","uiIndices","data","i","showCheckBox","fields","isChecked","activeIndices","push","enabled","disabledItemIndices","items","listItem","index","context","viewContainerRef","_embeddedViews","refreshItemHeight","nextSibling","getscrollerHeight","startingHeight","pageYOffset","scrollTop","_a","top","document","documentElement","headerEle","scrollPosition","scroll","floor","onLongScroll","onNormalScroll","onUIScrolled","isScrollingDown","elements","updateUI","nextElementSibling","target","previousElementSibling","updateUiContent","curViewDs","dataSource","dataset","uid","generateId","getElementsByClassName","listItemText","innerHTML","toString","id","text","showIcon","querySelector","listIcon","iconCss","textContent","groupBy","checkListWrapper","checkboxWrapper","cloneNode","isHeader","classList","checklist","checkbox","changeElementAttributes","disable","indexOf","display","hiddenItemIndices","checklistElement","selected","focused","removeAttribute","checked","setAttribute","activeIndex","contains","groupListItem","findDSAndIndexFromId","ds","_this","resultJSON","getElementUID","some","getSelectedItems","dataCollection","textCollection","curViewDS_1","indices","map","curViewDS_2","indexArray","dataSource_1","undefined","selectItem","obj","resutJSON","isSelected","splice","getLiFromObjOrElement","setCheckboxLI","setSelectLI","eventArgs","trigger","removeSelect","enableItem","disableItem","showItem","hideItem","removeItem","removeUiItem","listDataSource","localData","setViewDataSource","li","e","Array","call","checkedItem","addUiItem","changeUiIndices","liItem","lastElementChild","previousSibling","scrollTo","increment","ind","addItem","currentItem","template","groupTemplate","itemCreated","createUIItem","findItemFromDS","createAndInjectNewItem","itemData","args","virtualTemplate","commonTemplate","renderCheckbox","virtualCheckBox","outerHTML","div","children","checkBoxPosition","childNodes","templateElements","getElementsByTagName","groupTemplateElements","curData","headerData","templateData","item","nodes","flatTemplateNodes","groupTemplateNodes","compileTemplate","type","textProperty","classProperty","attributeProperty","onChange","newData","listElement","updateContextData","node","regex","RegExp","resultantOutput","regexMatch","match","exec","pop","_loop_1","classNameMatch","classFunction","Function","replace","subNode","bindedvalue","this_1","value","split","filter","css","newCss","i_1","attributeNames","attributes","nodeName","_loop_2","attributeName","attrNameMatch","attrValueMatch","getAttribute","attributeNameFunction","attributeValueFunction","subNode_1","this_2","attrName","attributeValue","innerText","isChildHasTextContent","_loop_3","textPropertyMatch","textFunction","this_3","reRenderUiVirtualization","preRender","header","setLocalData","targetElement","onNgChange","virtualThis","templateCompiler","resultElement","lastChild","removeChild","getModuleName"],"mappings":"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","sourcesContent":["import { classNames } from './list-view';\nimport { EventHandler, append, isNullOrUndefined, detach, removeClass, addClass, compile, formatUnit } from '@syncfusion/ej2-base';\nimport { ListBase } from '../common/list-base';\nimport { DataManager } from '@syncfusion/ej2-data';\nvar Virtualization = /** @class */ (function () {\n    function Virtualization(instance) {\n        this.listViewInstance = instance;\n    }\n    /**\n     * For internal use only.\n     * @private\n     */\n    Virtualization.prototype.isNgTemplate = function () {\n        return !isNullOrUndefined(this.listViewInstance.templateRef) && typeof this.listViewInstance.templateRef !== 'string';\n    };\n    /**\n     * For internal use only.\n     * @private\n     */\n    Virtualization.prototype.uiVirtualization = function () {\n        var curViewDS = this.listViewInstance.curViewDS;\n        var firstDs = curViewDS.slice(0, 1);\n        this.listViewInstance.ulElement = this.listViewInstance.curUL = ListBase.createList(this.listViewInstance.createElement, firstDs, this.listViewInstance.listBaseOption);\n        this.listViewInstance.contentContainer = this.listViewInstance.createElement('div', { className: classNames.content });\n        this.listViewInstance.element.appendChild(this.listViewInstance.contentContainer);\n        this.listViewInstance.contentContainer.appendChild(this.listViewInstance.ulElement);\n        this.listItemHeight = this.listViewInstance.ulElement.firstElementChild.getBoundingClientRect().height;\n        this.expectedDomItemCount = this.ValidateItemCount(10000);\n        this.domItemCount = this.ValidateItemCount(Object.keys(this.listViewInstance.curViewDS).length);\n        this.uiFirstIndex = 0;\n        this.uiLastIndex = this.domItemCount - 1;\n        this.wireScrollEvent(false);\n        var otherDs = curViewDS.slice(1, this.domItemCount);\n        var listItems = ListBase.createListItemFromJson(this.listViewInstance.createElement, otherDs, this.listViewInstance.listBaseOption);\n        append(listItems, this.listViewInstance.ulElement);\n        this.listViewInstance.liCollection = this.listViewInstance.curUL.querySelectorAll('li');\n        this.topElement = this.listViewInstance.createElement('div');\n        this.listViewInstance.ulElement.insertBefore(this.topElement, this.listViewInstance.ulElement.firstElementChild);\n        this.bottomElement = this.listViewInstance.createElement('div');\n        this.listViewInstance.ulElement.insertBefore(this.bottomElement, null);\n        this.totalHeight = (Object.keys(curViewDS).length * this.listItemHeight) - (this.domItemCount * this.listItemHeight);\n        this.topElement.style.height = 0 + 'px';\n        this.bottomElement.style.height = this.totalHeight + 'px';\n        this.topElementHeight = 0;\n        this.bottomElementHeight = this.totalHeight;\n        this.listDiff = 0;\n        this.uiIndicesInitialization();\n    };\n    Virtualization.prototype.wireScrollEvent = function (destroy) {\n        if (!destroy) {\n            if (this.listViewInstance.isWindow) {\n                this.onVirtualScroll = this.onVirtualUiScroll.bind(this);\n                window.addEventListener('scroll', this.onVirtualScroll);\n            }\n            else {\n                EventHandler.add(this.listViewInstance.element, 'scroll', this.onVirtualUiScroll, this);\n            }\n        }\n        else {\n            this.listViewInstance.isWindow ? window.removeEventListener('scroll', this.onVirtualScroll) :\n                EventHandler.remove(this.listViewInstance.element, 'scroll', this.onVirtualUiScroll);\n        }\n    };\n    Virtualization.prototype.ValidateItemCount = function (dataSourceLength) {\n        var height = parseFloat(formatUnit(this.listViewInstance.height));\n        var itemCount = this.listViewInstance.isWindow ?\n            Math.round((window.innerHeight / this.listItemHeight) * 3) :\n            Math.round((height / this.listItemHeight) * 1.5);\n        if (itemCount > dataSourceLength) {\n            itemCount = dataSourceLength;\n        }\n        return itemCount;\n    };\n    Virtualization.prototype.uiIndicesInitialization = function () {\n        this.uiIndices = { 'activeIndices': [], 'disabledItemIndices': [], 'hiddenItemIndices': [] };\n        var data = this.listViewInstance.curViewDS;\n        for (var i = 0; i < data.length; i++) {\n            if (this.listViewInstance.showCheckBox && data[i][this.listViewInstance.fields.isChecked]) {\n                this.uiIndices.activeIndices.push(i);\n            }\n            if (!isNullOrUndefined(data[i][this.listViewInstance.fields.enabled]) && !data[i][this.listViewInstance.fields.enabled]) {\n                this.uiIndices.disabledItemIndices.push(i);\n            }\n        }\n        if (this.isNgTemplate()) {\n            var items = this.listViewInstance.element.querySelectorAll('.' + classNames.listItem);\n            for (var index = 0; index < items.length; index++) {\n                items[index].context = this.listViewInstance.viewContainerRef._embeddedViews[index].context;\n            }\n        }\n    };\n    Virtualization.prototype.refreshItemHeight = function () {\n        if (this.listViewInstance.curViewDS.length) {\n            var curViewDS = this.listViewInstance.curViewDS;\n            this.listItemHeight = this.topElement.nextSibling.getBoundingClientRect().height;\n            this.totalHeight = (Object.keys(curViewDS).length * this.listItemHeight) - (this.domItemCount * this.listItemHeight);\n            this.bottomElementHeight = this.totalHeight;\n            this.bottomElement.style.height = this.totalHeight + 'px';\n        }\n    };\n    Virtualization.prototype.getscrollerHeight = function (startingHeight) {\n        return this.listViewInstance.isWindow ? (((pageYOffset - startingHeight) <= 0) ? 0 :\n            (pageYOffset - startingHeight)) : ((this.listViewInstance.element.scrollTop - startingHeight) <= 0) ? 0 :\n            (this.listViewInstance.element.scrollTop - startingHeight);\n    };\n    Virtualization.prototype.onVirtualUiScroll = function () {\n        var _a;\n        var startingHeight;\n        if (this.listViewInstance.isWindow) {\n            startingHeight = this.listViewInstance.ulElement.getBoundingClientRect().top -\n                document.documentElement.getBoundingClientRect().top;\n        }\n        else {\n            startingHeight = this.listViewInstance.headerEle ? this.listViewInstance.headerEle.getBoundingClientRect().height : 0;\n        }\n        this.scrollPosition = isNullOrUndefined(this.scrollPosition) ? 0 : this.scrollPosition;\n        var scroll = this.getscrollerHeight(startingHeight);\n        this.topElementHeight = this.listItemHeight * Math.floor(scroll / this.listItemHeight);\n        this.bottomElementHeight = this.totalHeight - this.topElementHeight;\n        _a = scroll <= this.totalHeight ?\n            [this.topElementHeight, this.bottomElementHeight] : [this.totalHeight, 0], this.topElementHeight = _a[0], this.bottomElementHeight = _a[1];\n        if (this.topElementHeight !== parseFloat(this.topElement.style.height)) {\n            this.topElement.style.height = this.topElementHeight + 'px';\n            this.bottomElement.style.height = this.bottomElementHeight + 'px';\n            if (scroll > this.scrollPosition) {\n                var listDiff = Math.round(((this.topElementHeight / this.listItemHeight) - this.listDiff));\n                if (listDiff > (this.expectedDomItemCount + 5)) {\n                    this.onLongScroll(listDiff, true);\n                }\n                else {\n                    this.onNormalScroll(listDiff, true);\n                }\n            }\n            else {\n                var listDiff = Math.round((this.listDiff - (this.topElementHeight / this.listItemHeight)));\n                if (listDiff > (this.expectedDomItemCount + 5)) {\n                    this.onLongScroll(listDiff, false);\n                }\n                else {\n                    this.onNormalScroll(listDiff, false);\n                }\n            }\n            this.listDiff = Math.round(this.topElementHeight / this.listItemHeight);\n            if (typeof this.listViewInstance.onUIScrolled === 'function') {\n                this.listViewInstance.onUIScrolled();\n            }\n        }\n        this.scrollPosition = scroll;\n    };\n    Virtualization.prototype.onLongScroll = function (listDiff, isScrollingDown) {\n        var index = isScrollingDown ? (this.uiFirstIndex + listDiff) : (this.uiFirstIndex - listDiff);\n        var elements = this.listViewInstance.ulElement.querySelectorAll('li');\n        for (var i = 0; i < elements.length; i++) {\n            this.updateUI(elements[i], index);\n            index++;\n        }\n        this.uiLastIndex = isScrollingDown ? (this.uiLastIndex + listDiff) : (this.uiLastIndex - listDiff);\n        this.uiFirstIndex = isScrollingDown ? (this.uiFirstIndex + listDiff) : (this.uiFirstIndex - listDiff);\n    };\n    Virtualization.prototype.onNormalScroll = function (listDiff, isScrollingDown) {\n        if (isScrollingDown) {\n            for (var i = 0; i < listDiff; i++) {\n                var index = ++this.uiLastIndex;\n                this.updateUI(this.topElement.nextElementSibling, index, this.bottomElement);\n                this.uiFirstIndex++;\n            }\n        }\n        else {\n            for (var i = 0; i < listDiff; i++) {\n                var index = --this.uiFirstIndex;\n                var target = this.topElement.nextSibling;\n                this.updateUI(this.bottomElement.previousElementSibling, index, target);\n                this.uiLastIndex--;\n            }\n        }\n    };\n    Virtualization.prototype.updateUiContent = function (element, index) {\n        var curViewDs = this.listViewInstance.curViewDS;\n        if (typeof this.listViewInstance.dataSource[0] === 'string' ||\n            typeof this.listViewInstance.dataSource[0] === 'number') {\n            element.dataset.uid = ListBase.generateId();\n            element.getElementsByClassName(classNames.listItemText)[0].innerHTML =\n                this.listViewInstance.curViewDS[index].toString();\n        }\n        else {\n            element.dataset.uid = curViewDs[index][this.listViewInstance.fields.id] ?\n                curViewDs[index][this.listViewInstance.fields.id].toString() : ListBase.generateId();\n            element.getElementsByClassName(classNames.listItemText)[0].innerHTML =\n                curViewDs[index][this.listViewInstance.fields.text].toString();\n        }\n        if (this.listViewInstance.showIcon) {\n            if (element.querySelector('.' + classNames.listIcon)) {\n                detach(element.querySelector('.' + classNames.listIcon));\n            }\n            if (this.listViewInstance.curViewDS[index][this.listViewInstance.fields.iconCss]) {\n                var textContent = element.querySelector('.' + classNames.textContent);\n                var target = this.listViewInstance.createElement('div', {\n                    className: classNames.listIcon + ' ' +\n                        this.listViewInstance.curViewDS[index][this.listViewInstance.fields.iconCss]\n                });\n                textContent.insertBefore(target, element.querySelector('.' + classNames.listItemText));\n            }\n        }\n        if (this.listViewInstance.showCheckBox && this.listViewInstance.fields.groupBy) {\n            if (!this.checkListWrapper) {\n                this.checkListWrapper = this.listViewInstance.curUL.querySelector('.' + classNames.checkboxWrapper).cloneNode(true);\n            }\n            var textContent = element.querySelector('.' + classNames.textContent);\n            if (this.listViewInstance.curViewDS[index].isHeader) {\n                if (element.querySelector('.' + classNames.checkboxWrapper)) {\n                    element.classList.remove(classNames.checklist);\n                    textContent.classList.remove(classNames.checkbox);\n                    detach(element.querySelector('.' + classNames.checkboxWrapper));\n                }\n            }\n            else {\n                if (!element.querySelector('.' + classNames.checkboxWrapper)) {\n                    element.classList.add(classNames.checklist);\n                    textContent.classList.add(classNames.checkbox);\n                    textContent.insertBefore(this.checkListWrapper.cloneNode(true), element.querySelector('.' + classNames.listItemText));\n                }\n            }\n        }\n    };\n    Virtualization.prototype.changeElementAttributes = function (element, index) {\n        element.classList.remove(classNames.disable);\n        if (this.uiIndices.disabledItemIndices.length && this.uiIndices.disabledItemIndices.indexOf(index) !== -1) {\n            element.classList.add(classNames.disable);\n        }\n        element.style.display = '';\n        if (this.uiIndices.hiddenItemIndices.length && this.uiIndices.hiddenItemIndices.indexOf(index) !== -1) {\n            element.style.display = 'none';\n        }\n        if (this.listViewInstance.showCheckBox) {\n            var checklistElement = element.querySelector('.' + classNames.checkboxWrapper);\n            element.classList.remove(classNames.selected);\n            element.classList.remove(classNames.focused);\n            if (checklistElement) {\n                checklistElement.removeAttribute('aria-checked');\n                checklistElement.firstElementChild.classList.remove(classNames.checked);\n            }\n            if (this.uiIndices.activeIndices.length && this.uiIndices.activeIndices.indexOf(index) !== -1 &&\n                !this.listViewInstance.curUL.querySelector(classNames.selected)) {\n                element.classList.add(classNames.selected);\n                checklistElement.firstElementChild.classList.add(classNames.checked);\n                checklistElement.setAttribute('aria-checked', 'true');\n                if (this.activeIndex === index) {\n                    element.classList.add(classNames.focused);\n                }\n            }\n        }\n        else {\n            element.classList.remove(classNames.selected);\n            element.removeAttribute('aria-selected');\n            if (!isNullOrUndefined(this.activeIndex) && this.activeIndex === index &&\n                !this.listViewInstance.curUL.querySelector(classNames.selected)) {\n                element.classList.add(classNames.selected);\n                element.setAttribute('aria-selected', 'true');\n            }\n        }\n        if (this.listViewInstance.fields.groupBy) {\n            if (this.listViewInstance.curViewDS[index].isHeader) {\n                if (element.classList.contains(classNames.listItem)) {\n                    element.classList.remove(classNames.listItem);\n                    element.setAttribute('role', 'group');\n                    element.classList.add(classNames.groupListItem);\n                }\n            }\n            else {\n                if (element.classList.contains(classNames.groupListItem)) {\n                    element.classList.remove(classNames.groupListItem);\n                    element.setAttribute('role', 'listitem');\n                    element.classList.add(classNames.listItem);\n                }\n            }\n        }\n    };\n    Virtualization.prototype.findDSAndIndexFromId = function (ds, fields) {\n        var _this = this;\n        var resultJSON = {};\n        fields = this.listViewInstance.getElementUID(fields);\n        if (!isNullOrUndefined(fields)) {\n            ds.some(function (data, index) {\n                if ((fields[_this.listViewInstance.fields.id] &&\n                    fields[_this.listViewInstance.fields.id].toString()\n                        === (data[_this.listViewInstance.fields.id] && data[_this.listViewInstance.fields.id].toString())) || fields === data) {\n                    resultJSON.index = index;\n                    resultJSON.data = data;\n                    return true;\n                }\n                else {\n                    return false;\n                }\n            });\n        }\n        return resultJSON;\n    };\n    Virtualization.prototype.getSelectedItems = function () {\n        var _this = this;\n        if (!isNullOrUndefined(this.activeIndex) || (this.listViewInstance.showCheckBox && this.uiIndices.activeIndices.length)) {\n            var dataCollection = [];\n            var textCollection = [];\n            if (typeof this.listViewInstance.dataSource[0] === 'string' ||\n                typeof this.listViewInstance.dataSource[0] === 'number') {\n                var curViewDS_1 = this.listViewInstance.curViewDS;\n                if (this.listViewInstance.showCheckBox) {\n                    var indices = this.uiIndices.activeIndices;\n                    for (var i = 0; i < indices.length; i++) {\n                        dataCollection.push(curViewDS_1[indices[i]]);\n                    }\n                    return {\n                        text: dataCollection,\n                        data: dataCollection,\n                        index: this.uiIndices.activeIndices.map(function (index) {\n                            return _this.listViewInstance.dataSource.indexOf(curViewDS_1[index]);\n                        })\n                    };\n                }\n                else {\n                    return {\n                        text: curViewDS_1[this.activeIndex],\n                        data: curViewDS_1[this.activeIndex],\n                        index: this.listViewInstance.dataSource.indexOf(curViewDS_1[this.activeIndex])\n                    };\n                }\n            }\n            else {\n                var curViewDS_2 = this.listViewInstance.curViewDS;\n                var text = this.listViewInstance.fields.text;\n                if (this.listViewInstance.showCheckBox) {\n                    var indexArray = this.uiIndices.activeIndices;\n                    for (var i = 0; i < indexArray.length; i++) {\n                        textCollection.push(curViewDS_2[indexArray[i]][text]);\n                        dataCollection.push(curViewDS_2[indexArray[i]]);\n                    }\n                    var dataSource_1 = this.listViewInstance.dataSource instanceof DataManager\n                        ? curViewDS_2 : this.listViewInstance.dataSource;\n                    return {\n                        text: textCollection,\n                        data: dataCollection,\n                        index: this.uiIndices.activeIndices.map(function (index) {\n                            return dataSource_1.indexOf(curViewDS_2[index]);\n                        })\n                    };\n                }\n                else {\n                    var dataSource = this.listViewInstance.dataSource instanceof DataManager\n                        ? curViewDS_2 : this.listViewInstance.dataSource;\n                    return {\n                        text: curViewDS_2[this.activeIndex][this.listViewInstance.fields.text],\n                        data: curViewDS_2[this.activeIndex],\n                        index: dataSource.indexOf(curViewDS_2[this.activeIndex])\n                    };\n                }\n            }\n        }\n        else {\n            return undefined;\n        }\n    };\n    Virtualization.prototype.selectItem = function (obj) {\n        var resutJSON = this.findDSAndIndexFromId(this.listViewInstance.curViewDS, obj);\n        if (Object.keys(resutJSON).length) {\n            var isSelected = this.activeIndex === resutJSON.index;\n            var isChecked = void 0;\n            this.activeIndex = resutJSON.index;\n            if (this.listViewInstance.showCheckBox) {\n                if (this.uiIndices.activeIndices.indexOf(resutJSON.index) === -1) {\n                    isChecked = true;\n                    this.uiIndices.activeIndices.push(resutJSON.index);\n                }\n                else {\n                    isChecked = false;\n                    this.uiIndices.activeIndices.splice(this.uiIndices.activeIndices.indexOf(resutJSON.index), 1);\n                }\n                if (this.listViewInstance.curUL.querySelector('.' + classNames.focused)) {\n                    this.listViewInstance.curUL.querySelector('.' + classNames.focused).classList.remove(classNames.focused);\n                }\n            }\n            if (this.listViewInstance.getLiFromObjOrElement(obj)) {\n                if (this.listViewInstance.showCheckBox) {\n                    this.listViewInstance.setCheckboxLI(this.listViewInstance.getLiFromObjOrElement(obj));\n                }\n                else {\n                    this.listViewInstance.setSelectLI(this.listViewInstance.getLiFromObjOrElement(obj));\n                }\n            }\n            else {\n                var eventArgs = void 0;\n                if (typeof this.listViewInstance.dataSource[0] === 'string' ||\n                    typeof this.listViewInstance.dataSource[0] === 'number') {\n                    eventArgs = {\n                        text: this.listViewInstance.curViewDS[this.activeIndex],\n                        data: this.listViewInstance.curViewDS[this.activeIndex],\n                        index: this.activeIndex\n                    };\n                }\n                else {\n                    var curViewDS = this.listViewInstance.curViewDS;\n                    eventArgs = {\n                        text: curViewDS[this.activeIndex][this.listViewInstance.fields.text],\n                        data: curViewDS[this.activeIndex],\n                        index: this.activeIndex\n                    };\n                }\n                if (this.listViewInstance.showCheckBox) {\n                    eventArgs.isChecked = isChecked;\n                    this.listViewInstance.trigger('select', eventArgs);\n                }\n                else if (!isSelected) {\n                    this.listViewInstance.removeSelect();\n                    this.listViewInstance.trigger('select', eventArgs);\n                }\n            }\n        }\n        else if (isNullOrUndefined(obj) && !this.listViewInstance.showCheckBox) {\n            this.listViewInstance.removeSelect();\n            this.activeIndex = undefined;\n        }\n    };\n    Virtualization.prototype.enableItem = function (obj) {\n        var resutJSON = this.findDSAndIndexFromId(this.listViewInstance.curViewDS, obj);\n        if (Object.keys(resutJSON).length) {\n            this.uiIndices.disabledItemIndices.splice(this.uiIndices.disabledItemIndices.indexOf(resutJSON.index), 1);\n        }\n    };\n    Virtualization.prototype.disableItem = function (obj) {\n        var resutJSON = this.findDSAndIndexFromId(this.listViewInstance.curViewDS, obj);\n        if (Object.keys(resutJSON).length && this.uiIndices.disabledItemIndices.indexOf(resutJSON.index) === -1) {\n            this.uiIndices.disabledItemIndices.push(resutJSON.index);\n        }\n    };\n    Virtualization.prototype.showItem = function (obj) {\n        var resutJSON = this.findDSAndIndexFromId(this.listViewInstance.curViewDS, obj);\n        if (Object.keys(resutJSON).length) {\n            this.uiIndices.hiddenItemIndices.splice(this.uiIndices.hiddenItemIndices.indexOf(resutJSON.index), 1);\n        }\n    };\n    Virtualization.prototype.hideItem = function (obj) {\n        var resutJSON = this.findDSAndIndexFromId(this.listViewInstance.curViewDS, obj);\n        if (Object.keys(resutJSON).length && this.uiIndices.hiddenItemIndices.indexOf(resutJSON.index) === -1) {\n            this.uiIndices.hiddenItemIndices.push(resutJSON.index);\n        }\n    };\n    Virtualization.prototype.removeItem = function (obj) {\n        var dataSource;\n        var curViewDS = this.listViewInstance.curViewDS;\n        var resutJSON = this.findDSAndIndexFromId(curViewDS, obj);\n        if (Object.keys(resutJSON).length) {\n            dataSource = resutJSON.data;\n            if (curViewDS[resutJSON.index - 1] &&\n                curViewDS[resutJSON.index - 1].isHeader &&\n                (curViewDS[resutJSON.index - 1])\n                    .items.length === 1) {\n                this.removeUiItem(resutJSON.index - 1);\n                this.removeUiItem(resutJSON.index - 1);\n            }\n            else {\n                this.removeUiItem(resutJSON.index);\n            }\n        }\n        var listDataSource = this.listViewInstance.dataSource instanceof DataManager\n            ? this.listViewInstance.localData : this.listViewInstance.dataSource;\n        var index = listDataSource.indexOf(dataSource);\n        if (index !== -1) {\n            listDataSource.splice(index, 1);\n            this.listViewInstance.setViewDataSource(listDataSource);\n        }\n        // recollect all the list item into collection\n        this.listViewInstance.liCollection =\n            this.listViewInstance.curUL.querySelectorAll('li');\n    };\n    Virtualization.prototype.setCheckboxLI = function (li, e) {\n        var index = Array.prototype.indexOf.call(this.listViewInstance.curUL.querySelectorAll('li'), li) + this.uiFirstIndex;\n        this.activeIndex = Array.prototype.indexOf.call(this.listViewInstance.curUL.querySelectorAll('li'), li) + this.uiFirstIndex;\n        if (li.classList.contains(classNames.selected)) {\n            if (this.uiIndices.activeIndices.indexOf(index) === -1) {\n                this.uiIndices.activeIndices.push(index);\n            }\n        }\n        else {\n            this.uiIndices.activeIndices.splice(this.uiIndices.activeIndices.indexOf(index), 1);\n        }\n    };\n    Virtualization.prototype.setSelectLI = function (li, e) {\n        this.activeIndex = Array.prototype.indexOf.call(this.listViewInstance.curUL.querySelectorAll('li'), li) + this.uiFirstIndex;\n    };\n    Virtualization.prototype.checkedItem = function (checked) {\n        if (checked) {\n            this.uiIndices.activeIndices = [];\n            this.activeIndex = undefined;\n            var data = this.listViewInstance.curViewDS;\n            for (var index = 0; index < data.length; index++) {\n                if (!data[index].isHeader) {\n                    this.uiIndices.activeIndices.push(index);\n                }\n            }\n        }\n        else {\n            this.activeIndex = undefined;\n            this.uiIndices.activeIndices = [];\n        }\n    };\n    Virtualization.prototype.addUiItem = function (index) {\n        // virtually new add list item based on the scollbar position\n        // if the scroll bar is at the top, just pretend the new item has been added since no UI\n        // change is required for the item that has been added at last but when scroll bar is at the bottom\n        // just detach top and inject into bottom to mimic new item is added\n        var curViewDs = this.listViewInstance.curViewDS;\n        this.changeUiIndices(index, true);\n        if (this.activeIndex && this.activeIndex >= index) {\n            this.activeIndex++;\n        }\n        if (this.listViewInstance.showCheckBox &&\n            curViewDs[index][this.listViewInstance.fields.isChecked]) {\n            this.uiIndices.activeIndices.push(index);\n        }\n        if (!parseFloat(this.bottomElement.style.height) && !parseFloat(this.topElement.style.height)) {\n            this.bottomElement.style.height = parseFloat(this.bottomElement.style.height) + this.listItemHeight + 'px';\n        }\n        if (parseFloat(this.bottomElement.style.height)) {\n            var liItem = this.listViewInstance.curUL.lastElementChild.previousSibling;\n            var target = this.listViewInstance.getLiFromObjOrElement(curViewDs[index + 1]) ||\n                this.listViewInstance.getLiFromObjOrElement(curViewDs[index + 2]);\n            if (target) {\n                this.bottomElement.style.height = parseFloat(this.bottomElement.style.height) + this.listItemHeight + 'px';\n                this.updateUI(liItem, index, target);\n            }\n        }\n        else {\n            var liItem = this.listViewInstance.curUL.firstElementChild.nextSibling;\n            var target = void 0;\n            if ((Object.keys(this.listViewInstance.curViewDS).length - 1) === index) {\n                target = this.listViewInstance.curUL.lastElementChild;\n            }\n            else {\n                target = this.listViewInstance.getLiFromObjOrElement(curViewDs[index + 1]) ||\n                    this.listViewInstance.getLiFromObjOrElement(curViewDs[index + 2]);\n            }\n            this.topElement.style.height = parseFloat(this.topElement.style.height) + this.listItemHeight + 'px';\n            this.uiFirstIndex++;\n            this.uiLastIndex++;\n            if (target) {\n                this.updateUI(liItem, index, target);\n                this.listViewInstance.isWindow ? window.scrollTo(0, (pageYOffset + this.listItemHeight)) :\n                    this.listViewInstance.element.scrollTop += this.listItemHeight;\n            }\n        }\n        this.totalHeight += this.listItemHeight;\n        this.listDiff = Math.round(parseFloat(this.topElement.style.height) / this.listItemHeight);\n    };\n    Virtualization.prototype.removeUiItem = function (index) {\n        this.totalHeight -= this.listItemHeight;\n        var curViewDS = this.listViewInstance.curViewDS[index];\n        var liItem = this.listViewInstance.getLiFromObjOrElement(curViewDS);\n        this.listViewInstance.curViewDS.splice(index, 1);\n        if (this.activeIndex && this.activeIndex >= index) {\n            this.activeIndex--;\n        }\n        if (liItem) {\n            if (this.domItemCount > Object.keys(this.listViewInstance.curViewDS).length) {\n                detach(liItem);\n                this.domItemCount--;\n                this.uiLastIndex--;\n                this.totalHeight = 0;\n            }\n            else {\n                if (liItem.classList.contains(classNames.disable)) {\n                    liItem.classList.remove(classNames.disable);\n                    this.uiIndices.disabledItemIndices.splice(this.uiIndices.disabledItemIndices.indexOf(index), 1);\n                }\n                if (liItem.style.display === 'none') {\n                    liItem.style.display = '';\n                    this.uiIndices.hiddenItemIndices.splice(this.uiIndices.hiddenItemIndices.indexOf(index), 1);\n                }\n                if (this.listViewInstance.showCheckBox && liItem.classList.contains(classNames.selected)) {\n                    this.listViewInstance.removeSelect();\n                    this.uiIndices.activeIndices.splice(this.uiIndices.activeIndices.indexOf(index), 1);\n                    var checklistElement = liItem.querySelector('.' + classNames.checkboxWrapper);\n                    checklistElement.removeAttribute('aria-checked');\n                    checklistElement.firstElementChild.classList.remove(classNames.checked);\n                    if (liItem.classList.contains(classNames.focused)) {\n                        liItem.classList.remove(classNames.focused);\n                        this.activeIndex = undefined;\n                    }\n                }\n                else if (liItem.classList.contains(classNames.selected)) {\n                    this.listViewInstance.removeSelect();\n                    this.activeIndex = undefined;\n                }\n                if (!parseFloat(this.bottomElement.style.height) && !parseFloat(this.topElement.style.height)) {\n                    this.updateUI(liItem, this.uiLastIndex, this.bottomElement);\n                }\n                else if (parseFloat(this.bottomElement.style.height)) {\n                    this.bottomElement.style.height = parseFloat(this.bottomElement.style.height) - this.listItemHeight + 'px';\n                    this.updateUI(liItem, this.uiLastIndex, this.bottomElement);\n                }\n                else {\n                    this.topElement.style.height = parseFloat(this.topElement.style.height) - this.listItemHeight + 'px';\n                    this.updateUI(liItem, (this.uiFirstIndex - 1), this.topElement.nextSibling);\n                    this.uiLastIndex--;\n                    this.uiFirstIndex--;\n                }\n            }\n        }\n        this.changeUiIndices(index, false);\n        this.listDiff = Math.round(parseFloat(this.topElement.style.height) / this.listItemHeight);\n    };\n    Virtualization.prototype.changeUiIndices = function (index, increment) {\n        var keys = Object.keys(this.uiIndices);\n        for (var ind = 0; ind < keys.length; ind++) {\n            this.uiIndices[keys[ind]] = this.uiIndices[keys[ind]].map(function (i) {\n                if (i >= index) {\n                    return increment ? ++i : --i;\n                }\n                else {\n                    return i;\n                }\n            });\n        }\n    };\n    Virtualization.prototype.addItem = function (data, fields, dataSource) {\n        for (var i = 0; i < data.length; i++) {\n            var currentItem = data[i];\n            // push the given data to main data array\n            dataSource.push(currentItem);\n            // recalculate all the group data or other datasource related things\n            this.listViewInstance.setViewDataSource(dataSource);\n            // render list items for first time due to no datasource present earlier\n            if (!this.domItemCount) {\n                // fresh rendering for first time\n                if ((this.listViewInstance.template || this.listViewInstance.groupTemplate) && !this.isNgTemplate()) {\n                    this.listViewInstance.listBaseOption.template = null;\n                    this.listViewInstance.listBaseOption.groupTemplate = null;\n                    this.listViewInstance.listBaseOption.itemCreated = this.createUIItem.bind(this);\n                }\n                this.uiVirtualization();\n                // when expected expected DOM count doesn't meet the condition we need to create and inject new item into DOM\n            }\n            else if (this.domItemCount < this.expectedDomItemCount) {\n                var ds = this.listViewInstance.findItemFromDS(dataSource, fields);\n                if (ds instanceof Array) {\n                    if (this.listViewInstance.ulElement) {\n                        var index = this.listViewInstance.curViewDS.indexOf(currentItem);\n                        // inject new list item into DOM\n                        this.createAndInjectNewItem(currentItem, index);\n                        // check for group header item\n                        var curViewDS = this.listViewInstance.curViewDS[index - 1];\n                        if (curViewDS && curViewDS.isHeader && curViewDS.items.length === 1) {\n                            // target group item index in datasource\n                            --index;\n                            // inject new group header into DOM for previously created list item\n                            this.createAndInjectNewItem(curViewDS, index);\n                        }\n                    }\n                    // recollect all the list item into collection\n                    this.listViewInstance.liCollection =\n                        this.listViewInstance.curUL.querySelectorAll('li');\n                }\n            }\n            else {\n                var index = this.listViewInstance.curViewDS.indexOf(currentItem);\n                // virtually new add list item based on the scollbar position\n                this.addUiItem(index);\n                // check for group header item needs to be added\n                var curViewDS = this.listViewInstance.curViewDS[index - 1];\n                if (curViewDS && curViewDS.isHeader && curViewDS.items.length === 1) {\n                    this.addUiItem(index - 1);\n                }\n            }\n        }\n    };\n    Virtualization.prototype.createAndInjectNewItem = function (itemData, index) {\n        // generate li item for given datasource\n        var target;\n        var li = ListBase.createListItemFromJson(this.listViewInstance.createElement, [itemData], this.listViewInstance.listBaseOption);\n        // check for target element whether to insert before last item or group item\n        if ((Object.keys(this.listViewInstance.curViewDS).length - 1) === index) {\n            target = this.listViewInstance.curUL.lastElementChild;\n        }\n        else {\n            // target group header's first child item to append its header\n            target = this.listViewInstance.getLiFromObjOrElement(this.listViewInstance.curViewDS[index + 1]) ||\n                this.listViewInstance.getLiFromObjOrElement(this.listViewInstance.curViewDS[index + 2]);\n        }\n        // insert before the target element\n        this.listViewInstance.ulElement.insertBefore(li[0], target);\n        // increment internal DOM count, last index count for new element\n        this.domItemCount++;\n        if (this.bottomElementHeight <= 0) {\n            this.uiLastIndex++;\n        }\n        // recalculate the current item height, to avoid jumpy scroller\n        this.refreshItemHeight();\n    };\n    Virtualization.prototype.createUIItem = function (args) {\n        var virtualTemplate = this.listViewInstance.template;\n        var template = this.listViewInstance.createElement('div');\n        var commonTemplate = '<div class=\"e-text-content\" role=\"presentation\"> ' +\n            '<span class=\"e-list-text\"> ${' + this.listViewInstance.fields.text + '} </span></div>';\n        if (this.listViewInstance.showCheckBox) {\n            // tslint:disable-next-line:no-any\n            this.listViewInstance.renderCheckbox(args);\n            // tslint:enable-next-line:no-any\n            if (!isNullOrUndefined(this.listViewInstance.virtualCheckBox.outerHTML)) {\n                var div = document.createElement('div');\n                div.innerHTML = this.listViewInstance.template || commonTemplate;\n                div.children[0].classList.add('e-checkbox');\n                this.listViewInstance.checkBoxPosition === 'Left' ? div.children[0].classList.add('e-checkbox-left') :\n                    div.children[0].classList.add('e-checkbox-right');\n                if (this.listViewInstance.checkBoxPosition === 'Left') {\n                    div.children[0].insertBefore(this.listViewInstance.virtualCheckBox, div.childNodes[0].children[0]);\n                }\n                else {\n                    div.children[0].appendChild(this.listViewInstance.virtualCheckBox);\n                }\n                this.listViewInstance.template = div.innerHTML;\n            }\n            template.innerHTML = this.listViewInstance.template;\n            this.listViewInstance.template = virtualTemplate;\n        }\n        else {\n            template.innerHTML = this.listViewInstance.template || commonTemplate;\n        }\n        // tslint:disable-next-line:no-any\n        var templateElements = template.getElementsByTagName('*');\n        var groupTemplate = this.listViewInstance.createElement('div');\n        if (this.listViewInstance.fields.groupBy) {\n            groupTemplate.innerHTML = this.listViewInstance.groupTemplate || commonTemplate;\n        }\n        // tslint:disable-next-line:no-any\n        var groupTemplateElements = groupTemplate.getElementsByTagName('*');\n        if (args.curData.isHeader) {\n            this.headerData = args.curData;\n        }\n        this.templateData = args.curData.isHeader ? args.curData.items[0] :\n            args.curData;\n        args.item.innerHTML = '';\n        args.item.context = { data: args.curData, nodes: { flatTemplateNodes: [], groupTemplateNodes: [] } };\n        for (var i = 0; i < templateElements.length; i++) {\n            this.compileTemplate(templateElements[i], args.item, false);\n        }\n        for (var i = 0; i < groupTemplateElements.length; i++) {\n            this.compileTemplate(groupTemplateElements[i], args.item, true);\n        }\n        args.item.context.template = args.curData.isHeader ? template.firstElementChild :\n            groupTemplate.firstElementChild;\n        args.item.context.type = args.curData.isHeader ? 'flatList' : 'groupList';\n        var element = args.curData.isHeader ? groupTemplate : template;\n        args.item.insertBefore(element.firstElementChild, null);\n    };\n    Virtualization.prototype.compileTemplate = function (element, item, isHeader) {\n        this.textProperty(element, item, isHeader);\n        this.classProperty(element, item, isHeader);\n        this.attributeProperty(element, item, isHeader);\n    };\n    Virtualization.prototype.onChange = function (newData, listElement) {\n        listElement.context.data = newData;\n        var groupTemplateNodes = listElement.context.nodes.groupTemplateNodes;\n        var flatTemplateNodes = listElement.context.nodes.flatTemplateNodes;\n        if (!isNullOrUndefined(newData.isHeader) && newData.isHeader && listElement.context.type === 'groupList') {\n            var element = listElement.firstElementChild;\n            detach(listElement.firstElementChild);\n            listElement.insertBefore(listElement.context.template, null);\n            listElement.context.template = element;\n            listElement.context.type = 'flatList';\n            for (var i = 0; i < groupTemplateNodes.length; i++) {\n                groupTemplateNodes[i].onChange(newData);\n            }\n        }\n        else if (!newData.isHeader && listElement.context.type === 'flatList') {\n            var element = listElement.firstElementChild;\n            detach(listElement.firstElementChild);\n            listElement.insertBefore(listElement.context.template, null);\n            listElement.context.template = element;\n            listElement.context.type = 'groupList';\n            for (var i = 0; i < flatTemplateNodes.length; i++) {\n                flatTemplateNodes[i].onChange(newData);\n            }\n        }\n        else if (!newData.isHeader) {\n            for (var i = 0; i < flatTemplateNodes.length; i++) {\n                flatTemplateNodes[i].onChange(newData);\n            }\n        }\n        else {\n            for (var i = 0; i < groupTemplateNodes.length; i++) {\n                groupTemplateNodes[i].onChange(newData);\n            }\n        }\n    };\n    Virtualization.prototype.updateContextData = function (listElement, node, isHeader) {\n        if (isHeader) {\n            listElement.context.nodes.groupTemplateNodes.push(node);\n        }\n        else {\n            listElement.context.nodes.flatTemplateNodes.push(node);\n        }\n    };\n    Virtualization.prototype.classProperty = function (element, listElement, isHeader) {\n        var regex = new RegExp('\\\\${([^}]*)}', 'g');\n        var resultantOutput = [];\n        var regexMatch;\n        while (regexMatch !== null) {\n            var match = regex.exec(element.className);\n            resultantOutput.push(match);\n            regexMatch = match;\n            if (regexMatch === null) {\n                resultantOutput.pop();\n            }\n        }\n        if (resultantOutput && resultantOutput.length) {\n            var _loop_1 = function (i) {\n                var classNameMatch = resultantOutput[i];\n                var classFunction;\n                if (classNameMatch[1].indexOf('?') !== -1 && classNameMatch[1].indexOf(':') !== -1) {\n                    // tslint:disable-next-line:no-function-constructor-with-string-args\n                    classFunction = new Function('data', 'return ' + classNameMatch[1].replace(/\\$/g, 'data.'));\n                }\n                else {\n                    // tslint:disable-next-line:no-function-constructor-with-string-args\n                    classFunction = new Function('data', 'return ' + 'data.' + classNameMatch[1]);\n                }\n                var subNode = {};\n                if (isHeader) {\n                    subNode.bindedvalue = classFunction(this_1.headerData);\n                }\n                else {\n                    subNode.bindedvalue = classFunction(this_1.templateData);\n                }\n                subNode.onChange = function (value) {\n                    if (subNode.bindedvalue) {\n                        removeClass([element], subNode.bindedvalue.split(' ').filter(function (css) { return css; }));\n                    }\n                    var newCss = classFunction(value);\n                    if (newCss) {\n                        addClass([element], (newCss).split(' ').filter(function (css) { return css; }));\n                    }\n                    subNode.bindedvalue = newCss;\n                };\n                var className = classNameMatch[0].split(' ');\n                for (var i_1 = 0; i_1 < className.length; i_1++) {\n                    element.classList.remove(className[i_1]);\n                }\n                if (subNode.bindedvalue) {\n                    addClass([element], subNode.bindedvalue.split(' ').filter(function (css) { return css; }));\n                }\n                this_1.updateContextData(listElement, subNode, isHeader);\n            };\n            var this_1 = this;\n            for (var i = 0; i < resultantOutput.length; i++) {\n                _loop_1(i);\n            }\n        }\n    };\n    Virtualization.prototype.attributeProperty = function (element, listElement, isHeader) {\n        var attributeNames = [];\n        for (var i = 0; i < element.attributes.length; i++) {\n            attributeNames.push(element.attributes[i].nodeName);\n        }\n        if (attributeNames.indexOf('class') !== -1) {\n            attributeNames.splice(attributeNames.indexOf('class'), 1);\n        }\n        var _loop_2 = function (i) {\n            var attributeName = attributeNames[i];\n            var attrNameMatch = new RegExp('\\\\${([^}]*)}', 'g').exec(attributeName) || [];\n            var attrValueMatch = new RegExp('\\\\${([^}]*)}', 'g').exec(element.getAttribute(attributeName))\n                || [];\n            var attributeNameFunction;\n            var attributeValueFunction;\n            if (attrNameMatch.length || attrValueMatch.length) {\n                if (attrNameMatch[1]) {\n                    // tslint:disable-next-line:no-function-constructor-with-string-args\n                    attributeNameFunction = new Function('data', 'return ' + 'data.' + attrNameMatch[1]);\n                }\n                if (attrValueMatch[1]) {\n                    if (attrValueMatch[1].indexOf('?') !== -1 && attrValueMatch[1].indexOf(':') !== -1) {\n                        // tslint:disable-next-line:no-function-constructor-with-string-args\n                        attributeValueFunction = new Function('data', 'return ' + attrValueMatch[1].replace(/\\$/g, 'data.'));\n                    }\n                    else {\n                        // tslint:disable-next-line:no-function-constructor-with-string-args\n                        attributeValueFunction = new Function('data', 'return ' + 'data.' + attrValueMatch[1]);\n                    }\n                }\n                var subNode_1 = {};\n                if (isHeader) {\n                    subNode_1.bindedvalue = [attrNameMatch[1] === undefined ? undefined : attributeNameFunction(this_2.headerData),\n                        attrValueMatch[1] === undefined ? undefined : attributeValueFunction(this_2.headerData)];\n                }\n                else {\n                    subNode_1.bindedvalue = [attrNameMatch[1] === undefined ? undefined : attributeNameFunction(this_2.templateData),\n                        attrValueMatch[1] === undefined ? undefined : attributeValueFunction(this_2.templateData)];\n                }\n                subNode_1.attrName = subNode_1.bindedvalue[0] === undefined ?\n                    attributeName : subNode_1.bindedvalue[0];\n                subNode_1.onChange = function (value) {\n                    var bindedvalue = subNode_1.bindedvalue[1] === undefined ?\n                        element.getAttribute(subNode_1.attrName) : attributeValueFunction(value);\n                    element.removeAttribute(subNode_1.attrName);\n                    subNode_1.attrName = subNode_1.bindedvalue[0] === undefined ? subNode_1.attrName : attributeNameFunction(value);\n                    element.setAttribute(subNode_1.attrName, bindedvalue);\n                    subNode_1.bindedvalue = [subNode_1.bindedvalue[0] === undefined ? undefined : attributeNameFunction(value),\n                        subNode_1.bindedvalue[1] === undefined ? undefined : attributeValueFunction(value)];\n                };\n                var attributeValue = subNode_1.bindedvalue[1] === undefined ? element.getAttribute(attributeName) :\n                    subNode_1.bindedvalue[1];\n                element.removeAttribute(attributeName);\n                element.setAttribute(subNode_1.attrName, attributeValue);\n                this_2.updateContextData(listElement, subNode_1, isHeader);\n            }\n        };\n        var this_2 = this;\n        for (var i = 0; i < attributeNames.length; i++) {\n            _loop_2(i);\n        }\n    };\n    Virtualization.prototype.textProperty = function (element, listElement, isHeader) {\n        var regex = new RegExp('\\\\${([^}]*)}', 'g');\n        var resultantOutput = [];\n        var regexMatch;\n        while (regexMatch !== null) {\n            var match = regex.exec(element.innerText);\n            resultantOutput.push(match);\n            regexMatch = match;\n            if (regexMatch === null) {\n                resultantOutput.pop();\n            }\n        }\n        var isChildHasTextContent = Array.prototype.some.call(element.children, function (element) {\n            if (new RegExp('\\\\${([^}]*)}', 'g').exec(element.innerText)) {\n                return true;\n            }\n            else {\n                return false;\n            }\n        });\n        if (resultantOutput && resultantOutput.length && !isChildHasTextContent) {\n            var _loop_3 = function (i) {\n                var textPropertyMatch = resultantOutput[i];\n                var subNode = {};\n                var textFunction;\n                if (textPropertyMatch[1].indexOf('?') !== -1 && textPropertyMatch[1].indexOf(':') !== -1) {\n                    // tslint:disable-next-line:no-function-constructor-with-string-args\n                    textFunction = new Function('data', 'return ' + textPropertyMatch[1].replace(/\\$/g, 'data.'));\n                }\n                else {\n                    // tslint:disable-next-line:no-function-constructor-with-string-args\n                    textFunction = new Function('data', 'return ' + 'data.' + textPropertyMatch[1]);\n                }\n                if (isHeader) {\n                    subNode.bindedvalue = textFunction(this_3.headerData);\n                }\n                else {\n                    subNode.bindedvalue = textFunction(this_3.templateData);\n                }\n                subNode.onChange = function (value) {\n                    element.innerText = element.innerText.replace(subNode.bindedvalue, textFunction(value));\n                    subNode.bindedvalue = textFunction(value);\n                };\n                element.innerText = element.innerText.replace(textPropertyMatch[0], subNode.bindedvalue);\n                this_3.updateContextData(listElement, subNode, isHeader);\n            };\n            var this_3 = this;\n            for (var i = 0; i < resultantOutput.length; i++) {\n                _loop_3(i);\n            }\n        }\n    };\n    Virtualization.prototype.reRenderUiVirtualization = function () {\n        this.wireScrollEvent(true);\n        if (this.listViewInstance.contentContainer) {\n            detach(this.listViewInstance.contentContainer);\n        }\n        this.listViewInstance.preRender();\n        // resetting the dom count to 0, to avoid edge case of dataSource suddenly becoming zero\n        // and then manually adding item using addItem API\n        this.domItemCount = 0;\n        this.listViewInstance.header();\n        this.listViewInstance.setLocalData();\n    };\n    Virtualization.prototype.updateUI = function (element, index, targetElement) {\n        var onChange = this.isNgTemplate() ? this.onNgChange : this.onChange;\n        if (this.listViewInstance.template || this.listViewInstance.groupTemplate) {\n            var curViewDS = this.listViewInstance.curViewDS[index];\n            element.dataset.uid = curViewDS[this.listViewInstance.fields.id] ?\n                curViewDS[this.listViewInstance.fields.id].toString() : ListBase.generateId();\n            onChange(curViewDS, element, this);\n        }\n        else {\n            this.updateUiContent(element, index);\n        }\n        this.changeElementAttributes(element, index);\n        if (targetElement) {\n            this.listViewInstance.ulElement.insertBefore(element, targetElement);\n        }\n    };\n    Virtualization.prototype.onNgChange = function (newData, listElement, virtualThis) {\n        // compile given target element with template for new data\n        var templateCompiler = compile(virtualThis.listViewInstance.template);\n        var resultElement = templateCompiler(newData);\n        while (listElement.lastChild) {\n            listElement.removeChild(listElement.lastChild);\n        }\n        listElement.appendChild(resultElement[0]);\n    };\n    Virtualization.prototype.getModuleName = function () {\n        return 'virtualization';\n    };\n    Virtualization.prototype.destroy = function () {\n        this.wireScrollEvent(true);\n    };\n    return Virtualization;\n}());\nexport { Virtualization };\n"]},"metadata":{},"sourceType":"module"}