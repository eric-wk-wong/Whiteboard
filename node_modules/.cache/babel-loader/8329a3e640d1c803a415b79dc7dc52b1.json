{"ast":null,"code":"var _jsxFileName = \"D:\\\\developing\\\\projects\\\\whiteboard2.0\\\\src\\\\components\\\\page\\\\popwindow.js\";\nimport React from \"react\";\nimport { Button, ButtonToolbar, Modal, Form, Col } from 'react-bootstrap';\nimport baruch from '../images/baruchlogo.png';\nimport firebase from '../firebase/base';\n\nclass PopWindow extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      category: null,\n      title: null,\n      gradeWeight: null,\n      description: null,\n      metalshow: false\n    };\n  }\n\n  componentDidMount() {\n    const db = firebase.firestore();\n    db.doc(this.props.state.userCourse).collection('assignment').add({\n      category: this.state.category,\n      title: this.state.title,\n      gradeWeight: this.state.gradeWeight,\n      description: this.state.description\n    });\n  }\n\n  render() {\n    return React.createElement(ButtonToolbar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, React.createElement(Button, {\n      size: \"sm\",\n      className: \"blogicon expand\",\n      variant: \"primary\",\n      onClick: () => setModalShow(true),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, \"Create\")), React.createElement(Modal, Object.assign({}, this.props, {\n      size: \"lg\",\n      \"aria-labelledby\": \"contained-modal-title-vcenter\",\n      centered: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }), React.createElement(Modal.Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, React.createElement(Modal.Title, {\n      id: \"contained-modal-title-vcenter\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, React.createElement(\"center\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: baruch,\n      width: \"30%\",\n      \"align-item\": \"right\",\n      alt: \"baruchlogo\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    })))), React.createElement(Modal.Body, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, React.createElement(Form, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, React.createElement(Form.Group, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, \"Category\")), React.createElement(Form.Control, {\n      as: \"select\",\n      value: \"Choose...\",\n      onChange: e => {\n        this.setState({\n          category: e.target.value\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, \"Category...\"), React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, \"Assignment\"), React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, \"Project\"), React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, \"Exam\"))), React.createElement(Form.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(Form.Group, {\n      as: Col,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, \"Title\")), React.createElement(Form.Control, {\n      type: \"text\",\n      placeholder: \"Enter Title\",\n      onChange: e => {\n        this.setState({\n          title: e.target.value\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    })), React.createElement(Form.Group, {\n      as: Col,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, \"Grade Weight\")), React.createElement(Form.Control, {\n      type: \"text\",\n      placeholder: \"Enter Grade Weight\",\n      onChange: e => {\n        this.setState({\n          gradeWeight: e.target.value\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }))), React.createElement(Form.Group, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, \"Description\")), React.createElement(Form.Control, {\n      as: \"textarea\",\n      rows: \"5\",\n      placeholder: \"Enter Description\",\n      onChange: e => {\n        this.setState({\n          description: e.target.value\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    })), React.createElement(Button, {\n      variant: \"primary\",\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, \"Post\")))), React.createElement(Modal.Footer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(Button, {\n      variant: \"secondary\",\n      onClick: this.props.onHide,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, \"Close\"))));\n  }\n\n}\n/*function PopWindow(props) {\n  console.log(props.state)\n  const [modalShow, setModalShow] = React.useState(false);\n   return (\n    <ButtonToolbar>\n      <Button size='sm' className=\"blogicon expand\" variant=\"primary\" onClick={() => setModalShow(true)}>\n        <strong>Create</strong>\n      </Button>\n       <MyVerticallyCenteredModal\n        state={props.state}\n        show={modalShow}\n        onHide={() => setModalShow(false)}\n      />\n    </ButtonToolbar>\n  );\n}*/\n\n\nexport default PopWindow;","map":{"version":3,"sources":["D:/developing/projects/whiteboard2.0/src/components/page/popwindow.js"],"names":["React","Button","ButtonToolbar","Modal","Form","Col","baruch","firebase","PopWindow","Component","state","category","title","gradeWeight","description","metalshow","componentDidMount","db","firestore","doc","props","userCourse","collection","add","render","setModalShow","e","setState","target","value","onHide"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport {Button, ButtonToolbar, Modal,Form,Col} from 'react-bootstrap';\nimport baruch from '../images/baruchlogo.png';\nimport firebase from '../firebase/base'\n\nclass PopWindow extends React.Component {\n  state ={\n    category:null,\n    title: null,\n    gradeWeight: null,\n    description: null,\n    metalshow: false\n  }\n  componentDidMount(){\n    const db = firebase.firestore()\n    db.doc(this.props.state.userCourse).collection('assignment').add({category: this.state.category,\n                                                                                    title: this.state.title,\n                                                                                    gradeWeight: this.state.gradeWeight,\n                                                                                    description: this.state.description})\n    }\n      render(){\n    return (\n      <ButtonToolbar>\n        <Button size='sm' className=\"blogicon expand\" variant=\"primary\" onClick={() => setModalShow(true)}>\n          <strong>Create</strong>\n        </Button>\n\n      <Modal\n        {...this.props}\n        size=\"lg\"\n        aria-labelledby=\"contained-modal-title-vcenter\"\n        centered\n      >\n        <Modal.Header>\n          <Modal.Title id=\"contained-modal-title-vcenter\">\n          <center><img src={baruch} width=\"30%\" align-item=\"right\" alt=\"baruchlogo\"/></center>\n          </Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n        <Form>\n        <Form.Group>\n            <Form.Label><b>Category</b></Form.Label>\n            <Form.Control as=\"select\" value=\"Choose...\" onChange={e => {this.setState({category:e.target.value})}} >\n                <option>Category...</option>\n                <option>Assignment</option>\n                <option>Project</option>\n                <option>Exam</option>\n            </Form.Control>\n        </Form.Group>\n        <Form.Row>\n            <Form.Group as={Col} >\n            <Form.Label><b>Title</b></Form.Label>\n            <Form.Control type=\"text\" placeholder=\"Enter Title\" onChange={e => {this.setState({title:e.target.value})}} />\n            </Form.Group>\n\n            <Form.Group as={Col}>\n            <Form.Label><b>Grade Weight</b></Form.Label>\n            <Form.Control type=\"text\" placeholder=\"Enter Grade Weight\" onChange={e => {this.setState({gradeWeight:e.target.value})}}/>\n            </Form.Group>\n        </Form.Row>\n\n        <Form.Group>\n            <Form.Label><b>Description</b></Form.Label>\n            <Form.Control as=\"textarea\" rows=\"5\" placeholder=\"Enter Description\" onChange={e => {this.setState({description:e.target.value})}}/>\n        </Form.Group>\n\n        <Button variant=\"primary\" type=\"submit\">\n            <b>Post</b>\n        </Button>\n\n        </Form>\n\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={this.props.onHide}>Close</Button>\n        </Modal.Footer>\n      </Modal>\n      </ButtonToolbar>\n    );\n  }\n  }\n\n  /*function PopWindow(props) {\n    console.log(props.state)\n    const [modalShow, setModalShow] = React.useState(false);\n\n    return (\n      <ButtonToolbar>\n        <Button size='sm' className=\"blogicon expand\" variant=\"primary\" onClick={() => setModalShow(true)}>\n          <strong>Create</strong>\n        </Button>\n\n        <MyVerticallyCenteredModal\n          state={props.state}\n          show={modalShow}\n          onHide={() => setModalShow(false)}\n        />\n      </ButtonToolbar>\n    );\n  }*/\n  export default PopWindow;\n"]},"metadata":{},"sourceType":"module"}