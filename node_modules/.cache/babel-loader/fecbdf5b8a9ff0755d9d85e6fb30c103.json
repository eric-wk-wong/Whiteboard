{"ast":null,"code":"import { HijriParser, isNullOrUndefined } from '@syncfusion/ej2-base';\n/** @hidden */\n\nvar Gregorian =\n/** @class */\nfunction () {\n  function Gregorian() {}\n\n  Gregorian.prototype.firstDateOfMonth = function (date) {\n    return new Date(date.getFullYear(), date.getMonth());\n  };\n\n  Gregorian.prototype.lastDateOfMonth = function (dt) {\n    return new Date(dt.getFullYear(), dt.getMonth() + 1, 0);\n  };\n\n  Gregorian.prototype.isMonthStart = function (date) {\n    return date.getDate() === 1;\n  };\n\n  Gregorian.prototype.getLeapYearDaysCount = function () {\n    return 366;\n  };\n\n  Gregorian.prototype.getYearDaysCount = function (date, interval) {\n    return (date.getFullYear() + interval) % 4 === 0 ? 366 : 365;\n  };\n\n  Gregorian.prototype.getDate = function (date) {\n    return date.getDate();\n  };\n\n  Gregorian.prototype.getMonth = function (date) {\n    return date.getMonth() + 1;\n  };\n\n  Gregorian.prototype.getFullYear = function (date) {\n    return date.getFullYear();\n  };\n\n  Gregorian.prototype.getYearLastDate = function (date, interval) {\n    return new Date(date.getFullYear() + interval, 0, 0);\n  };\n\n  Gregorian.prototype.getMonthDaysCount = function (date) {\n    return this.lastDateOfMonth(date).getDate();\n  };\n\n  Gregorian.prototype.getMonthStartDate = function (date) {\n    return new Date(date.getFullYear(), date.getMonth(), 1, date.getHours(), date.getMinutes());\n  };\n\n  Gregorian.prototype.getMonthEndDate = function (date) {\n    date.setDate(1);\n    return new Date(date.setMonth(date.getMonth() + 1));\n  };\n\n  Gregorian.prototype.getExpectedDays = function (date, days) {\n    return days;\n  };\n\n  Gregorian.prototype.setDate = function (dateObj, date) {\n    dateObj.setDate(date);\n  };\n\n  Gregorian.prototype.setValidDate = function (date, interval, startDate, monthValue, beginDate) {\n    if (!isNullOrUndefined(beginDate)) {\n      date.setMonth((beginDate ? monthValue : date.getMonth()) + interval);\n    } else {\n      date.setMonth(date.getMonth() + interval, startDate);\n    }\n  };\n\n  Gregorian.prototype.setMonth = function (date, interval, startDate) {\n    date.setFullYear(date.getFullYear());\n    date.setMonth(interval - 1);\n    date.setDate(startDate);\n  };\n\n  Gregorian.prototype.addYears = function (date, interval) {\n    date.setFullYear(date.getFullYear() + interval);\n  };\n\n  Gregorian.prototype.isSameMonth = function (date1, date2) {\n    return date1.getMonth() === date2.getMonth();\n  };\n\n  Gregorian.prototype.checkMonth = function (date, months) {\n    return months.indexOf(date.getMonth() + 1) === -1;\n  };\n\n  Gregorian.prototype.compareMonth = function (date1, date2) {\n    return date1.getMonth() > date2.getMonth();\n  };\n\n  Gregorian.prototype.isSameYear = function (date1, date2) {\n    return date1.getFullYear() === date2.getFullYear();\n  };\n\n  Gregorian.prototype.isLastMonth = function (date) {\n    return date.getMonth() === 11;\n  };\n\n  Gregorian.prototype.isLeapYear = function (year, interval) {\n    return (year + interval) % 4 === 0;\n  };\n\n  return Gregorian;\n}();\n\nexport { Gregorian };\n/** @hidden */\n\nvar Islamic =\n/** @class */\nfunction () {\n  function Islamic() {}\n\n  Islamic.prototype.firstDateOfMonth = function (date) {\n    var hDate = HijriParser.getHijriDate(date);\n    var gDate = HijriParser.toGregorian(hDate.year, hDate.month, 1);\n    return gDate;\n  };\n\n  Islamic.prototype.lastDateOfMonth = function (date) {\n    var hDate = this.getHijriDate(date);\n    var gDate = HijriParser.toGregorian(hDate.year, hDate.month, this.getDaysInMonth(hDate.month, hDate.year));\n    var finalGDate = new Date(gDate.getTime());\n    new Date(finalGDate.setDate(finalGDate.getDate() + 1));\n    var finalHDate = this.getHijriDate(finalGDate);\n\n    if (hDate.month === finalHDate.month) {\n      return finalGDate;\n    }\n\n    finalHDate = HijriParser.getHijriDate(gDate);\n\n    if (hDate.month === finalHDate.month) {\n      return gDate;\n    }\n\n    return new Date(gDate.setDate(gDate.getDate() - 1));\n  };\n\n  Islamic.prototype.isMonthStart = function (date) {\n    var hijriDate = this.getHijriDate(date);\n    return hijriDate.date === 1;\n  };\n\n  Islamic.prototype.getLeapYearDaysCount = function () {\n    return 355;\n  };\n\n  Islamic.prototype.getYearDaysCount = function (date, interval) {\n    var hDate = this.getHijriDate(date);\n    return this.isLeapYear(hDate.year, interval) ? 355 : 354;\n  };\n\n  Islamic.prototype.getDate = function (date) {\n    var hijriDate = this.getHijriDate(date);\n    return hijriDate.date;\n  };\n\n  Islamic.prototype.getMonth = function (date) {\n    var hDate = this.getHijriDate(date);\n    return hDate.month;\n  };\n\n  Islamic.prototype.getFullYear = function (date) {\n    var hDate = this.getHijriDate(date);\n    return hDate.year;\n  };\n\n  Islamic.prototype.getYearLastDate = function (date, interval) {\n    var hDate = HijriParser.getHijriDate(date);\n    var gDate = HijriParser.toGregorian(hDate.year + interval, 1, 0);\n    return gDate;\n  };\n\n  Islamic.prototype.getMonthDaysCount = function (date) {\n    var maxDate = this.lastDateOfMonth(date);\n    var hijriDate = this.getHijriDate(maxDate);\n    return hijriDate.date;\n  };\n\n  Islamic.prototype.getMonthStartDate = function (date) {\n    var firstDate = this.firstDateOfMonth(date);\n    return new Date(firstDate.getFullYear(), firstDate.getMonth(), firstDate.getDate(), date.getHours(), date.getMinutes());\n  };\n\n  Islamic.prototype.getMonthEndDate = function (date) {\n    var lastDate = this.lastDateOfMonth(date);\n    lastDate.setDate(lastDate.getDate() + 1);\n    return new Date(lastDate.setMonth(lastDate.getMonth()));\n  };\n\n  Islamic.prototype.getExpectedDays = function (date, days) {\n    var hDate = this.getHijriDate(date);\n    var day = [];\n\n    for (var i = 0; i < days.length; i++) {\n      var gDate = HijriParser.toGregorian(hDate.year, hDate.month, days[i]);\n      day.push(gDate.getDate());\n    }\n\n    return day;\n  };\n\n  Islamic.prototype.setDate = function (dateObj, date) {\n    var hDate = HijriParser.getHijriDate(dateObj);\n    var gDate = HijriParser.toGregorian(hDate.year, hDate.month, date);\n    this.updateDateObj(dateObj, gDate);\n  };\n\n  Islamic.prototype.setValidDate = function (date, interval, startDate, monthValue, beginDate) {\n    var firstDate = !isNullOrUndefined(beginDate) ? this.firstDateOfMonth(beginDate) : date;\n    var hDate = HijriParser.getHijriDate(firstDate);\n    var gDate = HijriParser.toGregorian(hDate.year, hDate.month + interval, startDate);\n    this.updateDateObj(date, gDate);\n  };\n\n  Islamic.prototype.setMonth = function (date, interval, startDate) {\n    var hDate = HijriParser.getHijriDate(date);\n    var gDate = HijriParser.toGregorian(hDate.year, interval, startDate);\n    this.updateDateObj(date, gDate);\n  };\n\n  Islamic.prototype.addYears = function (date, interval, monthValue) {\n    var hDate = HijriParser.getHijriDate(date);\n    var gDate = HijriParser.toGregorian(hDate.year + interval, monthValue, 1);\n    this.updateDateObj(date, gDate);\n  };\n\n  Islamic.prototype.isSameMonth = function (date1, date2) {\n    var currentHijri = this.getHijriDate(date1);\n    var tempHijri = this.getHijriDate(date2);\n    return currentHijri.month === tempHijri.month;\n  };\n\n  Islamic.prototype.checkMonth = function (date, months) {\n    var hDate = this.getHijriDate(date);\n    return months.indexOf(hDate.month) === -1;\n  };\n\n  Islamic.prototype.compareMonth = function (date1, date2) {\n    var hDate = this.getHijriDate(date1);\n    var hDate1 = this.getHijriDate(date2);\n    return hDate.month > hDate1.month;\n  };\n\n  Islamic.prototype.isSameYear = function (date1, date2) {\n    var hDate = this.getHijriDate(date1);\n    var hDate1 = this.getHijriDate(date2);\n    return hDate.year === hDate1.year;\n  };\n\n  Islamic.prototype.isLastMonth = function (date) {\n    var hDate = this.getHijriDate(date);\n    return hDate.month === 12;\n  };\n\n  Islamic.prototype.updateDateObj = function (date, gDate) {\n    date.setFullYear(gDate.getFullYear(), gDate.getMonth(), gDate.getDate());\n  };\n\n  Islamic.prototype.isLeapYear = function (year, interval) {\n    return (14 + 11 * (year + interval)) % 30 < 11;\n  };\n\n  Islamic.prototype.getDaysInMonth = function (month, year) {\n    var length = 0;\n    length = 29 + (month + 1) % 2;\n\n    if (month === 11 && this.isLeapYear(year, 0)) {\n      length++;\n    }\n\n    return length;\n  };\n\n  Islamic.prototype.getHijriDate = function (date) {\n    return HijriParser.getHijriDate(date);\n  };\n\n  return Islamic;\n}();\n\nexport { Islamic };","map":{"version":3,"sources":["D:/developing/projects/whiteboard/node_modules/@syncfusion/ej2-schedule/src/common/calendar-util.js"],"names":["HijriParser","isNullOrUndefined","Gregorian","prototype","firstDateOfMonth","date","Date","getFullYear","getMonth","lastDateOfMonth","dt","isMonthStart","getDate","getLeapYearDaysCount","getYearDaysCount","interval","getYearLastDate","getMonthDaysCount","getMonthStartDate","getHours","getMinutes","getMonthEndDate","setDate","setMonth","getExpectedDays","days","dateObj","setValidDate","startDate","monthValue","beginDate","setFullYear","addYears","isSameMonth","date1","date2","checkMonth","months","indexOf","compareMonth","isSameYear","isLastMonth","isLeapYear","year","Islamic","hDate","getHijriDate","gDate","toGregorian","month","getDaysInMonth","finalGDate","getTime","finalHDate","hijriDate","maxDate","firstDate","lastDate","day","i","length","push","updateDateObj","currentHijri","tempHijri","hDate1"],"mappings":"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","sourcesContent":["import { HijriParser, isNullOrUndefined } from '@syncfusion/ej2-base';\n/** @hidden */\nvar Gregorian = /** @class */ (function () {\n    function Gregorian() {\n    }\n    Gregorian.prototype.firstDateOfMonth = function (date) {\n        return new Date(date.getFullYear(), date.getMonth());\n    };\n    Gregorian.prototype.lastDateOfMonth = function (dt) {\n        return new Date(dt.getFullYear(), dt.getMonth() + 1, 0);\n    };\n    Gregorian.prototype.isMonthStart = function (date) {\n        return (date.getDate() === 1);\n    };\n    Gregorian.prototype.getLeapYearDaysCount = function () {\n        return 366;\n    };\n    Gregorian.prototype.getYearDaysCount = function (date, interval) {\n        return ((date.getFullYear() + interval) % 4 === 0) ? 366 : 365;\n    };\n    Gregorian.prototype.getDate = function (date) {\n        return date.getDate();\n    };\n    Gregorian.prototype.getMonth = function (date) {\n        return (date.getMonth() + 1);\n    };\n    Gregorian.prototype.getFullYear = function (date) {\n        return date.getFullYear();\n    };\n    Gregorian.prototype.getYearLastDate = function (date, interval) {\n        return new Date(date.getFullYear() + interval, 0, 0);\n    };\n    Gregorian.prototype.getMonthDaysCount = function (date) {\n        return this.lastDateOfMonth(date).getDate();\n    };\n    Gregorian.prototype.getMonthStartDate = function (date) {\n        return new Date(date.getFullYear(), date.getMonth(), 1, date.getHours(), date.getMinutes());\n    };\n    Gregorian.prototype.getMonthEndDate = function (date) {\n        date.setDate(1);\n        return new Date(date.setMonth(date.getMonth() + 1));\n    };\n    Gregorian.prototype.getExpectedDays = function (date, days) {\n        return days;\n    };\n    Gregorian.prototype.setDate = function (dateObj, date) {\n        dateObj.setDate(date);\n    };\n    Gregorian.prototype.setValidDate = function (date, interval, startDate, monthValue, beginDate) {\n        if (!isNullOrUndefined(beginDate)) {\n            date.setMonth((beginDate ? monthValue : date.getMonth()) + interval);\n        }\n        else {\n            date.setMonth(date.getMonth() + interval, startDate);\n        }\n    };\n    Gregorian.prototype.setMonth = function (date, interval, startDate) {\n        date.setFullYear(date.getFullYear());\n        date.setMonth(interval - 1);\n        date.setDate(startDate);\n    };\n    Gregorian.prototype.addYears = function (date, interval) {\n        date.setFullYear(date.getFullYear() + interval);\n    };\n    Gregorian.prototype.isSameMonth = function (date1, date2) {\n        return (date1.getMonth() === date2.getMonth());\n    };\n    Gregorian.prototype.checkMonth = function (date, months) {\n        return (months.indexOf(date.getMonth() + 1) === -1);\n    };\n    Gregorian.prototype.compareMonth = function (date1, date2) {\n        return (date1.getMonth() > date2.getMonth());\n    };\n    Gregorian.prototype.isSameYear = function (date1, date2) {\n        return (date1.getFullYear() === date2.getFullYear());\n    };\n    Gregorian.prototype.isLastMonth = function (date) {\n        return (date.getMonth() === 11);\n    };\n    Gregorian.prototype.isLeapYear = function (year, interval) {\n        return ((year + interval) % 4 === 0);\n    };\n    return Gregorian;\n}());\nexport { Gregorian };\n/** @hidden */\nvar Islamic = /** @class */ (function () {\n    function Islamic() {\n    }\n    Islamic.prototype.firstDateOfMonth = function (date) {\n        var hDate = HijriParser.getHijriDate(date);\n        var gDate = HijriParser.toGregorian(hDate.year, hDate.month, 1);\n        return gDate;\n    };\n    Islamic.prototype.lastDateOfMonth = function (date) {\n        var hDate = this.getHijriDate(date);\n        var gDate = HijriParser.toGregorian(hDate.year, hDate.month, this.getDaysInMonth(hDate.month, hDate.year));\n        var finalGDate = new Date(gDate.getTime());\n        new Date(finalGDate.setDate(finalGDate.getDate() + 1));\n        var finalHDate = this.getHijriDate(finalGDate);\n        if (hDate.month === finalHDate.month) {\n            return finalGDate;\n        }\n        finalHDate = HijriParser.getHijriDate(gDate);\n        if (hDate.month === finalHDate.month) {\n            return gDate;\n        }\n        return new Date(gDate.setDate(gDate.getDate() - 1));\n    };\n    Islamic.prototype.isMonthStart = function (date) {\n        var hijriDate = this.getHijriDate(date);\n        return (hijriDate.date === 1);\n    };\n    Islamic.prototype.getLeapYearDaysCount = function () {\n        return 355;\n    };\n    Islamic.prototype.getYearDaysCount = function (date, interval) {\n        var hDate = this.getHijriDate(date);\n        return this.isLeapYear(hDate.year, interval) ? 355 : 354;\n    };\n    Islamic.prototype.getDate = function (date) {\n        var hijriDate = this.getHijriDate(date);\n        return hijriDate.date;\n    };\n    Islamic.prototype.getMonth = function (date) {\n        var hDate = this.getHijriDate(date);\n        return hDate.month;\n    };\n    Islamic.prototype.getFullYear = function (date) {\n        var hDate = this.getHijriDate(date);\n        return hDate.year;\n    };\n    Islamic.prototype.getYearLastDate = function (date, interval) {\n        var hDate = HijriParser.getHijriDate(date);\n        var gDate = HijriParser.toGregorian(hDate.year + interval, 1, 0);\n        return gDate;\n    };\n    Islamic.prototype.getMonthDaysCount = function (date) {\n        var maxDate = this.lastDateOfMonth(date);\n        var hijriDate = this.getHijriDate(maxDate);\n        return hijriDate.date;\n    };\n    Islamic.prototype.getMonthStartDate = function (date) {\n        var firstDate = this.firstDateOfMonth(date);\n        return new Date(firstDate.getFullYear(), firstDate.getMonth(), firstDate.getDate(), date.getHours(), date.getMinutes());\n    };\n    Islamic.prototype.getMonthEndDate = function (date) {\n        var lastDate = this.lastDateOfMonth(date);\n        lastDate.setDate(lastDate.getDate() + 1);\n        return new Date(lastDate.setMonth(lastDate.getMonth()));\n    };\n    Islamic.prototype.getExpectedDays = function (date, days) {\n        var hDate = this.getHijriDate(date);\n        var day = [];\n        for (var i = 0; i < days.length; i++) {\n            var gDate = HijriParser.toGregorian(hDate.year, hDate.month, days[i]);\n            day.push(gDate.getDate());\n        }\n        return day;\n    };\n    Islamic.prototype.setDate = function (dateObj, date) {\n        var hDate = HijriParser.getHijriDate(dateObj);\n        var gDate = HijriParser.toGregorian(hDate.year, hDate.month, date);\n        this.updateDateObj(dateObj, gDate);\n    };\n    Islamic.prototype.setValidDate = function (date, interval, startDate, monthValue, beginDate) {\n        var firstDate = (!isNullOrUndefined(beginDate)) ? this.firstDateOfMonth(beginDate) : date;\n        var hDate = HijriParser.getHijriDate(firstDate);\n        var gDate = HijriParser.toGregorian(hDate.year, hDate.month + interval, startDate);\n        this.updateDateObj(date, gDate);\n    };\n    Islamic.prototype.setMonth = function (date, interval, startDate) {\n        var hDate = HijriParser.getHijriDate(date);\n        var gDate = HijriParser.toGregorian(hDate.year, interval, startDate);\n        this.updateDateObj(date, gDate);\n    };\n    Islamic.prototype.addYears = function (date, interval, monthValue) {\n        var hDate = HijriParser.getHijriDate(date);\n        var gDate = HijriParser.toGregorian(hDate.year + interval, monthValue, 1);\n        this.updateDateObj(date, gDate);\n    };\n    Islamic.prototype.isSameMonth = function (date1, date2) {\n        var currentHijri = this.getHijriDate(date1);\n        var tempHijri = this.getHijriDate(date2);\n        return (currentHijri.month === tempHijri.month);\n    };\n    Islamic.prototype.checkMonth = function (date, months) {\n        var hDate = this.getHijriDate(date);\n        return (months.indexOf(hDate.month) === -1);\n    };\n    Islamic.prototype.compareMonth = function (date1, date2) {\n        var hDate = this.getHijriDate(date1);\n        var hDate1 = this.getHijriDate(date2);\n        return (hDate.month > hDate1.month);\n    };\n    Islamic.prototype.isSameYear = function (date1, date2) {\n        var hDate = this.getHijriDate(date1);\n        var hDate1 = this.getHijriDate(date2);\n        return (hDate.year === hDate1.year);\n    };\n    Islamic.prototype.isLastMonth = function (date) {\n        var hDate = this.getHijriDate(date);\n        return (hDate.month === 12);\n    };\n    Islamic.prototype.updateDateObj = function (date, gDate) {\n        date.setFullYear(gDate.getFullYear(), gDate.getMonth(), gDate.getDate());\n    };\n    Islamic.prototype.isLeapYear = function (year, interval) {\n        return (14 + 11 * (year + interval)) % 30 < 11;\n    };\n    Islamic.prototype.getDaysInMonth = function (month, year) {\n        var length = 0;\n        length = 29 + ((month + 1) % 2);\n        if (month === 11 && this.isLeapYear(year, 0)) {\n            length++;\n        }\n        return length;\n    };\n    Islamic.prototype.getHijriDate = function (date) {\n        return HijriParser.getHijriDate(date);\n    };\n    return Islamic;\n}());\nexport { Islamic };\n"]},"metadata":{},"sourceType":"module"}