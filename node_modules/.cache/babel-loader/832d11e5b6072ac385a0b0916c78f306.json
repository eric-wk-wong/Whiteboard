{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nimport { Component, NotifyPropertyChanges, Property, append, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { removeClass, rippleEffect, closest } from '@syncfusion/ej2-base';\nimport { EventHandler, detach, Event, addClass, isBlazor, getElement } from '@syncfusion/ej2-base';\nexport var classNames = {\n  chipSet: 'e-chip-set',\n  chip: 'e-chip',\n  avatar: 'e-chip-avatar',\n  text: 'e-chip-text',\n  icon: 'e-chip-icon',\n  delete: 'e-chip-delete',\n  deleteIcon: 'e-dlt-btn',\n  multiSelection: 'e-multi-selection',\n  singleSelection: 'e-selection',\n  active: 'e-active',\n  chipWrapper: 'e-chip-avatar-wrap',\n  iconWrapper: 'e-chip-icon-wrap',\n  focused: 'e-focused',\n  disabled: 'e-disabled',\n  rtl: 'e-rtl'\n};\n/**\n * A chip component is a small block of essential information, mostly used on contacts or filter tags.\n * ```html\n * <div id=\"chip\"></div>\n * ```\n * ```typescript\n * <script>\n * var chipObj = new ChipList();\n * chipObj.appendTo(\"#chip\");\n * </script>\n * ```\n */\n\nvar ChipList =\n/** @class */\nfunction (_super) {\n  __extends(ChipList, _super);\n\n  function ChipList(options, element) {\n    var _this = _super.call(this, options, element) || this;\n\n    _this.multiSelectedChip = [];\n    return _this;\n  }\n  /**\n   * Initialize the event handler\n   * @private\n   */\n\n\n  ChipList.prototype.preRender = function () {//prerender\n  };\n  /**\n   * To Initialize the control rendering.\n   * @returns void\n   * @private\n   */\n\n\n  ChipList.prototype.render = function () {\n    this.type = this.chips.length ? 'chipset' : this.text || this.element.innerText ? 'chip' : 'chipset';\n\n    if (!isBlazor() || !this.isServerRendered) {\n      this.setAttributes();\n      this.createChip();\n      this.setRtl();\n      this.select(this.selectedChips);\n    }\n\n    this.wireEvent(false);\n    this.rippleFunction = rippleEffect(this.element, {\n      selector: '.e-chip'\n    });\n    this.renderComplete();\n  };\n\n  ChipList.prototype.createChip = function () {\n    this.innerText = this.element.innerText.trim();\n\n    if (isBlazor()) {\n      var childElement = this.element.querySelectorAll('.e-chip');\n\n      for (var i = 0; i < childElement.length; i++) {\n        if (childElement[i] != null) {\n          detach(childElement[i]);\n        }\n      }\n    } else {\n      this.element.innerHTML = '';\n    }\n\n    this.chipCreation(this.type === 'chip' ? [this.innerText ? this.innerText : this.text] : this.chips);\n  };\n\n  ChipList.prototype.setAttributes = function () {\n    if (this.type === 'chip') {\n      this.element.tabIndex = 0;\n      this.element.setAttribute('role', 'option');\n    } else {\n      this.element.classList.add(classNames.chipSet);\n      this.element.setAttribute('role', 'listbox');\n\n      if (this.selection === 'Multiple') {\n        this.element.classList.add(classNames.multiSelection);\n        this.element.setAttribute('aria-multiselectable', 'true');\n      } else if (this.selection === 'Single') {\n        this.element.classList.add(classNames.singleSelection);\n        this.element.setAttribute('aria-multiselectable', 'false');\n      } else {\n        this.element.setAttribute('aria-multiselectable', 'false');\n      }\n    }\n  };\n\n  ChipList.prototype.setRtl = function () {\n    this.element.classList[this.enableRtl ? 'add' : 'remove'](classNames.rtl);\n  };\n\n  ChipList.prototype.chipCreation = function (data) {\n    var chipListArray = [];\n\n    for (var i = 0; i < data.length; i++) {\n      var fieldsData = this.getFieldValues(data[i]);\n      var chipArray = this.elementCreation(fieldsData);\n      var className = (classNames.chip + ' ' + (fieldsData.enabled ? ' ' : classNames.disabled) + ' ' + (fieldsData.avatarIconCss || fieldsData.avatarText ? classNames.chipWrapper : fieldsData.leadingIconCss ? classNames.iconWrapper : ' ') + ' ' + fieldsData.cssClass).split(' ').filter(function (css) {\n        return css;\n      });\n\n      if (this.type === 'chip') {\n        chipListArray = chipArray;\n        addClass([this.element], className);\n        this.element.setAttribute('aria-label', fieldsData.text);\n\n        if (fieldsData.value) {\n          this.element.setAttribute('data-value', fieldsData.value.toString());\n        }\n      } else {\n        var wrapper = this.createElement('DIV', {\n          className: className.join(' '),\n          attrs: {\n            tabIndex: '0',\n            role: 'option',\n            'aria-label': fieldsData.text,\n            'aria-selected': 'false'\n          }\n        });\n\n        if (fieldsData.value) {\n          wrapper.setAttribute('data-value', fieldsData.value.toString());\n        }\n\n        append(chipArray, wrapper);\n        chipListArray.push(wrapper);\n      }\n    }\n\n    append(chipListArray, this.element);\n  };\n\n  ChipList.prototype.getFieldValues = function (data) {\n    var chipEnabled = !(this.enabled.toString() === 'false');\n    var fields = {\n      text: typeof data === 'object' ? data.text ? data.text.toString() : this.text.toString() : this.type === 'chip' ? this.innerText ? this.innerText : this.text.toString() : data.toString(),\n      cssClass: typeof data === 'object' ? data.cssClass ? data.cssClass.toString() : this.cssClass.toString() : this.cssClass.toString(),\n      leadingIconCss: typeof data === 'object' ? data.leadingIconCss ? data.leadingIconCss.toString() : this.leadingIconCss.toString() : this.leadingIconCss.toString(),\n      avatarIconCss: typeof data === 'object' ? data.avatarIconCss ? data.avatarIconCss.toString() : this.avatarIconCss.toString() : this.avatarIconCss.toString(),\n      avatarText: typeof data === 'object' ? data.avatarText ? data.avatarText.toString() : this.avatarText.toString() : this.avatarText.toString(),\n      trailingIconCss: typeof data === 'object' ? data.trailingIconCss ? data.trailingIconCss.toString() : this.trailingIconCss.toString() : this.trailingIconCss.toString(),\n      enabled: typeof data === 'object' ? !isNullOrUndefined(data.enabled) ? data.enabled.toString() === 'false' ? false : true : chipEnabled : chipEnabled,\n      value: typeof data === 'object' ? data.value ? data.value.toString() : null : null\n    };\n    return fields;\n  };\n\n  ChipList.prototype.elementCreation = function (fields) {\n    var chipArray = [];\n\n    if (fields.avatarText || fields.avatarIconCss) {\n      var className = (classNames.avatar + ' ' + fields.avatarIconCss).trim();\n      var chipAvatarElement = this.createElement('span', {\n        className: className\n      });\n      chipAvatarElement.innerText = fields.avatarText;\n      chipArray.push(chipAvatarElement);\n    } else if (fields.leadingIconCss) {\n      var className = (classNames.icon + ' ' + fields.leadingIconCss).trim();\n      var chipIconElement = this.createElement('span', {\n        className: className\n      });\n      chipArray.push(chipIconElement);\n    }\n\n    var chipTextElement = this.createElement('span', {\n      className: classNames.text\n    });\n    chipTextElement.innerText = fields.text;\n    chipArray.push(chipTextElement);\n\n    if (fields.trailingIconCss || this.type !== 'chip' && this.enableDelete) {\n      var className = (classNames.delete + ' ' + (fields.trailingIconCss ? fields.trailingIconCss : classNames.deleteIcon)).trim();\n      var chipdeleteElement = this.createElement('span', {\n        className: className\n      });\n      chipArray.push(chipdeleteElement);\n    }\n\n    return chipArray;\n  };\n  /**\n   * A function that finds chip based on given input.\n   * @param  {number | HTMLElement } fields - We can pass index number or element of chip.\n   */\n\n\n  ChipList.prototype.find = function (fields) {\n    var chipData;\n    var chipElement = fields instanceof HTMLElement ? fields : this.element.querySelectorAll('.' + classNames.chip)[fields];\n\n    if (chipElement && this.type !== 'chip') {\n      chipData = {\n        text: undefined,\n        index: undefined,\n        element: undefined,\n        data: undefined\n      };\n      chipData.index = Array.prototype.slice.call(this.element.querySelectorAll('.' + classNames.chip)).indexOf(chipElement);\n      chipData.text = typeof this.chips[chipData.index] === 'object' ? this.chips[chipData.index].text ? this.chips[chipData.index].text.toString() : '' : this.chips[chipData.index].toString();\n      chipData.data = this.chips[chipData.index];\n      chipData.element = chipElement;\n    }\n\n    return chipData;\n  };\n  /**\n   * Allows adding the chip item(s) by passing a single or array of string, number, or ChipModel values.\n   * @param  {string[] | number[] | ChipModel[] | string | number | ChipModel} chipsData - We can pass array of string or\n   *  array of number or array of chip model or string data or number data or chip model.\n    */\n\n\n  ChipList.prototype.add = function (chipsData) {\n    var _a;\n\n    if (this.type !== 'chip') {\n      var fieldData = chipsData instanceof Array ? chipsData : [chipsData];\n\n      (_a = this.chips).push.apply(_a, fieldData);\n\n      this.chipCreation(fieldData);\n    }\n  };\n  /**\n   * Allows selecting the chip item(s) by passing a single or array of string, number, or ChipModel values.\n   * @param  {number | number[] | HTMLElement | HTMLElement[]} fields - We can pass number or array of number\n   *  or chip element or array of chip element.\n   */\n\n\n  ChipList.prototype.select = function (fields) {\n    this.onSelect(fields, false);\n  };\n\n  ChipList.prototype.multiSelection = function (newProp) {\n    var items = this.element.querySelectorAll('.' + 'e-chip');\n\n    for (var j = 0; j < newProp.length; j++) {\n      if (typeof newProp[j] === 'string') {\n        for (var k = 0; k < items.length; k++) {\n          if (newProp[j] !== k) {\n            if (newProp[j] === items[k].attributes[5].value) {\n              this.multiSelectedChip.push(k);\n              break;\n            }\n          }\n        }\n      } else {\n        this.multiSelectedChip.push(newProp[j]);\n      }\n    }\n  };\n\n  ChipList.prototype.onSelect = function (fields, callFromProperty) {\n    if (this.type !== 'chip' && this.selection !== 'None') {\n      if (callFromProperty) {\n        var chipElements = this.element.querySelectorAll('.' + classNames.chip);\n\n        for (var i = 0; i < chipElements.length; i++) {\n          chipElements[i].setAttribute('aria-selected', 'false');\n          chipElements[i].classList.remove(classNames.active);\n        }\n      }\n\n      var fieldData = fields instanceof Array ? fields : [fields];\n\n      for (var i = 0; i < fieldData.length; i++) {\n        var chipElement = fieldData[i] instanceof HTMLElement ? fieldData[i] : this.element.querySelectorAll('.' + classNames.chip)[fieldData[i]];\n\n        if (chipElement instanceof HTMLElement) {\n          this.selectionHandler(chipElement);\n        }\n      }\n    }\n  };\n  /**\n   * Allows removing the chip item(s) by passing a single or array of string, number, or ChipModel values.\n   * @param  {number | number[] | HTMLElement | HTMLElement[]} fields - We can pass number or array of number\n   *  or chip element or array of chip element.\n   */\n\n\n  ChipList.prototype.remove = function (fields) {\n    var _this = this;\n\n    if (this.type !== 'chip') {\n      var fieldData = fields instanceof Array ? fields : [fields];\n      var chipElements_1 = [];\n      var chipCollection_1 = this.element.querySelectorAll('.' + classNames.chip);\n      fieldData.forEach(function (data) {\n        var chipElement = data instanceof HTMLElement ? data : chipCollection_1[data];\n\n        if (chipElement instanceof HTMLElement) {\n          chipElements_1.push(chipElement);\n        }\n      });\n      chipElements_1.forEach(function (element) {\n        var chips = _this.element.querySelectorAll('.' + classNames.chip);\n\n        var index = Array.prototype.slice.call(chips).indexOf(element);\n\n        _this.deleteHandler(element, index);\n      });\n    }\n  };\n  /**\n   * Returns the selected chip(s) data.\n   */\n\n\n  ChipList.prototype.getSelectedChips = function () {\n    var selectedChips;\n\n    if (this.type !== 'chip' && this.selection !== 'None') {\n      var selectedItems = {\n        texts: [],\n        Indexes: [],\n        data: [],\n        elements: []\n      };\n      var items = this.element.querySelectorAll('.' + classNames.active);\n\n      for (var i = 0; i < items.length; i++) {\n        var chip = items[i];\n        selectedItems.elements.push(chip);\n        var index = Array.prototype.slice.call(this.element.querySelectorAll('.' + classNames.chip)).indexOf(chip);\n        selectedItems.Indexes.push(index);\n        selectedItems.data.push(this.chips[index]);\n        var text = typeof this.chips[index] === 'object' ? this.chips[index].text ? this.chips[index].text.toString() : null : this.chips[index].toString();\n        selectedItems.texts.push(text);\n      }\n\n      var selectedItem = {\n        text: selectedItems.texts[0],\n        index: selectedItems.Indexes[0],\n        data: selectedItems.data[0],\n        element: selectedItems.elements[0]\n      };\n      selectedChips = !isNullOrUndefined(selectedItem.index) ? this.selection === 'Multiple' ? selectedItems : selectedItem : undefined;\n    }\n\n    return selectedChips;\n  };\n\n  ChipList.prototype.wireEvent = function (unWireEvent) {\n    if (!unWireEvent) {\n      EventHandler.add(this.element, 'click', this.clickHandler, this);\n      EventHandler.add(this.element, 'focusout', this.focusOutHandler, this);\n      EventHandler.add(this.element, 'keydown', this.keyHandler, this);\n      EventHandler.add(this.element, 'keyup', this.keyHandler, this);\n    } else {\n      EventHandler.remove(this.element, 'click', this.clickHandler);\n      EventHandler.remove(this.element, 'focusout', this.focusOutHandler);\n      EventHandler.remove(this.element, 'keydown', this.keyHandler);\n      EventHandler.remove(this.element, 'keyup', this.keyHandler);\n    }\n  };\n\n  ChipList.prototype.keyHandler = function (e) {\n    if (e.target.classList.contains(classNames.chip)) {\n      if (e.type === 'keydown') {\n        if (e.keyCode === 13) {\n          this.clickHandler(e);\n        } else if (e.keyCode === 46 && this.enableDelete) {\n          this.clickHandler(e, true);\n        }\n      } else if (e.keyCode === 9) {\n        this.focusInHandler(e.target);\n      }\n    }\n  };\n\n  ChipList.prototype.focusInHandler = function (chipWrapper) {\n    if (!chipWrapper.classList.contains(classNames.focused)) {\n      chipWrapper.classList.add(classNames.focused);\n    }\n  };\n\n  ChipList.prototype.focusOutHandler = function (e) {\n    var chipWrapper = closest(e.target, '.' + classNames.chip);\n    var focusedElement = this.type === 'chip' ? this.element.classList.contains(classNames.focused) ? this.element : null : this.element.querySelector('.' + classNames.focused);\n\n    if (chipWrapper && focusedElement) {\n      focusedElement.classList.remove(classNames.focused);\n    }\n  };\n\n  ChipList.prototype.clickHandler = function (e, del) {\n    var _this = this;\n\n    if (del === void 0) {\n      del = false;\n    }\n\n    var chipWrapper = closest(e.target, '.' + classNames.chip);\n\n    if (chipWrapper) {\n      var chipDataArgs = void 0;\n\n      if (this.type !== 'chip') {\n        chipDataArgs = this.find(chipWrapper);\n      } else {\n        var index = Array.prototype.slice.call(this.element.querySelectorAll('.' + classNames.chip)).indexOf(chipWrapper);\n        chipDataArgs = {\n          text: this.innerText ? this.innerText : this.text,\n          element: chipWrapper,\n          data: this.text,\n          index: index\n        };\n      }\n\n      chipDataArgs.event = e;\n      chipDataArgs.cancel = false;\n      this.trigger('beforeClick', chipDataArgs, function (observedArgs) {\n        if (!observedArgs.cancel) {\n          observedArgs.element = isBlazor() ? getElement(observedArgs.element) : observedArgs.element;\n\n          _this.clickEventHandler(observedArgs.element, e, del);\n        }\n      });\n    }\n  };\n\n  ChipList.prototype.clickEventHandler = function (chipWrapper, e, del) {\n    var _this = this;\n\n    if (this.type !== 'chip') {\n      var chipData = this.find(chipWrapper);\n      chipData.event = e;\n      var deleteElement = e.target.classList.contains(classNames.deleteIcon) ? e.target : del ? chipWrapper.querySelector('.' + classNames.deleteIcon) : undefined;\n\n      if (deleteElement && this.enableDelete) {\n        chipData.cancel = false;\n        var deletedItemArgs = chipData;\n        this.trigger('delete', deletedItemArgs, function (observedArgs) {\n          if (!observedArgs.cancel) {\n            observedArgs.element = isBlazor() ? getElement(observedArgs.element) : observedArgs.element;\n\n            _this.deleteHandler(observedArgs.element, observedArgs.index);\n          }\n        });\n      } else if (this.selection !== 'None') {\n        this.selectionHandler(chipWrapper);\n        chipData.selected = chipWrapper.classList.contains(classNames.active);\n        var selectedItemArgs = chipData;\n        this.trigger('click', selectedItemArgs);\n      } else {\n        this.focusInHandler(chipWrapper);\n        var clickedItemArgs = chipData;\n        this.trigger('click', clickedItemArgs);\n      }\n    } else {\n      this.focusInHandler(chipWrapper);\n      var clickedItemArgs = {\n        text: this.innerText ? this.innerText : this.text,\n        element: chipWrapper,\n        data: this.text,\n        event: e\n      };\n      this.trigger('click', clickedItemArgs);\n    }\n  };\n\n  ChipList.prototype.selectionHandler = function (chipWrapper) {\n    if (this.selection === 'Single') {\n      var activeElement = this.element.querySelector('.' + classNames.active);\n\n      if (activeElement && activeElement !== chipWrapper) {\n        activeElement.classList.remove(classNames.active);\n        activeElement.setAttribute('aria-selected', 'false');\n      }\n\n      this.setProperties({\n        selectedChips: null\n      }, true);\n    } else {\n      this.setProperties({\n        selectedChips: []\n      }, true);\n    }\n\n    if (chipWrapper.classList.contains(classNames.active)) {\n      chipWrapper.classList.remove(classNames.active);\n      chipWrapper.setAttribute('aria-selected', 'false');\n    } else {\n      chipWrapper.classList.add(classNames.active);\n      chipWrapper.setAttribute('aria-selected', 'true');\n    }\n\n    this.updateSelectedChips();\n  };\n\n  ChipList.prototype.updateSelectedChips = function () {\n    var chipListEle = this.element.querySelectorAll('.e-chip');\n    var chipCollIndex = [];\n    var chipCollValue = [];\n    var chip = null;\n    var value;\n\n    for (var i = 0; i < chipListEle.length; i++) {\n      var selectedEle = this.element.querySelectorAll('.e-chip')[i];\n\n      if (selectedEle.getAttribute('aria-selected') === 'true') {\n        value = selectedEle.getAttribute('data-value');\n\n        if (this.selection === 'Single' && selectedEle.classList.contains('e-active')) {\n          chip = value ? value : i;\n          break;\n        } else {\n          value ? chipCollValue.push(value) : chipCollIndex.push(i);\n        }\n      }\n    }\n\n    this.setProperties({\n      selectedChips: this.selection === 'Single' ? chip : value ? chipCollValue : chipCollIndex\n    }, true);\n  };\n\n  ChipList.prototype.deleteHandler = function (chipWrapper, index) {\n    this.allowServerDataBinding = true;\n    this.chips.splice(index, 1);\n    this.setProperties({\n      chips: this.chips\n    }, true);\n    this.serverDataBind();\n    this.allowServerDataBinding = false;\n\n    if (!(isBlazor() && this.isServerRendered)) {\n      detach(chipWrapper);\n    }\n  };\n  /**\n   * Removes the component from the DOM and detaches all its related event handlers. Also, it removes the attributes and classes.\n   */\n\n\n  ChipList.prototype.destroy = function () {\n    removeClass([this.element], [classNames.chipSet, classNames.chip, classNames.rtl, classNames.multiSelection, classNames.singleSelection, classNames.disabled, classNames.chipWrapper, classNames.iconWrapper, classNames.active, classNames.focused].concat(this.cssClass.toString().split(' ').filter(function (css) {\n      return css;\n    })));\n    this.removeMultipleAttributes(['tabindex', 'role', 'aria-label', 'aria-multiselectable'], this.element);\n    this.wireEvent(true);\n    this.rippleFunction();\n\n    if (isBlazor()) {\n      var chipChildElement = this.element.querySelectorAll('.e-chip');\n\n      for (var i = 0; i < chipChildElement.length; i++) {\n        if (chipChildElement[i] != null) {\n          detach(chipChildElement[i]);\n        }\n      }\n    } else {\n      _super.prototype.destroy.call(this);\n\n      this.element.innerHTML = '';\n      this.element.innerText = this.innerText;\n    }\n  };\n\n  ChipList.prototype.removeMultipleAttributes = function (attributes, element) {\n    attributes.forEach(function (attr) {\n      element.removeAttribute(attr);\n    });\n  };\n\n  ChipList.prototype.getPersistData = function () {\n    return this.addOnPersist([]);\n  };\n\n  ChipList.prototype.getModuleName = function () {\n    return 'chip-list';\n  };\n  /**\n   * Called internally if any of the property value changed.\n   * @returns void\n   * @private\n   */\n\n\n  ChipList.prototype.onPropertyChanged = function (newProp, oldProp) {\n    for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n      var prop = _a[_i];\n\n      switch (prop) {\n        case 'chips':\n        case 'text':\n        case 'avatarText':\n        case 'avatarIconCss':\n        case 'leadingIconCss':\n        case 'trailingIconCss':\n        case 'selection':\n        case 'enableDelete':\n        case 'enabled':\n          if (!(isBlazor() && this.isServerRendered)) {\n            this.isServerRendered = false;\n            this.refresh();\n            this.isServerRendered = true;\n          }\n\n          break;\n\n        case 'cssClass':\n          if (!(isBlazor() && this.isServerRendered)) {\n            if (this.type === 'chip') {\n              removeClass([this.element], oldProp.cssClass.toString().split(' ').filter(function (css) {\n                return css;\n              }));\n              addClass([this.element], newProp.cssClass.toString().split(' ').filter(function (css) {\n                return css;\n              }));\n            } else {\n              this.isServerRendered = false;\n              this.refresh();\n              this.isServerRendered = true;\n            }\n          }\n\n          break;\n\n        case 'selectedChips':\n          removeClass(this.element.querySelectorAll('.e-active'), 'e-active');\n\n          if (this.selection === 'Multiple') {\n            this.multiSelectedChip = [];\n            this.multiSelection(newProp.selectedChips);\n            this.onSelect(this.multiSelectedChip, true);\n            this.updateSelectedChips();\n          } else {\n            this.onSelect(newProp.selectedChips, true);\n          }\n\n          break;\n\n        case 'enableRtl':\n          this.setRtl();\n          break;\n      }\n    }\n  };\n\n  __decorate([Property([])], ChipList.prototype, \"chips\", void 0);\n\n  __decorate([Property('')], ChipList.prototype, \"text\", void 0);\n\n  __decorate([Property('')], ChipList.prototype, \"avatarText\", void 0);\n\n  __decorate([Property('')], ChipList.prototype, \"avatarIconCss\", void 0);\n\n  __decorate([Property('')], ChipList.prototype, \"leadingIconCss\", void 0);\n\n  __decorate([Property('')], ChipList.prototype, \"trailingIconCss\", void 0);\n\n  __decorate([Property('')], ChipList.prototype, \"cssClass\", void 0);\n\n  __decorate([Property(true)], ChipList.prototype, \"enabled\", void 0);\n\n  __decorate([Property([])], ChipList.prototype, \"selectedChips\", void 0);\n\n  __decorate([Property('None')], ChipList.prototype, \"selection\", void 0);\n\n  __decorate([Property(false)], ChipList.prototype, \"enableDelete\", void 0);\n\n  __decorate([Event()], ChipList.prototype, \"created\", void 0);\n\n  __decorate([Event()], ChipList.prototype, \"click\", void 0);\n\n  __decorate([Event()], ChipList.prototype, \"beforeClick\", void 0);\n\n  __decorate([Event()], ChipList.prototype, \"delete\", void 0);\n\n  ChipList = __decorate([NotifyPropertyChanges], ChipList);\n  return ChipList;\n}(Component);\n\nexport { ChipList };","map":{"version":3,"sources":["/Users/ewong/Development/Whiteboard/node_modules/@syncfusion/ej2-buttons/src/chips/chip-list.js"],"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","__decorate","decorators","target","key","desc","c","arguments","length","r","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","Component","NotifyPropertyChanges","Property","append","isNullOrUndefined","removeClass","rippleEffect","closest","EventHandler","detach","Event","addClass","isBlazor","getElement","classNames","chipSet","chip","avatar","text","icon","delete","deleteIcon","multiSelection","singleSelection","active","chipWrapper","iconWrapper","focused","disabled","rtl","ChipList","_super","options","element","_this","call","multiSelectedChip","preRender","render","type","chips","innerText","isServerRendered","setAttributes","createChip","setRtl","select","selectedChips","wireEvent","rippleFunction","selector","renderComplete","trim","childElement","querySelectorAll","innerHTML","chipCreation","tabIndex","setAttribute","classList","add","selection","enableRtl","data","chipListArray","fieldsData","getFieldValues","chipArray","elementCreation","className","enabled","avatarIconCss","avatarText","leadingIconCss","cssClass","split","filter","css","value","toString","wrapper","createElement","join","attrs","role","push","chipEnabled","fields","trailingIconCss","chipAvatarElement","chipIconElement","chipTextElement","enableDelete","chipdeleteElement","find","chipData","chipElement","HTMLElement","undefined","index","slice","indexOf","chipsData","_a","fieldData","apply","onSelect","newProp","items","j","k","attributes","callFromProperty","chipElements","remove","selectionHandler","chipElements_1","chipCollection_1","forEach","deleteHandler","getSelectedChips","selectedItems","texts","Indexes","elements","selectedItem","unWireEvent","clickHandler","focusOutHandler","keyHandler","e","contains","keyCode","focusInHandler","focusedElement","querySelector","del","chipDataArgs","event","cancel","trigger","observedArgs","clickEventHandler","deleteElement","deletedItemArgs","selected","selectedItemArgs","clickedItemArgs","activeElement","setProperties","updateSelectedChips","chipListEle","chipCollIndex","chipCollValue","selectedEle","getAttribute","allowServerDataBinding","splice","serverDataBind","destroy","concat","removeMultipleAttributes","chipChildElement","attr","removeAttribute","getPersistData","addOnPersist","getModuleName","onPropertyChanged","oldProp","_i","keys","prop","refresh"],"mappings":"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","sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Component, NotifyPropertyChanges, Property, append, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { removeClass, rippleEffect, closest } from '@syncfusion/ej2-base';\nimport { EventHandler, detach, Event, addClass, isBlazor, getElement } from '@syncfusion/ej2-base';\nexport var classNames = {\n    chipSet: 'e-chip-set',\n    chip: 'e-chip',\n    avatar: 'e-chip-avatar',\n    text: 'e-chip-text',\n    icon: 'e-chip-icon',\n    delete: 'e-chip-delete',\n    deleteIcon: 'e-dlt-btn',\n    multiSelection: 'e-multi-selection',\n    singleSelection: 'e-selection',\n    active: 'e-active',\n    chipWrapper: 'e-chip-avatar-wrap',\n    iconWrapper: 'e-chip-icon-wrap',\n    focused: 'e-focused',\n    disabled: 'e-disabled',\n    rtl: 'e-rtl',\n};\n/**\n * A chip component is a small block of essential information, mostly used on contacts or filter tags.\n * ```html\n * <div id=\"chip\"></div>\n * ```\n * ```typescript\n * <script>\n * var chipObj = new ChipList();\n * chipObj.appendTo(\"#chip\");\n * </script>\n * ```\n */\nvar ChipList = /** @class */ (function (_super) {\n    __extends(ChipList, _super);\n    function ChipList(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        _this.multiSelectedChip = [];\n        return _this;\n    }\n    /**\n     * Initialize the event handler\n     * @private\n     */\n    ChipList.prototype.preRender = function () {\n        //prerender\n    };\n    /**\n     * To Initialize the control rendering.\n     * @returns void\n     * @private\n     */\n    ChipList.prototype.render = function () {\n        this.type = this.chips.length ? 'chipset' : (this.text || this.element.innerText ? 'chip' : 'chipset');\n        if (!isBlazor() || !this.isServerRendered) {\n            this.setAttributes();\n            this.createChip();\n            this.setRtl();\n            this.select(this.selectedChips);\n        }\n        this.wireEvent(false);\n        this.rippleFunction = rippleEffect(this.element, {\n            selector: '.e-chip'\n        });\n        this.renderComplete();\n    };\n    ChipList.prototype.createChip = function () {\n        this.innerText = this.element.innerText.trim();\n        if (isBlazor()) {\n            var childElement = this.element.querySelectorAll('.e-chip');\n            for (var i = 0; i < childElement.length; i++) {\n                if (childElement[i] != null) {\n                    detach(childElement[i]);\n                }\n            }\n        }\n        else {\n            this.element.innerHTML = '';\n        }\n        this.chipCreation(this.type === 'chip' ? [this.innerText ? this.innerText : this.text] : this.chips);\n    };\n    ChipList.prototype.setAttributes = function () {\n        if (this.type === 'chip') {\n            this.element.tabIndex = 0;\n            this.element.setAttribute('role', 'option');\n        }\n        else {\n            this.element.classList.add(classNames.chipSet);\n            this.element.setAttribute('role', 'listbox');\n            if (this.selection === 'Multiple') {\n                this.element.classList.add(classNames.multiSelection);\n                this.element.setAttribute('aria-multiselectable', 'true');\n            }\n            else if (this.selection === 'Single') {\n                this.element.classList.add(classNames.singleSelection);\n                this.element.setAttribute('aria-multiselectable', 'false');\n            }\n            else {\n                this.element.setAttribute('aria-multiselectable', 'false');\n            }\n        }\n    };\n    ChipList.prototype.setRtl = function () {\n        this.element.classList[this.enableRtl ? 'add' : 'remove'](classNames.rtl);\n    };\n    ChipList.prototype.chipCreation = function (data) {\n        var chipListArray = [];\n        for (var i = 0; i < data.length; i++) {\n            var fieldsData = this.getFieldValues(data[i]);\n            var chipArray = this.elementCreation(fieldsData);\n            var className = (classNames.chip + ' ' + (fieldsData.enabled ? ' ' : classNames.disabled) + ' ' +\n                (fieldsData.avatarIconCss || fieldsData.avatarText ? classNames.chipWrapper : (fieldsData.leadingIconCss ?\n                    classNames.iconWrapper : ' ')) + ' ' + fieldsData.cssClass).split(' ').filter(function (css) { return css; });\n            if (this.type === 'chip') {\n                chipListArray = chipArray;\n                addClass([this.element], className);\n                this.element.setAttribute('aria-label', fieldsData.text);\n                if (fieldsData.value) {\n                    this.element.setAttribute('data-value', fieldsData.value.toString());\n                }\n            }\n            else {\n                var wrapper = this.createElement('DIV', {\n                    className: className.join(' '), attrs: {\n                        tabIndex: '0', role: 'option',\n                        'aria-label': fieldsData.text, 'aria-selected': 'false'\n                    }\n                });\n                if (fieldsData.value) {\n                    wrapper.setAttribute('data-value', fieldsData.value.toString());\n                }\n                append(chipArray, wrapper);\n                chipListArray.push(wrapper);\n            }\n        }\n        append(chipListArray, this.element);\n    };\n    ChipList.prototype.getFieldValues = function (data) {\n        var chipEnabled = !(this.enabled.toString() === 'false');\n        var fields = {\n            text: typeof data === 'object' ? (data.text ? data.text.toString() : this.text.toString()) :\n                (this.type === 'chip' ? (this.innerText ? this.innerText : this.text.toString()) : data.toString()),\n            cssClass: typeof data === 'object' ? (data.cssClass ? data.cssClass.toString() : this.cssClass.toString()) :\n                (this.cssClass.toString()),\n            leadingIconCss: typeof data === 'object' ? (data.leadingIconCss ? data.leadingIconCss.toString() :\n                this.leadingIconCss.toString()) : (this.leadingIconCss.toString()),\n            avatarIconCss: typeof data === 'object' ? (data.avatarIconCss ? data.avatarIconCss.toString() :\n                this.avatarIconCss.toString()) : (this.avatarIconCss.toString()),\n            avatarText: typeof data === 'object' ? (data.avatarText ? data.avatarText.toString() : this.avatarText.toString()) :\n                (this.avatarText.toString()),\n            trailingIconCss: typeof data === 'object' ? (data.trailingIconCss ? data.trailingIconCss.toString() :\n                this.trailingIconCss.toString()) : (this.trailingIconCss.toString()),\n            enabled: typeof data === 'object' ? (!isNullOrUndefined(data.enabled) ? (data.enabled.toString() === 'false' ? false : true) :\n                chipEnabled) : (chipEnabled),\n            value: typeof data === 'object' ? ((data.value ? data.value.toString() : null)) : null\n        };\n        return fields;\n    };\n    ChipList.prototype.elementCreation = function (fields) {\n        var chipArray = [];\n        if (fields.avatarText || fields.avatarIconCss) {\n            var className = (classNames.avatar + ' ' + fields.avatarIconCss).trim();\n            var chipAvatarElement = this.createElement('span', { className: className });\n            chipAvatarElement.innerText = fields.avatarText;\n            chipArray.push(chipAvatarElement);\n        }\n        else if (fields.leadingIconCss) {\n            var className = (classNames.icon + ' ' + fields.leadingIconCss).trim();\n            var chipIconElement = this.createElement('span', { className: className });\n            chipArray.push(chipIconElement);\n        }\n        var chipTextElement = this.createElement('span', { className: classNames.text });\n        chipTextElement.innerText = fields.text;\n        chipArray.push(chipTextElement);\n        if (fields.trailingIconCss || (this.type !== 'chip' && this.enableDelete)) {\n            var className = (classNames.delete + ' ' +\n                (fields.trailingIconCss ? fields.trailingIconCss : classNames.deleteIcon)).trim();\n            var chipdeleteElement = this.createElement('span', { className: className });\n            chipArray.push(chipdeleteElement);\n        }\n        return chipArray;\n    };\n    /**\n     * A function that finds chip based on given input.\n     * @param  {number | HTMLElement } fields - We can pass index number or element of chip.\n     */\n    ChipList.prototype.find = function (fields) {\n        var chipData;\n        var chipElement = fields instanceof HTMLElement ?\n            fields : this.element.querySelectorAll('.' + classNames.chip)[fields];\n        if (chipElement && this.type !== 'chip') {\n            chipData = { text: undefined, index: undefined, element: undefined, data: undefined };\n            chipData.index = Array.prototype.slice.call(this.element.querySelectorAll('.' + classNames.chip)).indexOf(chipElement);\n            chipData.text = typeof this.chips[chipData.index] === 'object' ?\n                (this.chips[chipData.index].text ?\n                    this.chips[chipData.index].text.toString() : '') :\n                this.chips[chipData.index].toString();\n            chipData.data = this.chips[chipData.index];\n            chipData.element = chipElement;\n        }\n        return chipData;\n    };\n    /**\n     * Allows adding the chip item(s) by passing a single or array of string, number, or ChipModel values.\n     * @param  {string[] | number[] | ChipModel[] | string | number | ChipModel} chipsData - We can pass array of string or\n     *  array of number or array of chip model or string data or number data or chip model.\n\n     */\n    ChipList.prototype.add = function (chipsData) {\n        var _a;\n        if (this.type !== 'chip') {\n            var fieldData = chipsData instanceof Array ?\n                chipsData : [chipsData];\n            (_a = this.chips).push.apply(_a, fieldData);\n            this.chipCreation(fieldData);\n        }\n    };\n    /**\n     * Allows selecting the chip item(s) by passing a single or array of string, number, or ChipModel values.\n     * @param  {number | number[] | HTMLElement | HTMLElement[]} fields - We can pass number or array of number\n     *  or chip element or array of chip element.\n     */\n    ChipList.prototype.select = function (fields) {\n        this.onSelect(fields, false);\n    };\n    ChipList.prototype.multiSelection = function (newProp) {\n        var items = this.element.querySelectorAll('.' + 'e-chip');\n        for (var j = 0; j < newProp.length; j++) {\n            if (typeof newProp[j] === 'string') {\n                for (var k = 0; k < items.length; k++) {\n                    if (newProp[j] !== k) {\n                        if (newProp[j] === items[k].attributes[5].value) {\n                            this.multiSelectedChip.push(k);\n                            break;\n                        }\n                    }\n                }\n            }\n            else {\n                this.multiSelectedChip.push(newProp[j]);\n            }\n        }\n    };\n    ChipList.prototype.onSelect = function (fields, callFromProperty) {\n        if (this.type !== 'chip' && this.selection !== 'None') {\n            if (callFromProperty) {\n                var chipElements = this.element.querySelectorAll('.' + classNames.chip);\n                for (var i = 0; i < chipElements.length; i++) {\n                    chipElements[i].setAttribute('aria-selected', 'false');\n                    chipElements[i].classList.remove(classNames.active);\n                }\n            }\n            var fieldData = fields instanceof Array ? fields : [fields];\n            for (var i = 0; i < fieldData.length; i++) {\n                var chipElement = fieldData[i] instanceof HTMLElement ? fieldData[i]\n                    : this.element.querySelectorAll('.' + classNames.chip)[fieldData[i]];\n                if (chipElement instanceof HTMLElement) {\n                    this.selectionHandler(chipElement);\n                }\n            }\n        }\n    };\n    /**\n     * Allows removing the chip item(s) by passing a single or array of string, number, or ChipModel values.\n     * @param  {number | number[] | HTMLElement | HTMLElement[]} fields - We can pass number or array of number\n     *  or chip element or array of chip element.\n     */\n    ChipList.prototype.remove = function (fields) {\n        var _this = this;\n        if (this.type !== 'chip') {\n            var fieldData = fields instanceof Array ? fields : [fields];\n            var chipElements_1 = [];\n            var chipCollection_1 = this.element.querySelectorAll('.' + classNames.chip);\n            fieldData.forEach(function (data) {\n                var chipElement = data instanceof HTMLElement ? data\n                    : chipCollection_1[data];\n                if (chipElement instanceof HTMLElement) {\n                    chipElements_1.push(chipElement);\n                }\n            });\n            chipElements_1.forEach(function (element) {\n                var chips = _this.element.querySelectorAll('.' + classNames.chip);\n                var index = Array.prototype.slice.call(chips).indexOf(element);\n                _this.deleteHandler(element, index);\n            });\n        }\n    };\n    /**\n     * Returns the selected chip(s) data.\n     */\n    ChipList.prototype.getSelectedChips = function () {\n        var selectedChips;\n        if (this.type !== 'chip' && this.selection !== 'None') {\n            var selectedItems = { texts: [], Indexes: [], data: [], elements: [] };\n            var items = this.element.querySelectorAll('.' + classNames.active);\n            for (var i = 0; i < items.length; i++) {\n                var chip = items[i];\n                selectedItems.elements.push(chip);\n                var index = Array.prototype.slice.call(this.element.querySelectorAll('.' + classNames.chip)).indexOf(chip);\n                selectedItems.Indexes.push(index);\n                selectedItems.data.push(this.chips[index]);\n                var text = typeof this.chips[index] === 'object' ?\n                    this.chips[index].text ? this.chips[index].text.toString()\n                        : null : this.chips[index].toString();\n                selectedItems.texts.push(text);\n            }\n            var selectedItem = {\n                text: selectedItems.texts[0], index: selectedItems.Indexes[0],\n                data: selectedItems.data[0], element: selectedItems.elements[0]\n            };\n            selectedChips = !isNullOrUndefined(selectedItem.index) ?\n                (this.selection === 'Multiple' ? selectedItems : selectedItem) : undefined;\n        }\n        return selectedChips;\n    };\n    ChipList.prototype.wireEvent = function (unWireEvent) {\n        if (!unWireEvent) {\n            EventHandler.add(this.element, 'click', this.clickHandler, this);\n            EventHandler.add(this.element, 'focusout', this.focusOutHandler, this);\n            EventHandler.add(this.element, 'keydown', this.keyHandler, this);\n            EventHandler.add(this.element, 'keyup', this.keyHandler, this);\n        }\n        else {\n            EventHandler.remove(this.element, 'click', this.clickHandler);\n            EventHandler.remove(this.element, 'focusout', this.focusOutHandler);\n            EventHandler.remove(this.element, 'keydown', this.keyHandler);\n            EventHandler.remove(this.element, 'keyup', this.keyHandler);\n        }\n    };\n    ChipList.prototype.keyHandler = function (e) {\n        if (e.target.classList.contains(classNames.chip)) {\n            if (e.type === 'keydown') {\n                if (e.keyCode === 13) {\n                    this.clickHandler(e);\n                }\n                else if (e.keyCode === 46 && this.enableDelete) {\n                    this.clickHandler(e, true);\n                }\n            }\n            else if (e.keyCode === 9) {\n                this.focusInHandler(e.target);\n            }\n        }\n    };\n    ChipList.prototype.focusInHandler = function (chipWrapper) {\n        if (!chipWrapper.classList.contains(classNames.focused)) {\n            chipWrapper.classList.add(classNames.focused);\n        }\n    };\n    ChipList.prototype.focusOutHandler = function (e) {\n        var chipWrapper = closest(e.target, '.' + classNames.chip);\n        var focusedElement = this.type === 'chip' ? (this.element.classList.contains(classNames.focused) ?\n            this.element : null) : this.element.querySelector('.' + classNames.focused);\n        if (chipWrapper && focusedElement) {\n            focusedElement.classList.remove(classNames.focused);\n        }\n    };\n    ChipList.prototype.clickHandler = function (e, del) {\n        var _this = this;\n        if (del === void 0) { del = false; }\n        var chipWrapper = closest(e.target, '.' + classNames.chip);\n        if (chipWrapper) {\n            var chipDataArgs = void 0;\n            if (this.type !== 'chip') {\n                chipDataArgs = this.find(chipWrapper);\n            }\n            else {\n                var index = Array.prototype.slice.call(this.element.querySelectorAll('.' + classNames.chip)).indexOf(chipWrapper);\n                chipDataArgs = {\n                    text: this.innerText ? this.innerText : this.text,\n                    element: chipWrapper, data: this.text, index: index\n                };\n            }\n            chipDataArgs.event = e;\n            chipDataArgs.cancel = false;\n            this.trigger('beforeClick', chipDataArgs, function (observedArgs) {\n                if (!observedArgs.cancel) {\n                    observedArgs.element = isBlazor() ? getElement(observedArgs.element) : observedArgs.element;\n                    _this.clickEventHandler(observedArgs.element, e, del);\n                }\n            });\n        }\n    };\n    ChipList.prototype.clickEventHandler = function (chipWrapper, e, del) {\n        var _this = this;\n        if (this.type !== 'chip') {\n            var chipData = this.find(chipWrapper);\n            chipData.event = e;\n            var deleteElement = e.target.classList.contains(classNames.deleteIcon) ?\n                e.target : (del ? chipWrapper.querySelector('.' + classNames.deleteIcon) : undefined);\n            if (deleteElement && this.enableDelete) {\n                chipData.cancel = false;\n                var deletedItemArgs = chipData;\n                this.trigger('delete', deletedItemArgs, function (observedArgs) {\n                    if (!observedArgs.cancel) {\n                        observedArgs.element = isBlazor() ? getElement(observedArgs.element) : observedArgs.element;\n                        _this.deleteHandler(observedArgs.element, observedArgs.index);\n                    }\n                });\n            }\n            else if (this.selection !== 'None') {\n                this.selectionHandler(chipWrapper);\n                chipData.selected = chipWrapper.classList.contains(classNames.active);\n                var selectedItemArgs = chipData;\n                this.trigger('click', selectedItemArgs);\n            }\n            else {\n                this.focusInHandler(chipWrapper);\n                var clickedItemArgs = chipData;\n                this.trigger('click', clickedItemArgs);\n            }\n        }\n        else {\n            this.focusInHandler(chipWrapper);\n            var clickedItemArgs = {\n                text: this.innerText ? this.innerText : this.text,\n                element: chipWrapper, data: this.text, event: e\n            };\n            this.trigger('click', clickedItemArgs);\n        }\n    };\n    ChipList.prototype.selectionHandler = function (chipWrapper) {\n        if (this.selection === 'Single') {\n            var activeElement = this.element.querySelector('.' + classNames.active);\n            if (activeElement && activeElement !== chipWrapper) {\n                activeElement.classList.remove(classNames.active);\n                activeElement.setAttribute('aria-selected', 'false');\n            }\n            this.setProperties({ selectedChips: null }, true);\n        }\n        else {\n            this.setProperties({ selectedChips: [] }, true);\n        }\n        if (chipWrapper.classList.contains(classNames.active)) {\n            chipWrapper.classList.remove(classNames.active);\n            chipWrapper.setAttribute('aria-selected', 'false');\n        }\n        else {\n            chipWrapper.classList.add(classNames.active);\n            chipWrapper.setAttribute('aria-selected', 'true');\n        }\n        this.updateSelectedChips();\n    };\n    ChipList.prototype.updateSelectedChips = function () {\n        var chipListEle = this.element.querySelectorAll('.e-chip');\n        var chipCollIndex = [];\n        var chipCollValue = [];\n        var chip = null;\n        var value;\n        for (var i = 0; i < chipListEle.length; i++) {\n            var selectedEle = this.element.querySelectorAll('.e-chip')[i];\n            if (selectedEle.getAttribute('aria-selected') === 'true') {\n                value = selectedEle.getAttribute('data-value');\n                if (this.selection === 'Single' && selectedEle.classList.contains('e-active')) {\n                    chip = value ? value : i;\n                    break;\n                }\n                else {\n                    value ? chipCollValue.push(value) : chipCollIndex.push(i);\n                }\n            }\n        }\n        this.setProperties({ selectedChips: this.selection === 'Single' ? chip : value ? chipCollValue : chipCollIndex }, true);\n    };\n    ChipList.prototype.deleteHandler = function (chipWrapper, index) {\n        this.allowServerDataBinding = true;\n        this.chips.splice(index, 1);\n        this.setProperties({ chips: this.chips }, true);\n        this.serverDataBind();\n        this.allowServerDataBinding = false;\n        if (!(isBlazor() && this.isServerRendered)) {\n            detach(chipWrapper);\n        }\n    };\n    /**\n     * Removes the component from the DOM and detaches all its related event handlers. Also, it removes the attributes and classes.\n     */\n    ChipList.prototype.destroy = function () {\n        removeClass([this.element], [classNames.chipSet, classNames.chip, classNames.rtl,\n            classNames.multiSelection, classNames.singleSelection, classNames.disabled, classNames.chipWrapper, classNames.iconWrapper,\n            classNames.active, classNames.focused].concat(this.cssClass.toString().split(' ').filter(function (css) { return css; })));\n        this.removeMultipleAttributes(['tabindex', 'role', 'aria-label', 'aria-multiselectable'], this.element);\n        this.wireEvent(true);\n        this.rippleFunction();\n        if (isBlazor()) {\n            var chipChildElement = this.element.querySelectorAll('.e-chip');\n            for (var i = 0; i < chipChildElement.length; i++) {\n                if (chipChildElement[i] != null) {\n                    detach(chipChildElement[i]);\n                }\n            }\n        }\n        else {\n            _super.prototype.destroy.call(this);\n            this.element.innerHTML = '';\n            this.element.innerText = this.innerText;\n        }\n    };\n    ChipList.prototype.removeMultipleAttributes = function (attributes, element) {\n        attributes.forEach(function (attr) {\n            element.removeAttribute(attr);\n        });\n    };\n    ChipList.prototype.getPersistData = function () {\n        return this.addOnPersist([]);\n    };\n    ChipList.prototype.getModuleName = function () {\n        return 'chip-list';\n    };\n    /**\n     * Called internally if any of the property value changed.\n     * @returns void\n     * @private\n     */\n    ChipList.prototype.onPropertyChanged = function (newProp, oldProp) {\n        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            switch (prop) {\n                case 'chips':\n                case 'text':\n                case 'avatarText':\n                case 'avatarIconCss':\n                case 'leadingIconCss':\n                case 'trailingIconCss':\n                case 'selection':\n                case 'enableDelete':\n                case 'enabled':\n                    if (!(isBlazor() && this.isServerRendered)) {\n                        this.isServerRendered = false;\n                        this.refresh();\n                        this.isServerRendered = true;\n                    }\n                    break;\n                case 'cssClass':\n                    if (!(isBlazor() && this.isServerRendered)) {\n                        if (this.type === 'chip') {\n                            removeClass([this.element], oldProp.cssClass.toString().split(' ').filter(function (css) { return css; }));\n                            addClass([this.element], newProp.cssClass.toString().split(' ').filter(function (css) { return css; }));\n                        }\n                        else {\n                            this.isServerRendered = false;\n                            this.refresh();\n                            this.isServerRendered = true;\n                        }\n                    }\n                    break;\n                case 'selectedChips':\n                    removeClass(this.element.querySelectorAll('.e-active'), 'e-active');\n                    if (this.selection === 'Multiple') {\n                        this.multiSelectedChip = [];\n                        this.multiSelection(newProp.selectedChips);\n                        this.onSelect(this.multiSelectedChip, true);\n                        this.updateSelectedChips();\n                    }\n                    else {\n                        this.onSelect(newProp.selectedChips, true);\n                    }\n                    break;\n                case 'enableRtl':\n                    this.setRtl();\n                    break;\n            }\n        }\n    };\n    __decorate([\n        Property([])\n    ], ChipList.prototype, \"chips\", void 0);\n    __decorate([\n        Property('')\n    ], ChipList.prototype, \"text\", void 0);\n    __decorate([\n        Property('')\n    ], ChipList.prototype, \"avatarText\", void 0);\n    __decorate([\n        Property('')\n    ], ChipList.prototype, \"avatarIconCss\", void 0);\n    __decorate([\n        Property('')\n    ], ChipList.prototype, \"leadingIconCss\", void 0);\n    __decorate([\n        Property('')\n    ], ChipList.prototype, \"trailingIconCss\", void 0);\n    __decorate([\n        Property('')\n    ], ChipList.prototype, \"cssClass\", void 0);\n    __decorate([\n        Property(true)\n    ], ChipList.prototype, \"enabled\", void 0);\n    __decorate([\n        Property([])\n    ], ChipList.prototype, \"selectedChips\", void 0);\n    __decorate([\n        Property('None')\n    ], ChipList.prototype, \"selection\", void 0);\n    __decorate([\n        Property(false)\n    ], ChipList.prototype, \"enableDelete\", void 0);\n    __decorate([\n        Event()\n    ], ChipList.prototype, \"created\", void 0);\n    __decorate([\n        Event()\n    ], ChipList.prototype, \"click\", void 0);\n    __decorate([\n        Event()\n    ], ChipList.prototype, \"beforeClick\", void 0);\n    __decorate([\n        Event()\n    ], ChipList.prototype, \"delete\", void 0);\n    ChipList = __decorate([\n        NotifyPropertyChanges\n    ], ChipList);\n    return ChipList;\n}(Component));\nexport { ChipList };\n"]},"metadata":{},"sourceType":"module"}