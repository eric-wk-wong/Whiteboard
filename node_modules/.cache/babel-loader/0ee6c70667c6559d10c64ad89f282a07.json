{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nimport { merge, extend, isNullOrUndefined, setValue, getValue } from '@syncfusion/ej2-base';\nimport { DataUtil } from './util';\nimport { Query, Predicate } from './query';\n/**\n * Adaptors are specific data source type aware interfaces that are used by DataManager to communicate with DataSource.\n * This is the base adaptor class that other adaptors can extend.\n * @hidden\n */\n\nvar Adaptor =\n/** @class */\nfunction () {\n  /**\n   * Constructor for Adaptor class\n   * @param  {DataOptions} ds?\n   * @hidden\n   * @returns aggregates\n   */\n  function Adaptor(ds) {\n    // common options for all the adaptors \n    this.options = {\n      from: 'table',\n      requestType: 'json',\n      sortBy: 'sorted',\n      select: 'select',\n      skip: 'skip',\n      group: 'group',\n      take: 'take',\n      search: 'search',\n      count: 'requiresCounts',\n      where: 'where',\n      aggregates: 'aggregates',\n      expand: 'expand'\n    };\n    /**\n     * Specifies the type of adaptor.\n     * @default Adaptor\n     */\n\n    this.type = Adaptor;\n    this.dataSource = ds;\n    this.pvt = {};\n  }\n  /**\n   * Returns the data from the query processing.\n   * @param  {Object} data\n   * @param  {DataOptions} ds?\n   * @param  {Query} query?\n   * @param  {XMLHttpRequest} xhr?\n   * @returns Object\n   */\n\n\n  Adaptor.prototype.processResponse = function (data, ds, query, xhr) {\n    return data;\n  };\n\n  return Adaptor;\n}();\n\nexport { Adaptor };\n/**\n * JsonAdaptor is used to process JSON data. It contains methods to process the given JSON data based on the queries.\n * @hidden\n */\n\nvar JsonAdaptor =\n/** @class */\nfunction (_super) {\n  __extends(JsonAdaptor, _super);\n\n  function JsonAdaptor() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  /**\n   * Process the JSON data based on the provided queries.\n   * @param  {DataManager} dataManager\n   * @param  {Query} query\n   * @returns Object\n   */\n\n\n  JsonAdaptor.prototype.processQuery = function (dataManager, query) {\n    var result = dataManager.dataSource.json.slice(0);\n    var count = result.length;\n    var countFlg = true;\n    var ret;\n    var key;\n    var agg = {};\n\n    for (var i = 0; i < query.queries.length; i++) {\n      key = query.queries[i];\n      ret = this[key.fn].call(this, result, key.e, query);\n\n      if (key.fn === 'onAggregates') {\n        agg[key.e.field + ' - ' + key.e.type] = ret;\n      } else {\n        result = ret !== undefined ? ret : result;\n      }\n\n      if (key.fn === 'onPage' || key.fn === 'onSkip' || key.fn === 'onTake' || key.fn === 'onRange') {\n        countFlg = false;\n      }\n\n      if (countFlg) {\n        count = result.length;\n      }\n    }\n\n    if (query.isCountRequired) {\n      result = {\n        result: result,\n        count: count,\n        aggregates: agg\n      };\n    }\n\n    return result;\n  };\n  /**\n   * Performs batch update in the JSON array which add, remove and update records.\n   * @param  {DataManager} dm\n   * @param  {CrudOptions} changes\n   * @param  {RemoteArgs} e\n   */\n\n\n  JsonAdaptor.prototype.batchRequest = function (dm, changes, e) {\n    var i;\n    var deletedRecordsLen = changes.deletedRecords.length;\n\n    for (i = 0; i < changes.addedRecords.length; i++) {\n      this.insert(dm, changes.addedRecords[i]);\n    }\n\n    for (i = 0; i < changes.changedRecords.length; i++) {\n      this.update(dm, e.key, changes.changedRecords[i]);\n    }\n\n    for (i = 0; i < deletedRecordsLen; i++) {\n      this.remove(dm, e.key, changes.deletedRecords[i]);\n    }\n\n    return changes;\n  };\n  /**\n   * Performs filter operation with the given data and where query.\n   * @param  {Object[]} ds\n   * @param  {{validate:Function}} e\n   */\n\n\n  JsonAdaptor.prototype.onWhere = function (ds, e) {\n    if (!ds || !ds.length) {\n      return ds;\n    }\n\n    return ds.filter(function (obj) {\n      if (e) {\n        return e.validate(obj);\n      }\n    });\n  };\n  /**\n   * Returns aggregate function based on the aggregate type.\n   * @param  {Object[]} ds\n   * @param  {{field:string} e\n   * @param  {string}} type\n   */\n\n\n  JsonAdaptor.prototype.onAggregates = function (ds, e) {\n    var fn = DataUtil.aggregates[e.type];\n\n    if (!ds || !fn || ds.length === 0) {\n      return null;\n    }\n\n    return fn(ds, e.field);\n  };\n  /**\n   * Performs search operation based on the given query.\n   * @param  {Object[]} ds\n   * @param  {QueryOptions} e\n   */\n\n\n  JsonAdaptor.prototype.onSearch = function (ds, e) {\n    if (!ds || !ds.length) {\n      return ds;\n    }\n\n    if (e.fieldNames.length === 0) {\n      DataUtil.getFieldList(ds[0], e.fieldNames);\n    }\n\n    return ds.filter(function (obj) {\n      for (var j = 0; j < e.fieldNames.length; j++) {\n        if (e.comparer.call(obj, DataUtil.getObject(e.fieldNames[j], obj), e.searchKey, e.ignoreCase, e.ignoreAccent)) {\n          return true;\n        }\n      }\n\n      return false;\n    });\n  };\n  /**\n   * Sort the data with given direction and field.\n   * @param  {Object[]} ds\n   * @param  {{comparer:(a:Object} e\n   * @param  {Object} b\n   */\n\n\n  JsonAdaptor.prototype.onSortBy = function (ds, e, query) {\n    if (!ds || !ds.length) {\n      return ds;\n    }\n\n    var fnCompare;\n    var field = DataUtil.getValue(e.fieldName, query);\n\n    if (!field) {\n      return ds.sort(e.comparer);\n    }\n\n    if (field instanceof Array) {\n      field = field.slice(0);\n\n      for (var i = field.length - 1; i >= 0; i--) {\n        if (!field[i]) {\n          continue;\n        }\n\n        fnCompare = e.comparer;\n\n        if (DataUtil.endsWith(field[i], ' desc')) {\n          fnCompare = DataUtil.fnSort('descending');\n          field[i] = field[i].replace(' desc', '');\n        }\n\n        ds = DataUtil.sort(ds, field[i], fnCompare);\n      }\n\n      return ds;\n    }\n\n    return DataUtil.sort(ds, field, e.comparer);\n  };\n  /**\n   * Group the data based on the given query.\n   * @param  {Object[]} ds\n   * @param  {QueryOptions} e\n   * @param  {Query} query\n   */\n\n\n  JsonAdaptor.prototype.onGroup = function (ds, e, query) {\n    if (!ds || !ds.length) {\n      return ds;\n    }\n\n    var aggQuery = Query.filterQueries(query.queries, 'onAggregates');\n    var agg = [];\n\n    if (aggQuery.length) {\n      var tmp = void 0;\n\n      for (var i = 0; i < aggQuery.length; i++) {\n        tmp = aggQuery[i].e;\n        agg.push({\n          type: tmp.type,\n          field: DataUtil.getValue(tmp.field, query)\n        });\n      }\n    }\n\n    return DataUtil.group(ds, DataUtil.getValue(e.fieldName, query), agg, null, null, e.comparer);\n  };\n  /**\n   * Retrieves records based on the given page index and size.\n   * @param  {Object[]} ds\n   * @param  {{pageSize:number} e\n   * @param  {number}} pageIndex\n   * @param  {Query} query\n   */\n\n\n  JsonAdaptor.prototype.onPage = function (ds, e, query) {\n    var size = DataUtil.getValue(e.pageSize, query);\n    var start = (DataUtil.getValue(e.pageIndex, query) - 1) * size;\n    var end = start + size;\n\n    if (!ds || !ds.length) {\n      return ds;\n    }\n\n    return ds.slice(start, end);\n  };\n  /**\n   * Retrieves records based on the given start and end index from query.\n   * @param  {Object[]} ds\n   * @param  {{start:number} e\n   * @param  {number}} end\n   */\n\n\n  JsonAdaptor.prototype.onRange = function (ds, e) {\n    if (!ds || !ds.length) {\n      return ds;\n    }\n\n    return ds.slice(DataUtil.getValue(e.start), DataUtil.getValue(e.end));\n  };\n  /**\n   * Picks the given count of records from the top of the datasource.\n   * @param  {Object[]} ds\n   * @param  {{nos:number}} e\n   */\n\n\n  JsonAdaptor.prototype.onTake = function (ds, e) {\n    if (!ds || !ds.length) {\n      return ds;\n    }\n\n    return ds.slice(0, DataUtil.getValue(e.nos));\n  };\n  /**\n   * Skips the given count of records from the data source.\n   * @param  {Object[]} ds\n   * @param  {{nos:number}} e\n   */\n\n\n  JsonAdaptor.prototype.onSkip = function (ds, e) {\n    if (!ds || !ds.length) {\n      return ds;\n    }\n\n    return ds.slice(DataUtil.getValue(e.nos));\n  };\n  /**\n   * Selects specified columns from the data source.\n   * @param  {Object[]} ds\n   * @param  {{fieldNames:string}} e\n   */\n\n\n  JsonAdaptor.prototype.onSelect = function (ds, e) {\n    if (!ds || !ds.length) {\n      return ds;\n    }\n\n    return DataUtil.select(ds, DataUtil.getValue(e.fieldNames));\n  };\n  /**\n   * Inserts new record in the table.\n   * @param  {DataManager} dm\n   * @param  {Object} data\n   * @param  {number} position\n   */\n\n\n  JsonAdaptor.prototype.insert = function (dm, data, tableName, query, position) {\n    if (isNullOrUndefined(position)) {\n      return dm.dataSource.json.push(data);\n    } else {\n      return dm.dataSource.json.splice(position, 0, data);\n    }\n  };\n  /**\n   * Remove the data from the dataSource based on the key field value.\n   * @param  {DataManager} dm\n   * @param  {string} keyField\n   * @param  {Object} value\n   * @param  {string} tableName?\n   * @returns null\n   */\n\n\n  JsonAdaptor.prototype.remove = function (dm, keyField, value, tableName) {\n    var ds = dm.dataSource.json;\n    var i;\n\n    if (typeof value === 'object' && !(value instanceof Date)) {\n      value = DataUtil.getObject(keyField, value);\n    }\n\n    for (i = 0; i < ds.length; i++) {\n      if (DataUtil.getObject(keyField, ds[i]) === value) {\n        break;\n      }\n    }\n\n    return i !== ds.length ? ds.splice(i, 1) : null;\n  };\n  /**\n   * Updates existing record and saves the changes to the table.\n   * @param  {DataManager} dm\n   * @param  {string} keyField\n   * @param  {Object} value\n   * @param  {string} tableName?\n   * @returns null\n   */\n\n\n  JsonAdaptor.prototype.update = function (dm, keyField, value, tableName) {\n    var ds = dm.dataSource.json;\n    var i;\n    var key;\n\n    if (!isNullOrUndefined(keyField)) {\n      key = getValue(keyField, value);\n    }\n\n    for (i = 0; i < ds.length; i++) {\n      if (!isNullOrUndefined(keyField) && getValue(keyField, ds[i]) === key) {\n        break;\n      }\n    }\n\n    return i < ds.length ? merge(ds[i], value) : null;\n  };\n\n  return JsonAdaptor;\n}(Adaptor);\n\nexport { JsonAdaptor };\n/**\n * URL Adaptor of DataManager can be used when you are required to use remote service to retrieve data.\n * It interacts with server-side for all DataManager Queries and CRUD operations.\n * @hidden\n */\n\nvar UrlAdaptor =\n/** @class */\nfunction (_super) {\n  __extends(UrlAdaptor, _super);\n\n  function UrlAdaptor() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  /**\n   * Process the query to generate request body.\n   * @param  {DataManager} dm\n   * @param  {Query} query\n   * @param  {Object[]} hierarchyFilters?\n   * @returns p\n   */\n\n\n  UrlAdaptor.prototype.processQuery = function (dm, query, hierarchyFilters) {\n    var queries = this.getQueryRequest(query);\n    var singles = Query.filterQueryLists(query.queries, ['onSelect', 'onPage', 'onSkip', 'onTake', 'onRange']);\n    var params = query.params;\n    var url = dm.dataSource.url;\n    var temp;\n    var skip;\n    var take = null;\n    var options = this.options;\n    var request = {\n      sorts: [],\n      groups: [],\n      filters: [],\n      searches: [],\n      aggregates: []\n    }; // calc Paging & Range\n\n    if ('onPage' in singles) {\n      temp = singles.onPage;\n      skip = DataUtil.getValue(temp.pageIndex, query);\n      take = DataUtil.getValue(temp.pageSize, query);\n      skip = (skip - 1) * take;\n    } else if ('onRange' in singles) {\n      temp = singles.onRange;\n      skip = temp.start;\n      take = temp.end - temp.start;\n    } // Sorting\n\n\n    for (var i = 0; i < queries.sorts.length; i++) {\n      temp = DataUtil.getValue(queries.sorts[i].e.fieldName, query);\n      request.sorts.push(DataUtil.callAdaptorFunction(this, 'onEachSort', {\n        name: temp,\n        direction: queries.sorts[i].e.direction\n      }, query));\n    } // hierarchy\n\n\n    if (hierarchyFilters) {\n      temp = this.getFiltersFrom(hierarchyFilters, query);\n\n      if (temp) {\n        request.filters.push(DataUtil.callAdaptorFunction(this, 'onEachWhere', temp.toJson(), query));\n      }\n    } // Filters\n\n\n    for (var i = 0; i < queries.filters.length; i++) {\n      request.filters.push(DataUtil.callAdaptorFunction(this, 'onEachWhere', queries.filters[i].e.toJson(), query));\n      var keys_3 = typeof request.filters[i] === 'object' ? Object.keys(request.filters[i]) : [];\n\n      for (var _i = 0, keys_1 = keys_3; _i < keys_1.length; _i++) {\n        var prop = keys_1[_i];\n\n        if (DataUtil.isNull(request[prop])) {\n          delete request[prop];\n        }\n      }\n    } // Searches\n\n\n    for (var i = 0; i < queries.searches.length; i++) {\n      temp = queries.searches[i].e;\n      request.searches.push(DataUtil.callAdaptorFunction(this, 'onEachSearch', {\n        fields: temp.fieldNames,\n        operator: temp.operator,\n        key: temp.searchKey,\n        ignoreCase: temp.ignoreCase\n      }, query));\n    } // Grouping\n\n\n    for (var i = 0; i < queries.groups.length; i++) {\n      request.groups.push(DataUtil.getValue(queries.groups[i].e.fieldName, query));\n    } // aggregates\n\n\n    for (var i = 0; i < queries.aggregates.length; i++) {\n      temp = queries.aggregates[i].e;\n      request.aggregates.push({\n        type: temp.type,\n        field: DataUtil.getValue(temp.field, query)\n      });\n    }\n\n    var req = {};\n    this.getRequestQuery(options, query, singles, request, req); // Params\n\n    DataUtil.callAdaptorFunction(this, 'addParams', {\n      dm: dm,\n      query: query,\n      params: params,\n      reqParams: req\n    }); // cleanup\n\n    var keys = Object.keys(req);\n\n    for (var _a = 0, keys_2 = keys; _a < keys_2.length; _a++) {\n      var prop = keys_2[_a];\n\n      if (DataUtil.isNull(req[prop]) || req[prop] === '' || req[prop].length === 0) {\n        delete req[prop];\n      }\n    }\n\n    if (!(options.skip in req && options.take in req) && take !== null) {\n      req[options.skip] = DataUtil.callAdaptorFunction(this, 'onSkip', skip, query);\n      req[options.take] = DataUtil.callAdaptorFunction(this, 'onTake', take, query);\n    }\n\n    var p = this.pvt;\n    this.pvt = {};\n\n    if (this.options.requestType === 'json') {\n      return {\n        data: JSON.stringify(req, DataUtil.parse.jsonDateReplacer),\n        url: url,\n        pvtData: p,\n        type: 'POST',\n        contentType: 'application/json; charset=utf-8'\n      };\n    }\n\n    temp = this.convertToQueryString(req, query, dm);\n    temp = (dm.dataSource.url.indexOf('?') !== -1 ? '&' : '/') + temp;\n    return {\n      type: 'GET',\n      url: temp.length ? url.replace(/\\/*$/, temp) : url,\n      pvtData: p\n    };\n  };\n\n  UrlAdaptor.prototype.getRequestQuery = function (options, query, singles, request, request1) {\n    var param = 'param';\n    var req = request1;\n    req[options.from] = query.fromTable;\n\n    if (options.apply && query.distincts.length) {\n      req[options.apply] = 'onDistinct' in this ? DataUtil.callAdaptorFunction(this, 'onDistinct', query.distincts) : '';\n    }\n\n    if (!query.distincts.length && options.expand) {\n      req[options.expand] = 'onExpand' in this && 'onSelect' in singles ? DataUtil.callAdaptorFunction(this, 'onExpand', {\n        selects: DataUtil.getValue(singles.onSelect.fieldNames, query),\n        expands: query.expands\n      }, query) : query.expands;\n    }\n\n    req[options.select] = 'onSelect' in singles && !query.distincts.length ? DataUtil.callAdaptorFunction(this, 'onSelect', DataUtil.getValue(singles.onSelect.fieldNames, query), query) : '';\n    req[options.count] = query.isCountRequired ? DataUtil.callAdaptorFunction(this, 'onCount', query.isCountRequired, query) : '';\n    req[options.search] = request.searches.length ? DataUtil.callAdaptorFunction(this, 'onSearch', request.searches, query) : '';\n    req[options.skip] = 'onSkip' in singles ? DataUtil.callAdaptorFunction(this, 'onSkip', DataUtil.getValue(singles.onSkip.nos, query), query) : '';\n    req[options.take] = 'onTake' in singles ? DataUtil.callAdaptorFunction(this, 'onTake', DataUtil.getValue(singles.onTake.nos, query), query) : '';\n    req[options.where] = request.filters.length || request.searches.length ? DataUtil.callAdaptorFunction(this, 'onWhere', request.filters, query) : '';\n    req[options.sortBy] = request.sorts.length ? DataUtil.callAdaptorFunction(this, 'onSortBy', request.sorts, query) : '';\n    req[options.group] = request.groups.length ? DataUtil.callAdaptorFunction(this, 'onGroup', request.groups, query) : '';\n    req[options.aggregates] = request.aggregates.length ? DataUtil.callAdaptorFunction(this, 'onAggregates', request.aggregates, query) : '';\n    req[param] = [];\n  };\n  /**\n   * Convert the object from processQuery to string which can be added query string.\n   * @param  {Object} req\n   * @param  {Query} query\n   * @param  {DataManager} dm\n   */\n\n\n  UrlAdaptor.prototype.convertToQueryString = function (request, query, dm) {\n    return ''; // this needs to be overridden\n  };\n  /**\n   * Return the data from the data manager processing.\n   * @param  {DataResult} data\n   * @param  {DataOptions} ds?\n   * @param  {Query} query?\n   * @param  {XMLHttpRequest} xhr?\n   * @param  {Object} request?\n   * @param  {CrudOptions} changes?\n   */\n\n\n  UrlAdaptor.prototype.processResponse = function (data, ds, query, xhr, request, changes) {\n    if (xhr && xhr.getResponseHeader('Content-Type') && xhr.getResponseHeader('Content-Type').indexOf('application/json') !== -1) {\n      var handleTimeZone = DataUtil.timeZoneHandling;\n\n      if (ds && !ds.timeZoneHandling) {\n        DataUtil.timeZoneHandling = false;\n      }\n\n      data = DataUtil.parse.parseJson(data);\n      DataUtil.timeZoneHandling = handleTimeZone;\n    }\n\n    var requests = request;\n    var pvt = requests.pvtData || {};\n    var groupDs = data ? data.groupDs : [];\n\n    if (xhr && xhr.getResponseHeader('Content-Type') && xhr.getResponseHeader('Content-Type').indexOf('xml') !== -1) {\n      return query.isCountRequired ? {\n        result: [],\n        count: 0\n      } : [];\n    }\n\n    var d = JSON.parse(requests.data);\n\n    if (d && d.action === 'batch' && data && data.addedRecords) {\n      changes.addedRecords = data.addedRecords;\n      return changes;\n    }\n\n    if (data && data.d) {\n      data = data.d;\n    }\n\n    var args = {};\n\n    if (data && 'count' in data) {\n      args.count = data.count;\n    }\n\n    args.result = data && data.result ? data.result : data;\n    this.getAggregateResult(pvt, data, args, groupDs, query);\n    return DataUtil.isNull(args.count) ? args.result : {\n      result: args.result,\n      count: args.count,\n      aggregates: args.aggregates\n    };\n  };\n  /**\n   * Add the group query to the adaptor`s option.\n   * @param  {Object[]} e\n   * @returns void\n   */\n\n\n  UrlAdaptor.prototype.onGroup = function (e) {\n    this.pvt.groups = e;\n    return e;\n  };\n  /**\n   * Add the aggregate query to the adaptor`s option.\n   * @param  {Aggregates[]} e\n   * @returns void\n   */\n\n\n  UrlAdaptor.prototype.onAggregates = function (e) {\n    this.pvt.aggregates = e;\n  };\n  /**\n   * Prepare the request body based on the newly added, removed and updated records.\n   * The result is used by the batch request.\n   * @param  {DataManager} dm\n   * @param  {CrudOptions} changes\n   * @param  {Object} e\n   */\n\n\n  UrlAdaptor.prototype.batchRequest = function (dm, changes, e, query, original) {\n    var url;\n    var key;\n    return {\n      type: 'POST',\n      url: dm.dataSource.batchUrl || dm.dataSource.crudUrl || dm.dataSource.removeUrl || dm.dataSource.url,\n      contentType: 'application/json; charset=utf-8',\n      dataType: 'json',\n      data: JSON.stringify(extend({}, {\n        changed: changes.changedRecords,\n        added: changes.addedRecords,\n        deleted: changes.deletedRecords,\n        action: 'batch',\n        table: e[url],\n        key: e[key]\n      }, DataUtil.getAddParams(this, dm, query)))\n    };\n  };\n  /**\n   * Method will trigger before send the request to server side.\n   * Used to set the custom header or modify the request options.\n   * @param  {DataManager} dm\n   * @param  {XMLHttpRequest} request\n   * @returns void\n   */\n\n\n  UrlAdaptor.prototype.beforeSend = function (dm, request) {// need to extend this method\n  };\n  /**\n   * Prepare and returns request body which is used to insert a new record in the table.\n   * @param  {DataManager} dm\n   * @param  {Object} data\n   * @param  {string} tableName\n   */\n\n\n  UrlAdaptor.prototype.insert = function (dm, data, tableName, query) {\n    return {\n      url: dm.dataSource.insertUrl || dm.dataSource.crudUrl || dm.dataSource.url,\n      data: JSON.stringify(extend({}, {\n        value: data,\n        table: tableName,\n        action: 'insert'\n      }, DataUtil.getAddParams(this, dm, query)))\n    };\n  };\n  /**\n   * Prepare and return request body which is used to remove record from the table.\n   * @param  {DataManager} dm\n   * @param  {string} keyField\n   * @param  {number|string} value\n   * @param  {string} tableName\n   */\n\n\n  UrlAdaptor.prototype.remove = function (dm, keyField, value, tableName, query) {\n    return {\n      type: 'POST',\n      url: dm.dataSource.removeUrl || dm.dataSource.crudUrl || dm.dataSource.url,\n      data: JSON.stringify(extend({}, {\n        key: value,\n        keyColumn: keyField,\n        table: tableName,\n        action: 'remove'\n      }, DataUtil.getAddParams(this, dm, query)))\n    };\n  };\n  /**\n   * Prepare and return request body which is used to update record.\n   * @param  {DataManager} dm\n   * @param  {string} keyField\n   * @param  {Object} value\n   * @param  {string} tableName\n   */\n\n\n  UrlAdaptor.prototype.update = function (dm, keyField, value, tableName, query) {\n    return {\n      type: 'POST',\n      url: dm.dataSource.updateUrl || dm.dataSource.crudUrl || dm.dataSource.url,\n      data: JSON.stringify(extend({}, {\n        value: value,\n        action: 'update',\n        keyColumn: keyField,\n        key: DataUtil.getObject(keyField, value),\n        table: tableName\n      }, DataUtil.getAddParams(this, dm, query)))\n    };\n  };\n  /**\n   * To generate the predicate based on the filtered query.\n   * @param  {Object[]|string[]|number[]} data\n   * @param  {Query} query\n   * @hidden\n   */\n\n\n  UrlAdaptor.prototype.getFiltersFrom = function (data, query) {\n    var key = query.fKey;\n    var value;\n    var prop = key;\n    var pKey = query.key;\n    var predicats = [];\n\n    if (typeof data[0] !== 'object') {\n      prop = null;\n    }\n\n    for (var i = 0; i < data.length; i++) {\n      if (typeof data[0] === 'object') {\n        value = DataUtil.getObject(pKey || prop, data[i]);\n      } else {\n        value = data[i];\n      }\n\n      predicats.push(new Predicate(key, 'equal', value));\n    }\n\n    return Predicate.or(predicats);\n  };\n\n  UrlAdaptor.prototype.getAggregateResult = function (pvt, data, args, groupDs, query) {\n    var pData = data;\n\n    if (data && data.result) {\n      pData = data.result;\n    }\n\n    if (pvt && pvt.aggregates && pvt.aggregates.length) {\n      var agg = pvt.aggregates;\n      var fn = void 0;\n      var aggregateData = pData;\n      var res = {};\n\n      if (data.aggregate) {\n        aggregateData = data.aggregate;\n      }\n\n      for (var i = 0; i < agg.length; i++) {\n        fn = DataUtil.aggregates[agg[i].type];\n\n        if (fn) {\n          res[agg[i].field + ' - ' + agg[i].type] = fn(aggregateData, agg[i].field);\n        }\n      }\n\n      args.aggregates = res;\n    }\n\n    if (pvt && pvt.groups && pvt.groups.length) {\n      var groups = pvt.groups;\n\n      for (var i = 0; i < groups.length; i++) {\n        var level = null;\n\n        if (!isNullOrUndefined(groupDs)) {\n          groupDs = DataUtil.group(groupDs, groups[i]);\n        }\n\n        var groupQuery = Query.filterQueries(query.queries, 'onGroup')[i].e;\n        pData = DataUtil.group(pData, groups[i], pvt.aggregates, level, groupDs, groupQuery.comparer);\n      }\n\n      args.result = pData;\n    }\n\n    return args;\n  };\n\n  UrlAdaptor.prototype.getQueryRequest = function (query) {\n    var req = {\n      sorts: [],\n      groups: [],\n      filters: [],\n      searches: [],\n      aggregates: []\n    };\n    req.sorts = Query.filterQueries(query.queries, 'onSortBy');\n    req.groups = Query.filterQueries(query.queries, 'onGroup');\n    req.filters = Query.filterQueries(query.queries, 'onWhere');\n    req.searches = Query.filterQueries(query.queries, 'onSearch');\n    req.aggregates = Query.filterQueries(query.queries, 'onAggregates');\n    return req;\n  };\n\n  UrlAdaptor.prototype.addParams = function (options) {\n    var req = options.reqParams;\n\n    if (options.params.length) {\n      req.params = {};\n    }\n\n    for (var _i = 0, _a = options.params; _i < _a.length; _i++) {\n      var tmp = _a[_i];\n\n      if (req[tmp.key]) {\n        throw new Error('Query() - addParams: Custom Param is conflicting other request arguments');\n      }\n\n      req[tmp.key] = tmp.value;\n\n      if (tmp.fn) {\n        req[tmp.key] = tmp.fn.call(options.query, tmp.key, options.query, options.dm);\n      }\n\n      req.params[tmp.key] = req[tmp.key];\n    }\n  };\n\n  return UrlAdaptor;\n}(Adaptor);\n\nexport { UrlAdaptor };\n/**\n * OData Adaptor that is extended from URL Adaptor, is used for consuming data through OData Service.\n * @hidden\n */\n\nvar ODataAdaptor =\n/** @class */\nfunction (_super) {\n  __extends(ODataAdaptor, _super);\n\n  function ODataAdaptor(props) {\n    var _this = _super.call(this) || this; // options replaced the default adaptor options\n\n\n    _this.options = extend({}, _this.options, {\n      requestType: 'get',\n      accept: 'application/json;odata=light;q=1,application/json;odata=verbose;q=0.5',\n      multipartAccept: 'multipart/mixed',\n      sortBy: '$orderby',\n      select: '$select',\n      skip: '$skip',\n      take: '$top',\n      count: '$inlinecount',\n      where: '$filter',\n      expand: '$expand',\n      batch: '$batch',\n      changeSet: '--changeset_',\n      batchPre: 'batch_',\n      contentId: 'Content-Id: ',\n      batchContent: 'Content-Type: multipart/mixed; boundary=',\n      changeSetContent: 'Content-Type: application/http\\nContent-Transfer-Encoding: binary ',\n      batchChangeSetContentType: 'Content-Type: application/json; charset=utf-8 ',\n      updateType: 'PUT'\n    });\n    extend(_this.options, props || {});\n    return _this;\n  }\n\n  ODataAdaptor.prototype.getModuleName = function () {\n    return 'ODataAdaptor';\n  };\n  /**\n   * Generate request string based on the filter criteria from query.\n   * @param  {Predicate} pred\n   * @param  {boolean} requiresCast?\n   */\n\n\n  ODataAdaptor.prototype.onPredicate = function (predicate, query, requiresCast) {\n    var returnValue = '';\n    var operator;\n    var guid;\n    var val = predicate.value;\n    var type = typeof val;\n    var field = predicate.field ? ODataAdaptor.getField(predicate.field) : null;\n\n    if (val instanceof Date) {\n      val = 'datetime\\'' + DataUtil.parse.replacer(val) + '\\'';\n    }\n\n    if (type === 'string') {\n      val = encodeURIComponent(val);\n      val = '\\'' + val + '\\'';\n\n      if (requiresCast) {\n        field = 'cast(' + field + ', \\'Edm.String\\')';\n      }\n\n      if (DataUtil.parse.isGuid(val)) {\n        guid = 'guid';\n      }\n\n      if (predicate.ignoreCase) {\n        if (!guid) {\n          field = 'tolower(' + field + ')';\n        }\n\n        val = val.toLowerCase();\n      }\n    }\n\n    operator = DataUtil.odBiOperator[predicate.operator];\n\n    if (operator) {\n      returnValue += field;\n      returnValue += operator;\n\n      if (guid) {\n        returnValue += guid;\n      }\n\n      return returnValue + val;\n    }\n\n    if (!isNullOrUndefined(this.getModuleName) && this.getModuleName() === 'ODataV4Adaptor') {\n      operator = DataUtil.odv4UniOperator[predicate.operator];\n    } else {\n      operator = DataUtil.odUniOperator[predicate.operator];\n    }\n\n    if (operator === 'substringof') {\n      var temp = val;\n      val = field;\n      field = temp;\n    }\n\n    returnValue += operator + '(';\n    returnValue += field + ',';\n\n    if (guid) {\n      returnValue += guid;\n    }\n\n    returnValue += val + ')';\n    return returnValue;\n  };\n\n  ODataAdaptor.prototype.addParams = function (options) {\n    _super.prototype.addParams.call(this, options);\n\n    delete options.reqParams.params;\n  };\n  /**\n   * Generate request string based on the multiple filter criteria from query.\n   * @param  {Predicate} pred\n   * @param  {boolean} requiresCast?\n   */\n\n\n  ODataAdaptor.prototype.onComplexPredicate = function (predicate, query, requiresCast) {\n    var res = [];\n\n    for (var i = 0; i < predicate.predicates.length; i++) {\n      res.push('(' + this.onEachWhere(predicate.predicates[i], query, requiresCast) + ')');\n    }\n\n    return res.join(' ' + predicate.condition + ' ');\n  };\n  /**\n   * Generate query string based on the multiple filter criteria from query.\n   * @param  {Predicate} filter\n   * @param  {boolean} requiresCast?\n   */\n\n\n  ODataAdaptor.prototype.onEachWhere = function (filter, query, requiresCast) {\n    return filter.isComplex ? this.onComplexPredicate(filter, query, requiresCast) : this.onPredicate(filter, query, requiresCast);\n  };\n  /**\n   * Generate query string based on the multiple filter criteria from query.\n   * @param  {string[]} filters\n   */\n\n\n  ODataAdaptor.prototype.onWhere = function (filters) {\n    if (this.pvt.search) {\n      filters.push(this.onEachWhere(this.pvt.search, null, true));\n    }\n\n    return filters.join(' and ');\n  };\n  /**\n   * Generate query string based on the multiple search criteria from query.\n   * @param  {{fields:string[]} e\n   * @param  {string} operator\n   * @param  {string} key\n   * @param  {boolean}} ignoreCase\n   */\n\n\n  ODataAdaptor.prototype.onEachSearch = function (e) {\n    if (e.fields && e.fields.length === 0) {\n      DataUtil.throwError('Query() - Search : oData search requires list of field names to search');\n    }\n\n    var filter = this.pvt.search || [];\n\n    for (var i = 0; i < e.fields.length; i++) {\n      filter.push(new Predicate(e.fields[i], e.operator, e.key, e.ignoreCase));\n    }\n\n    this.pvt.search = filter;\n  };\n  /**\n   * Generate query string based on the search criteria from query.\n   * @param  {Object} e\n   */\n\n\n  ODataAdaptor.prototype.onSearch = function (e) {\n    this.pvt.search = Predicate.or(this.pvt.search);\n    return '';\n  };\n  /**\n   * Generate query string based on multiple sort criteria from query.\n   * @param  {QueryOptions} e\n   */\n\n\n  ODataAdaptor.prototype.onEachSort = function (e) {\n    var res = [];\n\n    if (e.name instanceof Array) {\n      for (var i = 0; i < e.name.length; i++) {\n        res.push(ODataAdaptor.getField(e.name[i]) + (e.direction === 'descending' ? ' desc' : ''));\n      }\n    } else {\n      res.push(ODataAdaptor.getField(e.name) + (e.direction === 'descending' ? ' desc' : ''));\n    }\n\n    return res.join(',');\n  };\n  /**\n   * Returns sort query string.\n   * @param  {string[]} e\n   */\n\n\n  ODataAdaptor.prototype.onSortBy = function (e) {\n    return e.reverse().join(',');\n  };\n  /**\n   * Adds the group query to the adaptor option.\n   * @param  {Object[]} e\n   * @returns string\n   */\n\n\n  ODataAdaptor.prototype.onGroup = function (e) {\n    this.pvt.groups = e;\n    return [];\n  };\n  /**\n   * Returns the select query string.\n   * @param  {string[]} e\n   */\n\n\n  ODataAdaptor.prototype.onSelect = function (e) {\n    for (var i = 0; i < e.length; i++) {\n      e[i] = ODataAdaptor.getField(e[i]);\n    }\n\n    return e.join(',');\n  };\n  /**\n   * Add the aggregate query to the adaptor option.\n   * @param  {Object[]} e\n   * @returns string\n   */\n\n\n  ODataAdaptor.prototype.onAggregates = function (e) {\n    this.pvt.aggregates = e;\n    return '';\n  };\n  /**\n   * Returns the query string which requests total count from the data source.\n   * @param  {boolean} e\n   * @returns string\n   */\n\n\n  ODataAdaptor.prototype.onCount = function (e) {\n    return e === true ? 'allpages' : '';\n  };\n  /**\n   * Method will trigger before send the request to server side.\n   * Used to set the custom header or modify the request options.\n   * @param  {DataManager} dm\n   * @param  {XMLHttpRequest} request\n   * @param  {Ajax} settings?\n   */\n\n\n  ODataAdaptor.prototype.beforeSend = function (dm, request, settings) {\n    if (DataUtil.endsWith(settings.url, this.options.batch) && settings.type.toLowerCase() === 'post') {\n      request.setRequestHeader('Accept', this.options.multipartAccept);\n      request.setRequestHeader('DataServiceVersion', '2.0');\n      request.overrideMimeType('text/plain; charset=x-user-defined');\n    } else {\n      request.setRequestHeader('Accept', this.options.accept);\n    }\n\n    request.setRequestHeader('DataServiceVersion', '2.0');\n    request.setRequestHeader('MaxDataServiceVersion', '2.0');\n  };\n  /**\n   * Returns the data from the query processing.\n   * @param  {DataResult} data\n   * @param  {DataOptions} ds?\n   * @param  {Query} query?\n   * @param  {XMLHttpRequest} xhr?\n   * @param  {Ajax} request?\n   * @param  {CrudOptions} changes?\n   * @returns aggregateResult\n   */\n\n\n  ODataAdaptor.prototype.processResponse = function (data, ds, query, xhr, request, changes) {\n    var metaCheck = 'odata.metadata';\n\n    if (request && request.type === 'GET' && !this.rootUrl && data[metaCheck]) {\n      var dataUrls = data[metaCheck].split('/$metadata#');\n      this.rootUrl = dataUrls[0];\n      this.resourceTableName = dataUrls[1];\n    }\n\n    var pvtData = 'pvtData';\n\n    if (!isNullOrUndefined(data.d)) {\n      var dataCopy = query && query.isCountRequired ? data.d.results : data.d;\n      var metaData = '__metadata';\n\n      if (!isNullOrUndefined(dataCopy)) {\n        for (var i = 0; i < dataCopy.length; i++) {\n          if (!isNullOrUndefined(dataCopy[i][metaData])) {\n            delete dataCopy[i][metaData];\n          }\n        }\n      }\n    }\n\n    var pvt = request && request[pvtData];\n    var emptyAndBatch = this.processBatchResponse(data, query, xhr, request, changes);\n\n    if (emptyAndBatch) {\n      return emptyAndBatch;\n    }\n\n    var versionCheck = xhr && request.getResponseHeader('DataServiceVersion');\n    var count = null;\n    var version = versionCheck && parseInt(versionCheck, 10) || 2;\n\n    if (query && query.isCountRequired) {\n      var oDataCount = '__count';\n\n      if (data[oDataCount] || data['odata.count']) {\n        count = data[oDataCount] || data['odata.count'];\n      }\n\n      if (data.d) {\n        data = data.d;\n      }\n\n      if (data[oDataCount] || data['odata.count']) {\n        count = data[oDataCount] || data['odata.count'];\n      }\n    }\n\n    if (version === 3 && data.value) {\n      data = data.value;\n    }\n\n    if (data.d) {\n      data = data.d;\n    }\n\n    if (version < 3 && data.results) {\n      data = data.results;\n    }\n\n    var args = {};\n    args.count = count;\n    args.result = data;\n    this.getAggregateResult(pvt, data, args, null, query);\n    return DataUtil.isNull(count) ? args.result : {\n      result: args.result,\n      count: args.count,\n      aggregates: args.aggregates\n    };\n  };\n  /**\n   * Converts the request object to query string.\n   * @param  {Object} req\n   * @param  {Query} query\n   * @param  {DataManager} dm\n   * @returns tableName\n   */\n\n\n  ODataAdaptor.prototype.convertToQueryString = function (request, query, dm) {\n    var res = [];\n    var table = 'table';\n    var tableName = request[table] || '';\n    var format = '$format';\n    delete request[table];\n\n    if (dm.dataSource.requiresFormat) {\n      request[format] = 'json';\n    }\n\n    var keys = Object.keys(request);\n\n    for (var _i = 0, keys_4 = keys; _i < keys_4.length; _i++) {\n      var prop = keys_4[_i];\n      res.push(prop + '=' + request[prop]);\n    }\n\n    res = res.join('&');\n\n    if (dm.dataSource.url && dm.dataSource.url.indexOf('?') !== -1 && !tableName) {\n      return res;\n    }\n\n    return res.length ? tableName + '?' + res : tableName || '';\n  };\n\n  ODataAdaptor.prototype.localTimeReplacer = function (key, convertObj) {\n    for (var _i = 0, _a = !isNullOrUndefined(convertObj) ? Object.keys(convertObj) : []; _i < _a.length; _i++) {\n      var prop = _a[_i];\n\n      if (convertObj[prop] instanceof Date) {\n        convertObj[prop] = DataUtil.dateParse.toLocalTime(convertObj[prop]);\n      }\n    }\n\n    return convertObj;\n  };\n  /**\n   * Prepare and returns request body which is used to insert a new record in the table.\n   * @param  {DataManager} dm\n   * @param  {Object} data\n   * @param  {string} tableName?\n   */\n\n\n  ODataAdaptor.prototype.insert = function (dm, data, tableName) {\n    return {\n      url: (dm.dataSource.insertUrl || dm.dataSource.url).replace(/\\/*$/, tableName ? '/' + tableName : ''),\n      data: JSON.stringify(data, this.options.localTime ? this.localTimeReplacer : null)\n    };\n  };\n  /**\n   * Prepare and return request body which is used to remove record from the table.\n   * @param  {DataManager} dm\n   * @param  {string} keyField\n   * @param  {number} value\n   * @param  {string} tableName?\n   */\n\n\n  ODataAdaptor.prototype.remove = function (dm, keyField, value, tableName) {\n    var url;\n\n    if (typeof value === 'string' && !DataUtil.parse.isGuid(value)) {\n      url = \"('\" + value + \"')\";\n    } else {\n      url = \"(\" + value + \")\";\n    }\n\n    return {\n      type: 'DELETE',\n      url: (dm.dataSource.removeUrl || dm.dataSource.url).replace(/\\/*$/, tableName ? '/' + tableName : '') + url\n    };\n  };\n  /**\n   * Updates existing record and saves the changes to the table.\n   * @param  {DataManager} dm\n   * @param  {string} keyField\n   * @param  {Object} value\n   * @param  {string} tableName?\n   * @returns this\n   */\n\n\n  ODataAdaptor.prototype.update = function (dm, keyField, value, tableName, query, original) {\n    if (this.options.updateType === 'PATCH' && !isNullOrUndefined(original)) {\n      value = this.compareAndRemove(value, original, keyField);\n    }\n\n    var url;\n\n    if (typeof value[keyField] === 'string' && !DataUtil.parse.isGuid(value[keyField])) {\n      url = \"('\" + value[keyField] + \"')\";\n    } else {\n      url = \"(\" + value[keyField] + \")\";\n    }\n\n    return {\n      type: this.options.updateType,\n      url: (dm.dataSource.updateUrl || dm.dataSource.url).replace(/\\/*$/, tableName ? '/' + tableName : '') + url,\n      data: JSON.stringify(value, this.options.localTime ? this.localTimeReplacer : null),\n      accept: this.options.accept\n    };\n  };\n  /**\n   * Prepare the request body based on the newly added, removed and updated records.\n   * The result is used by the batch request.\n   * @param  {DataManager} dm\n   * @param  {CrudOptions} changes\n   * @param  {RemoteArgs} e\n   * @returns {Object}\n   */\n\n\n  ODataAdaptor.prototype.batchRequest = function (dm, changes, e, query, original) {\n    var initialGuid = e.guid = DataUtil.getGuid(this.options.batchPre);\n    var url = this.rootUrl ? this.rootUrl + '/' + this.options.batch : dm.dataSource.url.replace(/\\/*$/, '/' + this.options.batch);\n    e.url = this.resourceTableName ? this.resourceTableName : e.url;\n    var args = {\n      url: e.url,\n      key: e.key,\n      cid: 1,\n      cSet: DataUtil.getGuid(this.options.changeSet)\n    };\n    var req = '--' + initialGuid + '\\n';\n    req += 'Content-Type: multipart/mixed; boundary=' + args.cSet.replace('--', '') + '\\n';\n    this.pvt.changeSet = 0;\n    req += this.generateInsertRequest(changes.addedRecords, args, dm);\n    req += this.generateUpdateRequest(changes.changedRecords, args, dm, original ? original.changedRecords : []);\n    req += this.generateDeleteRequest(changes.deletedRecords, args, dm);\n    req += args.cSet + '--\\n';\n    req += '--' + initialGuid + '--';\n    return {\n      type: 'POST',\n      url: url,\n      dataType: 'json',\n      contentType: 'multipart/mixed; charset=UTF-8;boundary=' + initialGuid,\n      data: req\n    };\n  };\n  /**\n   * Generate the string content from the removed records.\n   * The result will be send during batch update.\n   * @param  {Object[]} arr\n   * @param  {RemoteArgs} e\n   * @returns this\n   */\n\n\n  ODataAdaptor.prototype.generateDeleteRequest = function (arr, e, dm) {\n    if (!arr) {\n      return '';\n    }\n\n    var req = '';\n    var stat = {\n      'method': 'DELETE ',\n      'url': function (data, i, key) {\n        var url = DataUtil.getObject(key, data[i]);\n\n        if (typeof url === 'number' || DataUtil.parse.isGuid(url)) {\n          return '(' + url + ')';\n        } else if (url instanceof Date) {\n          var dateTime = data[i][key];\n          return '(' + dateTime.toJSON() + ')';\n        } else {\n          return \"('\" + url + \"')\";\n        }\n      },\n      'data': function (data, i) {\n        return '';\n      }\n    };\n    req = this.generateBodyContent(arr, e, stat, dm);\n    return req + '\\n';\n  };\n  /**\n   * Generate the string content from the inserted records.\n   * The result will be send during batch update.\n   * @param  {Object[]} arr\n   * @param  {RemoteArgs} e\n   */\n\n\n  ODataAdaptor.prototype.generateInsertRequest = function (arr, e, dm) {\n    if (!arr) {\n      return '';\n    }\n\n    var req = '';\n    var stat = {\n      'method': 'POST ',\n      'url': function (data, i, key) {\n        return '';\n      },\n      'data': function (data, i) {\n        return JSON.stringify(data[i]) + '\\n\\n';\n      }\n    };\n    req = this.generateBodyContent(arr, e, stat, dm);\n    return req;\n  };\n  /**\n   * Generate the string content from the updated records.\n   * The result will be send during batch update.\n   * @param  {Object[]} arr\n   * @param  {RemoteArgs} e\n   */\n\n\n  ODataAdaptor.prototype.generateUpdateRequest = function (arr, e, dm, org) {\n    var _this = this;\n\n    if (!arr) {\n      return '';\n    }\n\n    var req = '';\n    arr.forEach(function (change) {\n      return change = _this.compareAndRemove(change, org.filter(function (o) {\n        return DataUtil.getObject(e.key, o) === DataUtil.getObject(e.key, change);\n      })[0], e.key);\n    });\n    var stat = {\n      'method': this.options.updateType + ' ',\n      'url': function (data, i, key) {\n        if (typeof data[i][key] === 'number' || DataUtil.parse.isGuid(data[i][key])) {\n          return '(' + data[i][key] + ')';\n        } else if (data[i][key] instanceof Date) {\n          var date = data[i][key];\n          return '(' + date.toJSON() + ')';\n        } else {\n          return \"('\" + data[i][key] + \"')\";\n        }\n      },\n      'data': function (data, i) {\n        return JSON.stringify(data[i]) + '\\n\\n';\n      }\n    };\n    req = this.generateBodyContent(arr, e, stat, dm);\n    return req;\n  };\n\n  ODataAdaptor.getField = function (prop) {\n    return prop.replace(/\\./g, '/');\n  };\n\n  ODataAdaptor.prototype.generateBodyContent = function (arr, e, stat, dm) {\n    var req = '';\n\n    for (var i = 0; i < arr.length; i++) {\n      req += '\\n' + e.cSet + '\\n';\n      req += this.options.changeSetContent + '\\n\\n';\n      req += stat.method;\n\n      if (stat.method === 'POST ') {\n        req += (dm.dataSource.insertUrl || dm.dataSource.crudUrl || e.url) + stat.url(arr, i, e.key) + ' HTTP/1.1\\n';\n      } else if (stat.method === 'PUT ' || stat.method === 'PATCH ') {\n        req += (dm.dataSource.updateUrl || dm.dataSource.crudUrl || e.url) + stat.url(arr, i, e.key) + ' HTTP/1.1\\n';\n      } else if (stat.method === 'DELETE ') {\n        req += (dm.dataSource.removeUrl || dm.dataSource.crudUrl || e.url) + stat.url(arr, i, e.key) + ' HTTP/1.1\\n';\n      }\n\n      req += 'Accept: ' + this.options.accept + '\\n';\n      req += 'Content-Id: ' + this.pvt.changeSet++ + '\\n';\n      req += this.options.batchChangeSetContentType + '\\n';\n\n      if (!isNullOrUndefined(arr[i]['@odata.etag'])) {\n        req += 'If-Match: ' + arr[i]['@odata.etag'] + '\\n\\n';\n        delete arr[i]['@odata.etag'];\n      } else {\n        req += '\\n';\n      }\n\n      req += stat.data(arr, i);\n    }\n\n    return req;\n  };\n\n  ODataAdaptor.prototype.processBatchResponse = function (data, query, xhr, request, changes) {\n    if (xhr && xhr.getResponseHeader('Content-Type') && xhr.getResponseHeader('Content-Type').indexOf('xml') !== -1) {\n      return query.isCountRequired ? {\n        result: [],\n        count: 0\n      } : [];\n    }\n\n    if (request && this.options.batch && DataUtil.endsWith(request.url, this.options.batch) && request.type.toLowerCase() === 'post') {\n      var guid = xhr.getResponseHeader('Content-Type');\n      var cIdx = void 0;\n      var jsonObj = void 0;\n      var d = data + '';\n      guid = guid.substring(guid.indexOf('=batchresponse') + 1);\n      d = d.split(guid);\n\n      if (d.length < 2) {\n        return {};\n      }\n\n      d = d[1];\n      var exVal = /(?:\\bContent-Type.+boundary=)(changesetresponse.+)/i.exec(d);\n\n      if (exVal) {\n        d.replace(exVal[0], '');\n      }\n\n      var changeGuid = exVal ? exVal[1] : '';\n      d = d.split(changeGuid);\n\n      for (var i = d.length; i > -1; i--) {\n        if (!/\\bContent-ID:/i.test(d[i]) || !/\\bHTTP.+201/.test(d[i])) {\n          continue;\n        }\n\n        cIdx = parseInt(/\\bContent-ID: (\\d+)/i.exec(d[i])[1], 10);\n\n        if (changes.addedRecords[cIdx]) {\n          jsonObj = DataUtil.parse.parseJson(/^\\{.+\\}/m.exec(d[i])[0]);\n          extend({}, changes.addedRecords[cIdx], this.processResponse(jsonObj));\n        }\n      }\n\n      return changes;\n    }\n\n    return null;\n  };\n\n  ODataAdaptor.prototype.compareAndRemove = function (data, original, key) {\n    var _this = this;\n\n    if (isNullOrUndefined(original)) {\n      return data;\n    }\n\n    Object.keys(data).forEach(function (prop) {\n      if (prop !== key && prop !== '@odata.etag') {\n        if (DataUtil.isPlainObject(data[prop])) {\n          _this.compareAndRemove(data[prop], original[prop]);\n\n          var final = Object.keys(data[prop]).filter(function (data) {\n            return data !== '@odata.etag';\n          });\n\n          if (final.length === 0) {\n            delete data[prop];\n          }\n        } else if (data[prop] === original[prop]) {\n          delete data[prop];\n        } else if (data[prop] && original[prop] && data[prop].valueOf() === original[prop].valueOf()) {\n          delete data[prop];\n        }\n      }\n    });\n    return data;\n  };\n\n  return ODataAdaptor;\n}(UrlAdaptor);\n\nexport { ODataAdaptor };\n/**\n * The OData v4 is an improved version of OData protocols.\n * The DataManager uses the ODataV4Adaptor to consume OData v4 services.\n * @hidden\n */\n\nvar ODataV4Adaptor =\n/** @class */\nfunction (_super) {\n  __extends(ODataV4Adaptor, _super);\n\n  function ODataV4Adaptor(props) {\n    var _this = _super.call(this, props) || this; // options replaced the default adaptor options\n\n\n    _this.options = extend({}, _this.options, {\n      requestType: 'get',\n      accept: 'application/json, text/javascript, */*; q=0.01',\n      multipartAccept: 'multipart/mixed',\n      sortBy: '$orderby',\n      select: '$select',\n      skip: '$skip',\n      take: '$top',\n      count: '$count',\n      search: '$search',\n      where: '$filter',\n      expand: '$expand',\n      batch: '$batch',\n      changeSet: '--changeset_',\n      batchPre: 'batch_',\n      contentId: 'Content-Id: ',\n      batchContent: 'Content-Type: multipart/mixed; boundary=',\n      changeSetContent: 'Content-Type: application/http\\nContent-Transfer-Encoding: binary ',\n      batchChangeSetContentType: 'Content-Type: application/json; charset=utf-8 ',\n      updateType: 'PATCH',\n      localTime: false,\n      apply: '$apply'\n    });\n    extend(_this.options, props || {});\n    return _this;\n  }\n  /**\n   * @hidden\n   */\n\n\n  ODataV4Adaptor.prototype.getModuleName = function () {\n    return 'ODataV4Adaptor';\n  };\n  /**\n   * Returns the query string which requests total count from the data source.\n   * @param  {boolean} e\n   * @returns string\n   */\n\n\n  ODataV4Adaptor.prototype.onCount = function (e) {\n    return e === true ? 'true' : '';\n  };\n  /**\n   * Generate request string based on the filter criteria from query.\n   * @param  {Predicate} pred\n   * @param  {boolean} requiresCast?\n   */\n\n\n  ODataV4Adaptor.prototype.onPredicate = function (predicate, query, requiresCast) {\n    var returnValue = '';\n    var val = predicate.value;\n    var isDate = val instanceof Date;\n    returnValue = _super.prototype.onPredicate.call(this, predicate, query, requiresCast);\n\n    if (isDate) {\n      returnValue = returnValue.replace(/datetime'(.*)'$/, '$1');\n    }\n\n    if (DataUtil.parse.isGuid(val)) {\n      returnValue = returnValue.replace('guid', '').replace(/'/g, '');\n    }\n\n    return returnValue;\n  };\n  /**\n   *  Generate query string based on the multiple search criteria from query.\n   * @param  {{fields:string[]} e\n   * @param  {string} operator\n   * @param  {string} key\n   * @param  {boolean}} ignoreCase\n   */\n\n\n  ODataV4Adaptor.prototype.onEachSearch = function (e) {\n    var search = this.pvt.searches || [];\n    search.push(e.key);\n    this.pvt.searches = search;\n  };\n  /**\n   *  Generate query string based on the search criteria from query.\n   * @param  {Object} e\n   */\n\n\n  ODataV4Adaptor.prototype.onSearch = function (e) {\n    return this.pvt.searches.join(' OR ');\n  };\n  /**\n   * Returns the expand query string.\n   * @param  {string} e\n   */\n\n\n  ODataV4Adaptor.prototype.onExpand = function (e) {\n    var _this = this;\n\n    var selected = {};\n    var expanded = {};\n    var expands = e.expands.slice();\n    var exArr = [];\n    var selects = e.selects.filter(function (item) {\n      return item.indexOf('.') > -1;\n    });\n    selects.forEach(function (select) {\n      var splits = select.split('.');\n\n      if (!(splits[0] in selected)) {\n        selected[splits[0]] = [];\n      }\n\n      selected[splits[0]].push(splits[1]);\n    }); //Auto expand from select query\n\n    Object.keys(selected).forEach(function (expand) {\n      if (expands.indexOf(expand) === -1) {\n        expands.push(expand);\n      }\n    });\n    expands.forEach(function (expand) {\n      expanded[expand] = expand in selected ? expand + \"(\" + _this.options.select + \"=\" + selected[expand].join(',') + \")\" : expand;\n    });\n    Object.keys(expanded).forEach(function (ex) {\n      return exArr.push(expanded[ex]);\n    });\n    return exArr.join(',');\n  };\n  /**\n   * Returns the groupby query string.\n   * @param  {string} e\n   */\n\n\n  ODataV4Adaptor.prototype.onDistinct = function (distinctFields) {\n    var fields = distinctFields.map(function (field) {\n      return ODataAdaptor.getField(field);\n    }).join(',');\n    return \"groupby((\" + fields + \"))\";\n  };\n  /**\n   * Returns the select query string.\n   * @param  {string[]} e\n   */\n\n\n  ODataV4Adaptor.prototype.onSelect = function (e) {\n    return _super.prototype.onSelect.call(this, e.filter(function (item) {\n      return item.indexOf('.') === -1;\n    }));\n  };\n  /**\n   * Method will trigger before send the request to server side.\n   * Used to set the custom header or modify the request options.\n   * @param  {DataManager} dm\n   * @param  {XMLHttpRequest} request\n   * @param  {Ajax} settings\n   * @returns void\n   */\n\n\n  ODataV4Adaptor.prototype.beforeSend = function (dm, request, settings) {\n    if (settings.type === 'POST' || settings.type === 'PUT' || settings.type === 'PATCH') {\n      request.setRequestHeader('Prefer', 'return=representation');\n    }\n\n    request.setRequestHeader('Accept', this.options.accept);\n  };\n  /**\n   * Returns the data from the query processing.\n   * @param  {DataResult} data\n   * @param  {DataOptions} ds?\n   * @param  {Query} query?\n   * @param  {XMLHttpRequest} xhr?\n   * @param  {Ajax} request?\n   * @param  {CrudOptions} changes?\n   * @returns aggregateResult\n   */\n\n\n  ODataV4Adaptor.prototype.processResponse = function (data, ds, query, xhr, request, changes) {\n    var metaName = '@odata.context';\n\n    if (request && request.type === 'GET' && !this.rootUrl && data[metaName]) {\n      var dataUrl = data[metaName].split('/$metadata#');\n      this.rootUrl = dataUrl[0];\n      this.resourceTableName = dataUrl[1];\n    }\n\n    var pvtData = 'pvtData';\n    var pvt = request && request[pvtData];\n\n    var emptyAndBatch = _super.prototype.processBatchResponse.call(this, data, query, xhr, request, changes);\n\n    if (emptyAndBatch) {\n      return emptyAndBatch;\n    }\n\n    var count = null;\n    var dataCount = '@odata.count';\n\n    if (query && query.isCountRequired) {\n      if (dataCount in data) {\n        count = data[dataCount];\n      }\n    }\n\n    data = !isNullOrUndefined(data.value) ? data.value : data;\n    var args = {};\n    args.count = count;\n    args.result = data;\n    this.getAggregateResult(pvt, data, args, null, query);\n    return DataUtil.isNull(count) ? args.result : {\n      result: args.result,\n      count: count,\n      aggregates: args.aggregates\n    };\n  };\n\n  return ODataV4Adaptor;\n}(ODataAdaptor);\n\nexport { ODataV4Adaptor };\n/**\n * The Web API is a programmatic interface to define the request and response messages system that is mostly exposed in JSON or XML.\n * The DataManager uses the WebApiAdaptor to consume Web API.\n * Since this adaptor is targeted to interact with Web API created using OData endpoint, it is extended from ODataAdaptor\n * @hidden\n */\n\nvar WebApiAdaptor =\n/** @class */\nfunction (_super) {\n  __extends(WebApiAdaptor, _super);\n\n  function WebApiAdaptor() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  WebApiAdaptor.prototype.getModuleName = function () {\n    return 'WebApiAdaptor';\n  };\n  /**\n   * Prepare and returns request body which is used to insert a new record in the table.\n   * @param  {DataManager} dm\n   * @param  {Object} data\n   * @param  {string} tableName?\n   */\n\n\n  WebApiAdaptor.prototype.insert = function (dm, data, tableName) {\n    return {\n      type: 'POST',\n      url: dm.dataSource.url,\n      data: JSON.stringify(data)\n    };\n  };\n  /**\n   * Prepare and return request body which is used to remove record from the table.\n   * @param  {DataManager} dm\n   * @param  {string} keyField\n   * @param  {number} value\n   * @param  {string} tableName?\n   */\n\n\n  WebApiAdaptor.prototype.remove = function (dm, keyField, value, tableName) {\n    return {\n      type: 'DELETE',\n      url: dm.dataSource.url + '/' + value,\n      data: JSON.stringify(value)\n    };\n  };\n  /**\n   * Prepare and return request body which is used to update record.\n   * @param  {DataManager} dm\n   * @param  {string} keyField\n   * @param  {Object} value\n   * @param  {string} tableName?\n   */\n\n\n  WebApiAdaptor.prototype.update = function (dm, keyField, value, tableName) {\n    return {\n      type: 'PUT',\n      url: dm.dataSource.url,\n      data: JSON.stringify(value)\n    };\n  };\n\n  WebApiAdaptor.prototype.batchRequest = function (dm, changes, e) {\n    var _this = this;\n\n    var initialGuid = e.guid = DataUtil.getGuid(this.options.batchPre);\n    var url = dm.dataSource.url.replace(/\\/*$/, '/' + this.options.batch);\n    e.url = this.resourceTableName ? this.resourceTableName : e.url;\n    var req = [];\n\n    var _loop_1 = function (i, x) {\n      changes.addedRecords.forEach(function (j, d) {\n        var stat = {\n          'method': 'POST ',\n          'url': function (data, i, key) {\n            return '';\n          },\n          'data': function (data, i) {\n            return JSON.stringify(data[i]) + '\\n\\n';\n          }\n        };\n        req.push('--' + initialGuid);\n        req.push('Content-Type: application/http; msgtype=request', '');\n        req.push('POST ' + '/api/' + (dm.dataSource.insertUrl || dm.dataSource.crudUrl || e.url) + stat.url(changes.addedRecords, i, e.key) + ' HTTP/1.1');\n        req.push('Content-Type: ' + 'application/json; charset=utf-8');\n        req.push('Host: ' + location.host);\n        req.push('', j ? JSON.stringify(j) : '');\n      });\n    }; //insertion\n\n\n    for (var i = 0, x = changes.addedRecords.length; i < x; i++) {\n      _loop_1(i, x);\n    }\n\n    var _loop_2 = function (i, x) {\n      changes.changedRecords.forEach(function (j, d) {\n        var stat = {\n          'method': _this.options.updateType + ' ',\n          'url': function (data, i, key) {\n            return '';\n          },\n          'data': function (data, i) {\n            return JSON.stringify(data[i]) + '\\n\\n';\n          }\n        };\n        req.push('--' + initialGuid);\n        req.push('Content-Type: application/http; msgtype=request', '');\n        req.push('PUT ' + '/api/' + (dm.dataSource.updateUrl || dm.dataSource.crudUrl || e.url) + stat.url(changes.changedRecords, i, e.key) + ' HTTP/1.1');\n        req.push('Content-Type: ' + 'application/json; charset=utf-8');\n        req.push('Host: ' + location.host);\n        req.push('', j ? JSON.stringify(j) : '');\n      });\n    }; //updation \n\n\n    for (var i = 0, x = changes.changedRecords.length; i < x; i++) {\n      _loop_2(i, x);\n    }\n\n    var _loop_3 = function (i, x) {\n      changes.deletedRecords.forEach(function (j, d) {\n        var state = {\n          'mtd': 'DELETE ',\n          'url': function (data, i, key) {\n            var url = DataUtil.getObject(key, data[i]);\n\n            if (typeof url === 'number' || DataUtil.parse.isGuid(url)) {\n              return '/' + url;\n            } else if (url instanceof Date) {\n              var datTime = data[i][key];\n              return '/' + datTime.toJSON();\n            } else {\n              return \"/'\" + url + \"'\";\n            }\n          },\n          'data': function (data, i) {\n            return '';\n          }\n        };\n        req.push('--' + initialGuid);\n        req.push('Content-Type: application/http; msgtype=request', '');\n        req.push('DELETE ' + '/api/' + (dm.dataSource.removeUrl || dm.dataSource.crudUrl || e.url) + state.url(changes.deletedRecords, i, e.key) + ' HTTP/1.1');\n        req.push('Content-Type: ' + 'application/json; charset=utf-8');\n        req.push('Host: ' + location.host);\n        req.push('', j ? JSON.stringify(j) : '');\n      });\n    }; //deletion\n\n\n    for (var i = 0, x = changes.deletedRecords.length; i < x; i++) {\n      _loop_3(i, x);\n    }\n\n    req.push('--' + initialGuid + '--', '');\n    return {\n      type: 'POST',\n      url: url,\n      contentType: 'multipart/mixed; boundary=' + initialGuid,\n      data: req.join('\\r\\n')\n    };\n  };\n  /**\n   * Method will trigger before send the request to server side.\n   * Used to set the custom header or modify the request options.\n   * @param  {DataManager} dm\n   * @param  {XMLHttpRequest} request\n   * @param  {Ajax} settings\n   * @returns void\n   */\n\n\n  WebApiAdaptor.prototype.beforeSend = function (dm, request, settings) {\n    request.setRequestHeader('Accept', 'application/json, text/javascript, */*; q=0.01');\n  };\n  /**\n   * Returns the data from the query processing.\n   * @param  {DataResult} data\n   * @param  {DataOptions} ds?\n   * @param  {Query} query?\n   * @param  {XMLHttpRequest} xhr?\n   * @param  {Ajax} request?\n   * @param  {CrudOptions} changes?\n   * @returns aggregateResult\n   */\n\n\n  WebApiAdaptor.prototype.processResponse = function (data, ds, query, xhr, request, changes) {\n    var pvtData = 'pvtData';\n    var pvt = request && request[pvtData];\n    var count = null;\n    var args = {};\n\n    if (request && request.type.toLowerCase() !== 'post') {\n      var versionCheck = xhr && request.getResponseHeader('DataServiceVersion');\n      var version = versionCheck && parseInt(versionCheck, 10) || 2;\n\n      if (query && query.isCountRequired) {\n        if (!DataUtil.isNull(data.Count)) {\n          count = data.Count;\n        }\n      }\n\n      if (version < 3 && data.Items) {\n        data = data.Items;\n      }\n\n      args.count = count;\n      args.result = data;\n      this.getAggregateResult(pvt, data, args, null, query);\n    }\n\n    args.result = args.result || data;\n    return DataUtil.isNull(count) ? args.result : {\n      result: args.result,\n      count: args.count,\n      aggregates: args.aggregates\n    };\n  };\n\n  return WebApiAdaptor;\n}(ODataAdaptor);\n\nexport { WebApiAdaptor };\n/**\n * WebMethodAdaptor can be used by DataManager to interact with web method.\n * @hidden\n */\n\nvar WebMethodAdaptor =\n/** @class */\nfunction (_super) {\n  __extends(WebMethodAdaptor, _super);\n\n  function WebMethodAdaptor() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  /**\n   * Prepare the request body based on the query.\n   * The query information can be accessed at the WebMethod using variable named `value`.\n   * @param  {DataManager} dm\n   * @param  {Query} query\n   * @param  {Object[]} hierarchyFilters?\n   * @returns application\n   */\n\n\n  WebMethodAdaptor.prototype.processQuery = function (dm, query, hierarchyFilters) {\n    var obj = new UrlAdaptor().processQuery(dm, query, hierarchyFilters);\n    var getData = 'data';\n    var data = DataUtil.parse.parseJson(obj[getData]);\n    var result = {};\n    var value = 'value';\n\n    if (data.param) {\n      for (var i = 0; i < data.param.length; i++) {\n        var param = data.param[i];\n        var key = Object.keys(param)[0];\n        result[key] = param[key];\n      }\n    }\n\n    result[value] = data;\n    var pvtData = 'pvtData';\n    var url = 'url';\n    return {\n      data: JSON.stringify(result),\n      url: obj[url],\n      pvtData: obj[pvtData],\n      type: 'POST',\n      contentType: 'application/json; charset=utf-8'\n    };\n  };\n\n  return WebMethodAdaptor;\n}(UrlAdaptor);\n\nexport { WebMethodAdaptor };\n/**\n * RemoteSaveAdaptor, extended from JsonAdaptor and it is used for binding local data and performs all DataManager queries in client-side.\n * It interacts with server-side only for CRUD operations.\n * @hidden\n */\n\nvar RemoteSaveAdaptor =\n/** @class */\nfunction (_super) {\n  __extends(RemoteSaveAdaptor, _super);\n  /**\n   * @hidden\n   */\n\n\n  function RemoteSaveAdaptor() {\n    var _this = _super.call(this) || this;\n\n    setValue('beforeSend', UrlAdaptor.prototype.beforeSend, _this);\n    return _this;\n  }\n\n  RemoteSaveAdaptor.prototype.insert = function (dm, data, tableName, query, position) {\n    this.pvt.position = position;\n    this.updateType = 'add';\n    return {\n      url: dm.dataSource.insertUrl || dm.dataSource.crudUrl || dm.dataSource.url,\n      data: JSON.stringify(extend({}, {\n        value: data,\n        table: tableName,\n        action: 'insert'\n      }, DataUtil.getAddParams(this, dm, query)))\n    };\n  };\n\n  RemoteSaveAdaptor.prototype.remove = function (dm, keyField, val, tableName, query) {\n    _super.prototype.remove.call(this, dm, keyField, val);\n\n    return {\n      type: 'POST',\n      url: dm.dataSource.removeUrl || dm.dataSource.crudUrl || dm.dataSource.url,\n      data: JSON.stringify(extend({}, {\n        key: val,\n        keyColumn: keyField,\n        table: tableName,\n        action: 'remove'\n      }, DataUtil.getAddParams(this, dm, query)))\n    };\n  };\n\n  RemoteSaveAdaptor.prototype.update = function (dm, keyField, val, tableName, query) {\n    this.updateType = 'update';\n    this.updateKey = keyField;\n    return {\n      type: 'POST',\n      url: dm.dataSource.updateUrl || dm.dataSource.crudUrl || dm.dataSource.url,\n      data: JSON.stringify(extend({}, {\n        value: val,\n        action: 'update',\n        keyColumn: keyField,\n        key: val[keyField],\n        table: tableName\n      }, DataUtil.getAddParams(this, dm, query)))\n    };\n  };\n\n  RemoteSaveAdaptor.prototype.processResponse = function (data, ds, query, xhr, request, changes, e) {\n    var i;\n\n    if (this.updateType === 'add') {\n      _super.prototype.insert.call(this, ds, data, null, null, this.pvt.position);\n    }\n\n    if (this.updateType === 'update') {\n      _super.prototype.update.call(this, ds, this.updateKey, data);\n    }\n\n    this.updateType = undefined;\n\n    if (data.added) {\n      for (i = 0; i < data.added.length; i++) {\n        _super.prototype.insert.call(this, ds, data.added[i]);\n      }\n    }\n\n    if (data.changed) {\n      for (i = 0; i < data.changed.length; i++) {\n        _super.prototype.update.call(this, ds, e.key, data.changed[i]);\n      }\n    }\n\n    if (data.deleted) {\n      for (i = 0; i < data.deleted.length; i++) {\n        _super.prototype.remove.call(this, ds, e.key, data.deleted[i]);\n      }\n    }\n\n    return data;\n  };\n  /**\n   * Prepare the request body based on the newly added, removed and updated records.\n   * Also perform the changes in the locally cached data to sync with the remote data.\n   * The result is used by the batch request.\n   * @param  {DataManager} dm\n   * @param  {CrudOptions} changes\n   * @param  {RemoteArgs} e\n   */\n\n\n  RemoteSaveAdaptor.prototype.batchRequest = function (dm, changes, e, query, original) {\n    return {\n      type: 'POST',\n      url: dm.dataSource.batchUrl || dm.dataSource.crudUrl || dm.dataSource.url,\n      contentType: 'application/json; charset=utf-8',\n      dataType: 'json',\n      data: JSON.stringify(extend({}, {\n        changed: changes.changedRecords,\n        added: changes.addedRecords,\n        deleted: changes.deletedRecords,\n        action: 'batch',\n        table: e.url,\n        key: e.key\n      }, DataUtil.getAddParams(this, dm, query)))\n    };\n  };\n\n  RemoteSaveAdaptor.prototype.addParams = function (options) {\n    var urlParams = new UrlAdaptor();\n    urlParams.addParams(options);\n  };\n\n  return RemoteSaveAdaptor;\n}(JsonAdaptor);\n\nexport { RemoteSaveAdaptor };\n/**\n * Cache Adaptor is used to cache the data of the visited pages. It prevents new requests for the previously visited pages.\n * You can configure cache page size and duration of caching by using cachingPageSize and timeTillExpiration properties of the DataManager\n * @hidden\n */\n\nvar CacheAdaptor =\n/** @class */\nfunction (_super) {\n  __extends(CacheAdaptor, _super);\n  /**\n   * Constructor for CacheAdaptor class.\n   * @param  {CacheAdaptor} adaptor?\n   * @param  {number} timeStamp?\n   * @param  {number} pageSize?\n   * @hidden\n   */\n\n\n  function CacheAdaptor(adaptor, timeStamp, pageSize) {\n    var _this = _super.call(this) || this;\n\n    _this.isCrudAction = false;\n    _this.isInsertAction = false;\n\n    if (!isNullOrUndefined(adaptor)) {\n      _this.cacheAdaptor = adaptor;\n    }\n\n    _this.pageSize = pageSize;\n    _this.guidId = DataUtil.getGuid('cacheAdaptor');\n    var obj = {\n      keys: [],\n      results: []\n    };\n    window.localStorage.setItem(_this.guidId, JSON.stringify(obj));\n    var guid = _this.guidId;\n\n    if (!isNullOrUndefined(timeStamp)) {\n      setInterval(function () {\n        var data;\n        data = DataUtil.parse.parseJson(window.localStorage.getItem(guid));\n        var forDel = [];\n\n        for (var i = 0; i < data.results.length; i++) {\n          var currentTime = +new Date();\n          var requestTime = +new Date(data.results[i].timeStamp);\n          data.results[i].timeStamp = currentTime - requestTime;\n\n          if (currentTime - requestTime > timeStamp) {\n            forDel.push(i);\n          }\n        }\n\n        for (var i = 0; i < forDel.length; i++) {\n          data.results.splice(forDel[i], 1);\n          data.keys.splice(forDel[i], 1);\n        }\n\n        window.localStorage.removeItem(guid);\n        window.localStorage.setItem(guid, JSON.stringify(data));\n      }, timeStamp);\n    }\n\n    return _this;\n  }\n  /**\n   * It will generate the key based on the URL when we send a request to server.\n   * @param  {string} url\n   * @param  {Query} query?\n   * @hidden\n   */\n\n\n  CacheAdaptor.prototype.generateKey = function (url, query) {\n    var queries = this.getQueryRequest(query);\n    var singles = Query.filterQueryLists(query.queries, ['onSelect', 'onPage', 'onSkip', 'onTake', 'onRange']);\n    var key = url;\n    var page = 'onPage';\n\n    if (page in singles) {\n      key += singles[page].pageIndex;\n    }\n\n    queries.sorts.forEach(function (obj) {\n      key += obj.e.direction + obj.e.fieldName;\n    });\n    queries.groups.forEach(function (obj) {\n      key += obj.e.fieldName;\n    });\n    queries.searches.forEach(function (obj) {\n      key += obj.e.searchKey;\n    });\n\n    for (var filter = 0; filter < queries.filters.length; filter++) {\n      var currentFilter = queries.filters[filter];\n\n      if (currentFilter.e.isComplex) {\n        var newQuery = query.clone();\n        newQuery.queries = [];\n\n        for (var i = 0; i < currentFilter.e.predicates.length; i++) {\n          newQuery.queries.push({\n            fn: 'onWhere',\n            e: currentFilter.e.predicates[i],\n            filter: query.queries.filter\n          });\n        }\n\n        key += currentFilter.e.condition + this.generateKey(url, newQuery);\n      } else {\n        key += currentFilter.e.field + currentFilter.e.operator + currentFilter.e.value;\n      }\n    }\n\n    return key;\n  };\n  /**\n   * Process the query to generate request body.\n   * If the data is already cached, it will return the cached data.\n   * @param  {DataManager} dm\n   * @param  {Query} query?\n   * @param  {Object[]} hierarchyFilters?\n   */\n\n\n  CacheAdaptor.prototype.processQuery = function (dm, query, hierarchyFilters) {\n    var key = this.generateKey(dm.dataSource.url, query);\n    var cachedItems;\n    cachedItems = DataUtil.parse.parseJson(window.localStorage.getItem(this.guidId));\n    var data = cachedItems ? cachedItems.results[cachedItems.keys.indexOf(key)] : null;\n\n    if (data != null && !this.isCrudAction && !this.isInsertAction) {\n      return data;\n    }\n\n    this.isCrudAction = null;\n    this.isInsertAction = null;\n    return this.cacheAdaptor.processQuery.apply(this.cacheAdaptor, [].slice.call(arguments, 0));\n  };\n  /**\n   * Returns the data from the query processing.\n   * It will also cache the data for later usage.\n   * @param  {DataResult} data\n   * @param  {DataManager} ds?\n   * @param  {Query} query?\n   * @param  {XMLHttpRequest} xhr?\n   * @param  {Ajax} request?\n   * @param  {CrudOptions} changes?\n   */\n\n\n  CacheAdaptor.prototype.processResponse = function (data, ds, query, xhr, request, changes) {\n    if (this.isInsertAction || request && this.cacheAdaptor.options.batch && DataUtil.endsWith(request.url, this.cacheAdaptor.options.batch) && request.type.toLowerCase() === 'post') {\n      return this.cacheAdaptor.processResponse(data, ds, query, xhr, request, changes);\n    }\n\n    data = this.cacheAdaptor.processResponse.apply(this.cacheAdaptor, [].slice.call(arguments, 0));\n    var key = query ? this.generateKey(ds.dataSource.url, query) : ds.dataSource.url;\n    var obj = {};\n    obj = DataUtil.parse.parseJson(window.localStorage.getItem(this.guidId));\n    var index = obj.keys.indexOf(key);\n\n    if (index !== -1) {\n      obj.results.splice(index, 1);\n      obj.keys.splice(index, 1);\n    }\n\n    obj.results[obj.keys.push(key) - 1] = {\n      keys: key,\n      result: data.result,\n      timeStamp: new Date(),\n      count: data.count\n    };\n\n    while (obj.results.length > this.pageSize) {\n      obj.results.splice(0, 1);\n      obj.keys.splice(0, 1);\n    }\n\n    window.localStorage.setItem(this.guidId, JSON.stringify(obj));\n    return data;\n  };\n  /**\n   * Method will trigger before send the request to server side. Used to set the custom header or modify the request options.\n   * @param  {DataManager} dm\n   * @param  {XMLHttpRequest} request\n   * @param  {Ajax} settings?\n   */\n\n\n  CacheAdaptor.prototype.beforeSend = function (dm, request, settings) {\n    if (!isNullOrUndefined(this.cacheAdaptor.options.batch) && DataUtil.endsWith(settings.url, this.cacheAdaptor.options.batch) && settings.type.toLowerCase() === 'post') {\n      request.setRequestHeader('Accept', this.cacheAdaptor.options.multipartAccept);\n    }\n\n    if (!dm.dataSource.crossDomain) {\n      request.setRequestHeader('Accept', this.cacheAdaptor.options.accept);\n    }\n  };\n  /**\n   * Updates existing record and saves the changes to the table.\n   * @param  {DataManager} dm\n   * @param  {string} keyField\n   * @param  {Object} value\n   * @param  {string} tableName\n   */\n\n\n  CacheAdaptor.prototype.update = function (dm, keyField, value, tableName) {\n    this.isCrudAction = true;\n    return this.cacheAdaptor.update(dm, keyField, value, tableName);\n  };\n  /**\n   * Prepare and returns request body which is used to insert a new record in the table.\n   * @param  {DataManager} dm\n   * @param  {Object} data\n   * @param  {string} tableName?\n   */\n\n\n  CacheAdaptor.prototype.insert = function (dm, data, tableName) {\n    this.isInsertAction = true;\n    return this.cacheAdaptor.insert(dm, data, tableName);\n  };\n  /**\n   * Prepare and return request body which is used to remove record from the table.\n   * @param  {DataManager} dm\n   * @param  {string} keyField\n   * @param  {Object} value\n   * @param  {string} tableName?\n   */\n\n\n  CacheAdaptor.prototype.remove = function (dm, keyField, value, tableName) {\n    this.isCrudAction = true;\n    return this.cacheAdaptor.remove(dm, keyField, value, tableName);\n  };\n  /**\n   * Prepare the request body based on the newly added, removed and updated records.\n   * The result is used by the batch request.\n   * @param  {DataManager} dm\n   * @param  {CrudOptions} changes\n   * @param  {RemoteArgs} e\n   */\n\n\n  CacheAdaptor.prototype.batchRequest = function (dm, changes, e) {\n    return this.cacheAdaptor.batchRequest(dm, changes, e);\n  };\n\n  return CacheAdaptor;\n}(UrlAdaptor);\n\nexport { CacheAdaptor };","map":{"version":3,"sources":["D:/developing/projects/whiteboard/node_modules/@syncfusion/ej2-data/src/adaptors.js"],"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","merge","extend","isNullOrUndefined","setValue","getValue","DataUtil","Query","Predicate","Adaptor","ds","options","from","requestType","sortBy","select","skip","group","take","search","count","where","aggregates","expand","type","dataSource","pvt","processResponse","data","query","xhr","JsonAdaptor","_super","apply","arguments","processQuery","dataManager","result","json","slice","length","countFlg","ret","key","agg","i","queries","fn","call","e","field","undefined","isCountRequired","batchRequest","dm","changes","deletedRecordsLen","deletedRecords","addedRecords","insert","changedRecords","update","remove","onWhere","filter","obj","validate","onAggregates","onSearch","fieldNames","getFieldList","j","comparer","getObject","searchKey","ignoreCase","ignoreAccent","onSortBy","fnCompare","fieldName","sort","endsWith","fnSort","replace","onGroup","aggQuery","filterQueries","tmp","push","onPage","size","pageSize","start","pageIndex","end","onRange","onTake","nos","onSkip","onSelect","tableName","position","splice","keyField","value","Date","UrlAdaptor","hierarchyFilters","getQueryRequest","singles","filterQueryLists","params","url","temp","request","sorts","groups","filters","searches","callAdaptorFunction","name","direction","getFiltersFrom","toJson","keys_3","keys","_i","keys_1","prop","isNull","fields","operator","req","getRequestQuery","reqParams","_a","keys_2","JSON","stringify","parse","jsonDateReplacer","pvtData","contentType","convertToQueryString","indexOf","request1","param","fromTable","distincts","selects","expands","getResponseHeader","handleTimeZone","timeZoneHandling","parseJson","requests","groupDs","action","args","getAggregateResult","original","batchUrl","crudUrl","removeUrl","dataType","changed","added","deleted","table","getAddParams","beforeSend","insertUrl","keyColumn","updateUrl","fKey","pKey","predicats","or","pData","aggregateData","res","aggregate","level","groupQuery","addParams","Error","ODataAdaptor","props","_this","accept","multipartAccept","batch","changeSet","batchPre","contentId","batchContent","changeSetContent","batchChangeSetContentType","updateType","getModuleName","onPredicate","predicate","requiresCast","returnValue","guid","val","getField","replacer","encodeURIComponent","isGuid","toLowerCase","odBiOperator","odv4UniOperator","odUniOperator","onComplexPredicate","predicates","onEachWhere","join","condition","isComplex","onEachSearch","throwError","onEachSort","reverse","onCount","settings","setRequestHeader","overrideMimeType","metaCheck","rootUrl","dataUrls","split","resourceTableName","dataCopy","results","metaData","emptyAndBatch","processBatchResponse","versionCheck","version","parseInt","oDataCount","format","requiresFormat","keys_4","localTimeReplacer","convertObj","dateParse","toLocalTime","localTime","compareAndRemove","initialGuid","getGuid","cid","cSet","generateInsertRequest","generateUpdateRequest","generateDeleteRequest","arr","stat","dateTime","toJSON","generateBodyContent","org","forEach","change","o","date","method","cIdx","jsonObj","substring","exVal","exec","changeGuid","test","isPlainObject","final","valueOf","ODataV4Adaptor","isDate","onExpand","selected","expanded","exArr","item","splits","ex","onDistinct","distinctFields","map","metaName","dataUrl","dataCount","WebApiAdaptor","_loop_1","x","location","host","_loop_2","_loop_3","state","datTime","Count","Items","WebMethodAdaptor","getData","RemoteSaveAdaptor","updateKey","urlParams","CacheAdaptor","adaptor","timeStamp","isCrudAction","isInsertAction","cacheAdaptor","guidId","window","localStorage","setItem","setInterval","getItem","forDel","currentTime","requestTime","removeItem","generateKey","page","currentFilter","newQuery","clone","cachedItems","index","crossDomain"],"mappings":"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","sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { merge, extend, isNullOrUndefined, setValue, getValue } from '@syncfusion/ej2-base';\nimport { DataUtil } from './util';\nimport { Query, Predicate } from './query';\n/**\n * Adaptors are specific data source type aware interfaces that are used by DataManager to communicate with DataSource.\n * This is the base adaptor class that other adaptors can extend.\n * @hidden\n */\nvar Adaptor = /** @class */ (function () {\n    /**\n     * Constructor for Adaptor class\n     * @param  {DataOptions} ds?\n     * @hidden\n     * @returns aggregates\n     */\n    function Adaptor(ds) {\n        // common options for all the adaptors \n        this.options = {\n            from: 'table',\n            requestType: 'json',\n            sortBy: 'sorted',\n            select: 'select',\n            skip: 'skip',\n            group: 'group',\n            take: 'take',\n            search: 'search',\n            count: 'requiresCounts',\n            where: 'where',\n            aggregates: 'aggregates',\n            expand: 'expand'\n        };\n        /**\n         * Specifies the type of adaptor.\n         * @default Adaptor\n         */\n        this.type = Adaptor;\n        this.dataSource = ds;\n        this.pvt = {};\n    }\n    /**\n     * Returns the data from the query processing.\n     * @param  {Object} data\n     * @param  {DataOptions} ds?\n     * @param  {Query} query?\n     * @param  {XMLHttpRequest} xhr?\n     * @returns Object\n     */\n    Adaptor.prototype.processResponse = function (data, ds, query, xhr) {\n        return data;\n    };\n    return Adaptor;\n}());\nexport { Adaptor };\n/**\n * JsonAdaptor is used to process JSON data. It contains methods to process the given JSON data based on the queries.\n * @hidden\n */\nvar JsonAdaptor = /** @class */ (function (_super) {\n    __extends(JsonAdaptor, _super);\n    function JsonAdaptor() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Process the JSON data based on the provided queries.\n     * @param  {DataManager} dataManager\n     * @param  {Query} query\n     * @returns Object\n     */\n    JsonAdaptor.prototype.processQuery = function (dataManager, query) {\n        var result = dataManager.dataSource.json.slice(0);\n        var count = result.length;\n        var countFlg = true;\n        var ret;\n        var key;\n        var agg = {};\n        for (var i = 0; i < query.queries.length; i++) {\n            key = query.queries[i];\n            ret = this[key.fn].call(this, result, key.e, query);\n            if (key.fn === 'onAggregates') {\n                agg[key.e.field + ' - ' + key.e.type] = ret;\n            }\n            else {\n                result = ret !== undefined ? ret : result;\n            }\n            if (key.fn === 'onPage' || key.fn === 'onSkip' || key.fn === 'onTake' || key.fn === 'onRange') {\n                countFlg = false;\n            }\n            if (countFlg) {\n                count = result.length;\n            }\n        }\n        if (query.isCountRequired) {\n            result = {\n                result: result,\n                count: count,\n                aggregates: agg\n            };\n        }\n        return result;\n    };\n    /**\n     * Performs batch update in the JSON array which add, remove and update records.\n     * @param  {DataManager} dm\n     * @param  {CrudOptions} changes\n     * @param  {RemoteArgs} e\n     */\n    JsonAdaptor.prototype.batchRequest = function (dm, changes, e) {\n        var i;\n        var deletedRecordsLen = changes.deletedRecords.length;\n        for (i = 0; i < changes.addedRecords.length; i++) {\n            this.insert(dm, changes.addedRecords[i]);\n        }\n        for (i = 0; i < changes.changedRecords.length; i++) {\n            this.update(dm, e.key, changes.changedRecords[i]);\n        }\n        for (i = 0; i < deletedRecordsLen; i++) {\n            this.remove(dm, e.key, changes.deletedRecords[i]);\n        }\n        return changes;\n    };\n    /**\n     * Performs filter operation with the given data and where query.\n     * @param  {Object[]} ds\n     * @param  {{validate:Function}} e\n     */\n    JsonAdaptor.prototype.onWhere = function (ds, e) {\n        if (!ds || !ds.length) {\n            return ds;\n        }\n        return ds.filter(function (obj) {\n            if (e) {\n                return e.validate(obj);\n            }\n        });\n    };\n    /**\n     * Returns aggregate function based on the aggregate type.\n     * @param  {Object[]} ds\n     * @param  {{field:string} e\n     * @param  {string}} type\n     */\n    JsonAdaptor.prototype.onAggregates = function (ds, e) {\n        var fn = DataUtil.aggregates[e.type];\n        if (!ds || !fn || ds.length === 0) {\n            return null;\n        }\n        return fn(ds, e.field);\n    };\n    /**\n     * Performs search operation based on the given query.\n     * @param  {Object[]} ds\n     * @param  {QueryOptions} e\n     */\n    JsonAdaptor.prototype.onSearch = function (ds, e) {\n        if (!ds || !ds.length) {\n            return ds;\n        }\n        if (e.fieldNames.length === 0) {\n            DataUtil.getFieldList(ds[0], e.fieldNames);\n        }\n        return ds.filter(function (obj) {\n            for (var j = 0; j < e.fieldNames.length; j++) {\n                if (e.comparer.call(obj, DataUtil.getObject(e.fieldNames[j], obj), e.searchKey, e.ignoreCase, e.ignoreAccent)) {\n                    return true;\n                }\n            }\n            return false;\n        });\n    };\n    /**\n     * Sort the data with given direction and field.\n     * @param  {Object[]} ds\n     * @param  {{comparer:(a:Object} e\n     * @param  {Object} b\n     */\n    JsonAdaptor.prototype.onSortBy = function (ds, e, query) {\n        if (!ds || !ds.length) {\n            return ds;\n        }\n        var fnCompare;\n        var field = DataUtil.getValue(e.fieldName, query);\n        if (!field) {\n            return ds.sort(e.comparer);\n        }\n        if (field instanceof Array) {\n            field = field.slice(0);\n            for (var i = field.length - 1; i >= 0; i--) {\n                if (!field[i]) {\n                    continue;\n                }\n                fnCompare = e.comparer;\n                if (DataUtil.endsWith(field[i], ' desc')) {\n                    fnCompare = DataUtil.fnSort('descending');\n                    field[i] = field[i].replace(' desc', '');\n                }\n                ds = DataUtil.sort(ds, field[i], fnCompare);\n            }\n            return ds;\n        }\n        return DataUtil.sort(ds, field, e.comparer);\n    };\n    /**\n     * Group the data based on the given query.\n     * @param  {Object[]} ds\n     * @param  {QueryOptions} e\n     * @param  {Query} query\n     */\n    JsonAdaptor.prototype.onGroup = function (ds, e, query) {\n        if (!ds || !ds.length) {\n            return ds;\n        }\n        var aggQuery = Query.filterQueries(query.queries, 'onAggregates');\n        var agg = [];\n        if (aggQuery.length) {\n            var tmp = void 0;\n            for (var i = 0; i < aggQuery.length; i++) {\n                tmp = aggQuery[i].e;\n                agg.push({ type: tmp.type, field: DataUtil.getValue(tmp.field, query) });\n            }\n        }\n        return DataUtil.group(ds, DataUtil.getValue(e.fieldName, query), agg, null, null, e.comparer);\n    };\n    /**\n     * Retrieves records based on the given page index and size.\n     * @param  {Object[]} ds\n     * @param  {{pageSize:number} e\n     * @param  {number}} pageIndex\n     * @param  {Query} query\n     */\n    JsonAdaptor.prototype.onPage = function (ds, e, query) {\n        var size = DataUtil.getValue(e.pageSize, query);\n        var start = (DataUtil.getValue(e.pageIndex, query) - 1) * size;\n        var end = start + size;\n        if (!ds || !ds.length) {\n            return ds;\n        }\n        return ds.slice(start, end);\n    };\n    /**\n     * Retrieves records based on the given start and end index from query.\n     * @param  {Object[]} ds\n     * @param  {{start:number} e\n     * @param  {number}} end\n     */\n    JsonAdaptor.prototype.onRange = function (ds, e) {\n        if (!ds || !ds.length) {\n            return ds;\n        }\n        return ds.slice(DataUtil.getValue(e.start), DataUtil.getValue(e.end));\n    };\n    /**\n     * Picks the given count of records from the top of the datasource.\n     * @param  {Object[]} ds\n     * @param  {{nos:number}} e\n     */\n    JsonAdaptor.prototype.onTake = function (ds, e) {\n        if (!ds || !ds.length) {\n            return ds;\n        }\n        return ds.slice(0, DataUtil.getValue(e.nos));\n    };\n    /**\n     * Skips the given count of records from the data source.\n     * @param  {Object[]} ds\n     * @param  {{nos:number}} e\n     */\n    JsonAdaptor.prototype.onSkip = function (ds, e) {\n        if (!ds || !ds.length) {\n            return ds;\n        }\n        return ds.slice(DataUtil.getValue(e.nos));\n    };\n    /**\n     * Selects specified columns from the data source.\n     * @param  {Object[]} ds\n     * @param  {{fieldNames:string}} e\n     */\n    JsonAdaptor.prototype.onSelect = function (ds, e) {\n        if (!ds || !ds.length) {\n            return ds;\n        }\n        return DataUtil.select(ds, DataUtil.getValue(e.fieldNames));\n    };\n    /**\n     * Inserts new record in the table.\n     * @param  {DataManager} dm\n     * @param  {Object} data\n     * @param  {number} position\n     */\n    JsonAdaptor.prototype.insert = function (dm, data, tableName, query, position) {\n        if (isNullOrUndefined(position)) {\n            return dm.dataSource.json.push(data);\n        }\n        else {\n            return dm.dataSource.json.splice(position, 0, data);\n        }\n    };\n    /**\n     * Remove the data from the dataSource based on the key field value.\n     * @param  {DataManager} dm\n     * @param  {string} keyField\n     * @param  {Object} value\n     * @param  {string} tableName?\n     * @returns null\n     */\n    JsonAdaptor.prototype.remove = function (dm, keyField, value, tableName) {\n        var ds = dm.dataSource.json;\n        var i;\n        if (typeof value === 'object' && !(value instanceof Date)) {\n            value = DataUtil.getObject(keyField, value);\n        }\n        for (i = 0; i < ds.length; i++) {\n            if (DataUtil.getObject(keyField, ds[i]) === value) {\n                break;\n            }\n        }\n        return i !== ds.length ? ds.splice(i, 1) : null;\n    };\n    /**\n     * Updates existing record and saves the changes to the table.\n     * @param  {DataManager} dm\n     * @param  {string} keyField\n     * @param  {Object} value\n     * @param  {string} tableName?\n     * @returns null\n     */\n    JsonAdaptor.prototype.update = function (dm, keyField, value, tableName) {\n        var ds = dm.dataSource.json;\n        var i;\n        var key;\n        if (!isNullOrUndefined(keyField)) {\n            key = getValue(keyField, value);\n        }\n        for (i = 0; i < ds.length; i++) {\n            if (!isNullOrUndefined(keyField) && (getValue(keyField, ds[i])) === key) {\n                break;\n            }\n        }\n        return i < ds.length ? merge(ds[i], value) : null;\n    };\n    return JsonAdaptor;\n}(Adaptor));\nexport { JsonAdaptor };\n/**\n * URL Adaptor of DataManager can be used when you are required to use remote service to retrieve data.\n * It interacts with server-side for all DataManager Queries and CRUD operations.\n * @hidden\n */\nvar UrlAdaptor = /** @class */ (function (_super) {\n    __extends(UrlAdaptor, _super);\n    function UrlAdaptor() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Process the query to generate request body.\n     * @param  {DataManager} dm\n     * @param  {Query} query\n     * @param  {Object[]} hierarchyFilters?\n     * @returns p\n     */\n    UrlAdaptor.prototype.processQuery = function (dm, query, hierarchyFilters) {\n        var queries = this.getQueryRequest(query);\n        var singles = Query.filterQueryLists(query.queries, ['onSelect', 'onPage', 'onSkip', 'onTake', 'onRange']);\n        var params = query.params;\n        var url = dm.dataSource.url;\n        var temp;\n        var skip;\n        var take = null;\n        var options = this.options;\n        var request = { sorts: [], groups: [], filters: [], searches: [], aggregates: [] };\n        // calc Paging & Range\n        if ('onPage' in singles) {\n            temp = singles.onPage;\n            skip = DataUtil.getValue(temp.pageIndex, query);\n            take = DataUtil.getValue(temp.pageSize, query);\n            skip = (skip - 1) * take;\n        }\n        else if ('onRange' in singles) {\n            temp = singles.onRange;\n            skip = temp.start;\n            take = temp.end - temp.start;\n        }\n        // Sorting\n        for (var i = 0; i < queries.sorts.length; i++) {\n            temp = DataUtil.getValue(queries.sorts[i].e.fieldName, query);\n            request.sorts.push(DataUtil.callAdaptorFunction(this, 'onEachSort', { name: temp, direction: queries.sorts[i].e.direction }, query));\n        }\n        // hierarchy\n        if (hierarchyFilters) {\n            temp = this.getFiltersFrom(hierarchyFilters, query);\n            if (temp) {\n                request.filters.push(DataUtil.callAdaptorFunction(this, 'onEachWhere', temp.toJson(), query));\n            }\n        }\n        // Filters\n        for (var i = 0; i < queries.filters.length; i++) {\n            request.filters.push(DataUtil.callAdaptorFunction(this, 'onEachWhere', queries.filters[i].e.toJson(), query));\n            var keys_3 = typeof request.filters[i] === 'object' ? Object.keys(request.filters[i]) : [];\n            for (var _i = 0, keys_1 = keys_3; _i < keys_1.length; _i++) {\n                var prop = keys_1[_i];\n                if (DataUtil.isNull((request)[prop])) {\n                    delete request[prop];\n                }\n            }\n        }\n        // Searches\n        for (var i = 0; i < queries.searches.length; i++) {\n            temp = queries.searches[i].e;\n            request.searches.push(DataUtil.callAdaptorFunction(this, 'onEachSearch', {\n                fields: temp.fieldNames,\n                operator: temp.operator,\n                key: temp.searchKey,\n                ignoreCase: temp.ignoreCase\n            }, query));\n        }\n        // Grouping\n        for (var i = 0; i < queries.groups.length; i++) {\n            request.groups.push(DataUtil.getValue(queries.groups[i].e.fieldName, query));\n        }\n        // aggregates\n        for (var i = 0; i < queries.aggregates.length; i++) {\n            temp = queries.aggregates[i].e;\n            request.aggregates.push({ type: temp.type, field: DataUtil.getValue(temp.field, query) });\n        }\n        var req = {};\n        this.getRequestQuery(options, query, singles, request, req);\n        // Params\n        DataUtil.callAdaptorFunction(this, 'addParams', { dm: dm, query: query, params: params, reqParams: req });\n        // cleanup\n        var keys = Object.keys(req);\n        for (var _a = 0, keys_2 = keys; _a < keys_2.length; _a++) {\n            var prop = keys_2[_a];\n            if (DataUtil.isNull(req[prop]) || req[prop] === '' || req[prop].length === 0) {\n                delete req[prop];\n            }\n        }\n        if (!(options.skip in req && options.take in req) && take !== null) {\n            req[options.skip] = DataUtil.callAdaptorFunction(this, 'onSkip', skip, query);\n            req[options.take] = DataUtil.callAdaptorFunction(this, 'onTake', take, query);\n        }\n        var p = this.pvt;\n        this.pvt = {};\n        if (this.options.requestType === 'json') {\n            return {\n                data: JSON.stringify(req, DataUtil.parse.jsonDateReplacer),\n                url: url,\n                pvtData: p,\n                type: 'POST',\n                contentType: 'application/json; charset=utf-8'\n            };\n        }\n        temp = this.convertToQueryString(req, query, dm);\n        temp = (dm.dataSource.url.indexOf('?') !== -1 ? '&' : '/') + temp;\n        return {\n            type: 'GET', url: temp.length ? url.replace(/\\/*$/, temp) : url, pvtData: p\n        };\n    };\n    UrlAdaptor.prototype.getRequestQuery = function (options, query, singles, request, request1) {\n        var param = 'param';\n        var req = request1;\n        req[options.from] = query.fromTable;\n        if (options.apply && query.distincts.length) {\n            req[options.apply] = 'onDistinct' in this ? DataUtil.callAdaptorFunction(this, 'onDistinct', query.distincts) : '';\n        }\n        if (!query.distincts.length && options.expand) {\n            req[options.expand] = 'onExpand' in this && 'onSelect' in singles ?\n                DataUtil.callAdaptorFunction(this, 'onExpand', { selects: DataUtil.getValue(singles.onSelect.fieldNames, query), expands: query.expands }, query) : query.expands;\n        }\n        req[options.select] = 'onSelect' in singles && !query.distincts.length ?\n            DataUtil.callAdaptorFunction(this, 'onSelect', DataUtil.getValue(singles.onSelect.fieldNames, query), query) : '';\n        req[options.count] = query.isCountRequired ? DataUtil.callAdaptorFunction(this, 'onCount', query.isCountRequired, query) : '';\n        req[options.search] = request.searches.length ? DataUtil.callAdaptorFunction(this, 'onSearch', request.searches, query) : '';\n        req[options.skip] = 'onSkip' in singles ?\n            DataUtil.callAdaptorFunction(this, 'onSkip', DataUtil.getValue(singles.onSkip.nos, query), query) : '';\n        req[options.take] = 'onTake' in singles ?\n            DataUtil.callAdaptorFunction(this, 'onTake', DataUtil.getValue(singles.onTake.nos, query), query) : '';\n        req[options.where] = request.filters.length || request.searches.length ?\n            DataUtil.callAdaptorFunction(this, 'onWhere', request.filters, query) : '';\n        req[options.sortBy] = request.sorts.length ? DataUtil.callAdaptorFunction(this, 'onSortBy', request.sorts, query) : '';\n        req[options.group] = request.groups.length ? DataUtil.callAdaptorFunction(this, 'onGroup', request.groups, query) : '';\n        req[options.aggregates] = request.aggregates.length ?\n            DataUtil.callAdaptorFunction(this, 'onAggregates', request.aggregates, query) : '';\n        req[param] = [];\n    };\n    /**\n     * Convert the object from processQuery to string which can be added query string.\n     * @param  {Object} req\n     * @param  {Query} query\n     * @param  {DataManager} dm\n     */\n    UrlAdaptor.prototype.convertToQueryString = function (request, query, dm) {\n        return '';\n        // this needs to be overridden\n    };\n    /**\n     * Return the data from the data manager processing.\n     * @param  {DataResult} data\n     * @param  {DataOptions} ds?\n     * @param  {Query} query?\n     * @param  {XMLHttpRequest} xhr?\n     * @param  {Object} request?\n     * @param  {CrudOptions} changes?\n     */\n    UrlAdaptor.prototype.processResponse = function (data, ds, query, xhr, request, changes) {\n        if (xhr && xhr.getResponseHeader('Content-Type') &&\n            xhr.getResponseHeader('Content-Type').indexOf('application/json') !== -1) {\n            var handleTimeZone = DataUtil.timeZoneHandling;\n            if (ds && !ds.timeZoneHandling) {\n                DataUtil.timeZoneHandling = false;\n            }\n            data = DataUtil.parse.parseJson(data);\n            DataUtil.timeZoneHandling = handleTimeZone;\n        }\n        var requests = request;\n        var pvt = requests.pvtData || {};\n        var groupDs = data ? data.groupDs : [];\n        if (xhr && xhr.getResponseHeader('Content-Type') &&\n            xhr.getResponseHeader('Content-Type').indexOf('xml') !== -1) {\n            return (query.isCountRequired ? { result: [], count: 0 } : []);\n        }\n        var d = JSON.parse(requests.data);\n        if (d && d.action === 'batch' && data && data.addedRecords) {\n            changes.addedRecords = data.addedRecords;\n            return changes;\n        }\n        if (data && data.d) {\n            data = data.d;\n        }\n        var args = {};\n        if (data && 'count' in data) {\n            args.count = data.count;\n        }\n        args.result = data && data.result ? data.result : data;\n        this.getAggregateResult(pvt, data, args, groupDs, query);\n        return DataUtil.isNull(args.count) ? args.result : { result: args.result, count: args.count, aggregates: args.aggregates };\n    };\n    /**\n     * Add the group query to the adaptor`s option.\n     * @param  {Object[]} e\n     * @returns void\n     */\n    UrlAdaptor.prototype.onGroup = function (e) {\n        this.pvt.groups = e;\n        return e;\n    };\n    /**\n     * Add the aggregate query to the adaptor`s option.\n     * @param  {Aggregates[]} e\n     * @returns void\n     */\n    UrlAdaptor.prototype.onAggregates = function (e) {\n        this.pvt.aggregates = e;\n    };\n    /**\n     * Prepare the request body based on the newly added, removed and updated records.\n     * The result is used by the batch request.\n     * @param  {DataManager} dm\n     * @param  {CrudOptions} changes\n     * @param  {Object} e\n     */\n    UrlAdaptor.prototype.batchRequest = function (dm, changes, e, query, original) {\n        var url;\n        var key;\n        return {\n            type: 'POST',\n            url: dm.dataSource.batchUrl || dm.dataSource.crudUrl || dm.dataSource.removeUrl || dm.dataSource.url,\n            contentType: 'application/json; charset=utf-8',\n            dataType: 'json',\n            data: JSON.stringify(extend({}, {\n                changed: changes.changedRecords,\n                added: changes.addedRecords,\n                deleted: changes.deletedRecords,\n                action: 'batch',\n                table: e[url],\n                key: e[key]\n            }, DataUtil.getAddParams(this, dm, query)))\n        };\n    };\n    /**\n     * Method will trigger before send the request to server side.\n     * Used to set the custom header or modify the request options.\n     * @param  {DataManager} dm\n     * @param  {XMLHttpRequest} request\n     * @returns void\n     */\n    UrlAdaptor.prototype.beforeSend = function (dm, request) {\n        // need to extend this method\n    };\n    /**\n     * Prepare and returns request body which is used to insert a new record in the table.\n     * @param  {DataManager} dm\n     * @param  {Object} data\n     * @param  {string} tableName\n     */\n    UrlAdaptor.prototype.insert = function (dm, data, tableName, query) {\n        return {\n            url: dm.dataSource.insertUrl || dm.dataSource.crudUrl || dm.dataSource.url,\n            data: JSON.stringify(extend({}, {\n                value: data,\n                table: tableName,\n                action: 'insert'\n            }, DataUtil.getAddParams(this, dm, query)))\n        };\n    };\n    /**\n     * Prepare and return request body which is used to remove record from the table.\n     * @param  {DataManager} dm\n     * @param  {string} keyField\n     * @param  {number|string} value\n     * @param  {string} tableName\n     */\n    UrlAdaptor.prototype.remove = function (dm, keyField, value, tableName, query) {\n        return {\n            type: 'POST',\n            url: dm.dataSource.removeUrl || dm.dataSource.crudUrl || dm.dataSource.url,\n            data: JSON.stringify(extend({}, {\n                key: value,\n                keyColumn: keyField,\n                table: tableName,\n                action: 'remove'\n            }, DataUtil.getAddParams(this, dm, query)))\n        };\n    };\n    /**\n     * Prepare and return request body which is used to update record.\n     * @param  {DataManager} dm\n     * @param  {string} keyField\n     * @param  {Object} value\n     * @param  {string} tableName\n     */\n    UrlAdaptor.prototype.update = function (dm, keyField, value, tableName, query) {\n        return {\n            type: 'POST',\n            url: dm.dataSource.updateUrl || dm.dataSource.crudUrl || dm.dataSource.url,\n            data: JSON.stringify(extend({}, {\n                value: value,\n                action: 'update',\n                keyColumn: keyField,\n                key: DataUtil.getObject(keyField, value),\n                table: tableName\n            }, DataUtil.getAddParams(this, dm, query)))\n        };\n    };\n    /**\n     * To generate the predicate based on the filtered query.\n     * @param  {Object[]|string[]|number[]} data\n     * @param  {Query} query\n     * @hidden\n     */\n    UrlAdaptor.prototype.getFiltersFrom = function (data, query) {\n        var key = query.fKey;\n        var value;\n        var prop = key;\n        var pKey = query.key;\n        var predicats = [];\n        if (typeof data[0] !== 'object') {\n            prop = null;\n        }\n        for (var i = 0; i < data.length; i++) {\n            if (typeof data[0] === 'object') {\n                value = DataUtil.getObject(pKey || prop, data[i]);\n            }\n            else {\n                value = data[i];\n            }\n            predicats.push(new Predicate(key, 'equal', value));\n        }\n        return Predicate.or(predicats);\n    };\n    UrlAdaptor.prototype.getAggregateResult = function (pvt, data, args, groupDs, query) {\n        var pData = data;\n        if (data && data.result) {\n            pData = data.result;\n        }\n        if (pvt && pvt.aggregates && pvt.aggregates.length) {\n            var agg = pvt.aggregates;\n            var fn = void 0;\n            var aggregateData = pData;\n            var res = {};\n            if (data.aggregate) {\n                aggregateData = data.aggregate;\n            }\n            for (var i = 0; i < agg.length; i++) {\n                fn = DataUtil.aggregates[agg[i].type];\n                if (fn) {\n                    res[agg[i].field + ' - ' + agg[i].type] = fn(aggregateData, agg[i].field);\n                }\n            }\n            args.aggregates = res;\n        }\n        if (pvt && pvt.groups && pvt.groups.length) {\n            var groups = pvt.groups;\n            for (var i = 0; i < groups.length; i++) {\n                var level = null;\n                if (!isNullOrUndefined(groupDs)) {\n                    groupDs = DataUtil.group(groupDs, groups[i]);\n                }\n                var groupQuery = Query.filterQueries(query.queries, 'onGroup')[i].e;\n                pData = DataUtil.group(pData, groups[i], pvt.aggregates, level, groupDs, groupQuery.comparer);\n            }\n            args.result = pData;\n        }\n        return args;\n    };\n    UrlAdaptor.prototype.getQueryRequest = function (query) {\n        var req = { sorts: [], groups: [], filters: [], searches: [], aggregates: [] };\n        req.sorts = Query.filterQueries(query.queries, 'onSortBy');\n        req.groups = Query.filterQueries(query.queries, 'onGroup');\n        req.filters = Query.filterQueries(query.queries, 'onWhere');\n        req.searches = Query.filterQueries(query.queries, 'onSearch');\n        req.aggregates = Query.filterQueries(query.queries, 'onAggregates');\n        return req;\n    };\n    UrlAdaptor.prototype.addParams = function (options) {\n        var req = options.reqParams;\n        if (options.params.length) {\n            req.params = {};\n        }\n        for (var _i = 0, _a = options.params; _i < _a.length; _i++) {\n            var tmp = _a[_i];\n            if (req[tmp.key]) {\n                throw new Error('Query() - addParams: Custom Param is conflicting other request arguments');\n            }\n            req[tmp.key] = tmp.value;\n            if (tmp.fn) {\n                req[tmp.key] = tmp.fn.call(options.query, tmp.key, options.query, options.dm);\n            }\n            req.params[tmp.key] = req[tmp.key];\n        }\n    };\n    return UrlAdaptor;\n}(Adaptor));\nexport { UrlAdaptor };\n/**\n * OData Adaptor that is extended from URL Adaptor, is used for consuming data through OData Service.\n * @hidden\n */\nvar ODataAdaptor = /** @class */ (function (_super) {\n    __extends(ODataAdaptor, _super);\n    function ODataAdaptor(props) {\n        var _this = _super.call(this) || this;\n        // options replaced the default adaptor options\n        _this.options = extend({}, _this.options, {\n            requestType: 'get',\n            accept: 'application/json;odata=light;q=1,application/json;odata=verbose;q=0.5',\n            multipartAccept: 'multipart/mixed',\n            sortBy: '$orderby',\n            select: '$select',\n            skip: '$skip',\n            take: '$top',\n            count: '$inlinecount',\n            where: '$filter',\n            expand: '$expand',\n            batch: '$batch',\n            changeSet: '--changeset_',\n            batchPre: 'batch_',\n            contentId: 'Content-Id: ',\n            batchContent: 'Content-Type: multipart/mixed; boundary=',\n            changeSetContent: 'Content-Type: application/http\\nContent-Transfer-Encoding: binary ',\n            batchChangeSetContentType: 'Content-Type: application/json; charset=utf-8 ',\n            updateType: 'PUT'\n        });\n        extend(_this.options, props || {});\n        return _this;\n    }\n    ODataAdaptor.prototype.getModuleName = function () {\n        return 'ODataAdaptor';\n    };\n    /**\n     * Generate request string based on the filter criteria from query.\n     * @param  {Predicate} pred\n     * @param  {boolean} requiresCast?\n     */\n    ODataAdaptor.prototype.onPredicate = function (predicate, query, requiresCast) {\n        var returnValue = '';\n        var operator;\n        var guid;\n        var val = predicate.value;\n        var type = typeof val;\n        var field = predicate.field ? ODataAdaptor.getField(predicate.field) : null;\n        if (val instanceof Date) {\n            val = 'datetime\\'' + DataUtil.parse.replacer(val) + '\\'';\n        }\n        if (type === 'string') {\n            val = encodeURIComponent(val);\n            val = '\\'' + val + '\\'';\n            if (requiresCast) {\n                field = 'cast(' + field + ', \\'Edm.String\\')';\n            }\n            if (DataUtil.parse.isGuid(val)) {\n                guid = 'guid';\n            }\n            if (predicate.ignoreCase) {\n                if (!guid) {\n                    field = 'tolower(' + field + ')';\n                }\n                val = val.toLowerCase();\n            }\n        }\n        operator = DataUtil.odBiOperator[predicate.operator];\n        if (operator) {\n            returnValue += field;\n            returnValue += operator;\n            if (guid) {\n                returnValue += guid;\n            }\n            return returnValue + val;\n        }\n        if (!isNullOrUndefined(this.getModuleName) && this.getModuleName() === 'ODataV4Adaptor') {\n            operator = DataUtil.odv4UniOperator[predicate.operator];\n        }\n        else {\n            operator = DataUtil.odUniOperator[predicate.operator];\n        }\n        if (operator === 'substringof') {\n            var temp = val;\n            val = field;\n            field = temp;\n        }\n        returnValue += operator + '(';\n        returnValue += field + ',';\n        if (guid) {\n            returnValue += guid;\n        }\n        returnValue += val + ')';\n        return returnValue;\n    };\n    ODataAdaptor.prototype.addParams = function (options) {\n        _super.prototype.addParams.call(this, options);\n        delete options.reqParams.params;\n    };\n    /**\n     * Generate request string based on the multiple filter criteria from query.\n     * @param  {Predicate} pred\n     * @param  {boolean} requiresCast?\n     */\n    ODataAdaptor.prototype.onComplexPredicate = function (predicate, query, requiresCast) {\n        var res = [];\n        for (var i = 0; i < predicate.predicates.length; i++) {\n            res.push('(' + this.onEachWhere(predicate.predicates[i], query, requiresCast) + ')');\n        }\n        return res.join(' ' + predicate.condition + ' ');\n    };\n    /**\n     * Generate query string based on the multiple filter criteria from query.\n     * @param  {Predicate} filter\n     * @param  {boolean} requiresCast?\n     */\n    ODataAdaptor.prototype.onEachWhere = function (filter, query, requiresCast) {\n        return filter.isComplex ? this.onComplexPredicate(filter, query, requiresCast) : this.onPredicate(filter, query, requiresCast);\n    };\n    /**\n     * Generate query string based on the multiple filter criteria from query.\n     * @param  {string[]} filters\n     */\n    ODataAdaptor.prototype.onWhere = function (filters) {\n        if (this.pvt.search) {\n            filters.push(this.onEachWhere(this.pvt.search, null, true));\n        }\n        return filters.join(' and ');\n    };\n    /**\n     * Generate query string based on the multiple search criteria from query.\n     * @param  {{fields:string[]} e\n     * @param  {string} operator\n     * @param  {string} key\n     * @param  {boolean}} ignoreCase\n     */\n    ODataAdaptor.prototype.onEachSearch = function (e) {\n        if (e.fields && e.fields.length === 0) {\n            DataUtil.throwError('Query() - Search : oData search requires list of field names to search');\n        }\n        var filter = this.pvt.search || [];\n        for (var i = 0; i < e.fields.length; i++) {\n            filter.push(new Predicate(e.fields[i], e.operator, e.key, e.ignoreCase));\n        }\n        this.pvt.search = filter;\n    };\n    /**\n     * Generate query string based on the search criteria from query.\n     * @param  {Object} e\n     */\n    ODataAdaptor.prototype.onSearch = function (e) {\n        this.pvt.search = Predicate.or(this.pvt.search);\n        return '';\n    };\n    /**\n     * Generate query string based on multiple sort criteria from query.\n     * @param  {QueryOptions} e\n     */\n    ODataAdaptor.prototype.onEachSort = function (e) {\n        var res = [];\n        if (e.name instanceof Array) {\n            for (var i = 0; i < e.name.length; i++) {\n                res.push(ODataAdaptor.getField(e.name[i]) + (e.direction === 'descending' ? ' desc' : ''));\n            }\n        }\n        else {\n            res.push(ODataAdaptor.getField(e.name) + (e.direction === 'descending' ? ' desc' : ''));\n        }\n        return res.join(',');\n    };\n    /**\n     * Returns sort query string.\n     * @param  {string[]} e\n     */\n    ODataAdaptor.prototype.onSortBy = function (e) {\n        return e.reverse().join(',');\n    };\n    /**\n     * Adds the group query to the adaptor option.\n     * @param  {Object[]} e\n     * @returns string\n     */\n    ODataAdaptor.prototype.onGroup = function (e) {\n        this.pvt.groups = e;\n        return [];\n    };\n    /**\n     * Returns the select query string.\n     * @param  {string[]} e\n     */\n    ODataAdaptor.prototype.onSelect = function (e) {\n        for (var i = 0; i < e.length; i++) {\n            e[i] = ODataAdaptor.getField(e[i]);\n        }\n        return e.join(',');\n    };\n    /**\n     * Add the aggregate query to the adaptor option.\n     * @param  {Object[]} e\n     * @returns string\n     */\n    ODataAdaptor.prototype.onAggregates = function (e) {\n        this.pvt.aggregates = e;\n        return '';\n    };\n    /**\n     * Returns the query string which requests total count from the data source.\n     * @param  {boolean} e\n     * @returns string\n     */\n    ODataAdaptor.prototype.onCount = function (e) {\n        return e === true ? 'allpages' : '';\n    };\n    /**\n     * Method will trigger before send the request to server side.\n     * Used to set the custom header or modify the request options.\n     * @param  {DataManager} dm\n     * @param  {XMLHttpRequest} request\n     * @param  {Ajax} settings?\n     */\n    ODataAdaptor.prototype.beforeSend = function (dm, request, settings) {\n        if (DataUtil.endsWith(settings.url, this.options.batch) && settings.type.toLowerCase() === 'post') {\n            request.setRequestHeader('Accept', this.options.multipartAccept);\n            request.setRequestHeader('DataServiceVersion', '2.0');\n            request.overrideMimeType('text/plain; charset=x-user-defined');\n        }\n        else {\n            request.setRequestHeader('Accept', this.options.accept);\n        }\n        request.setRequestHeader('DataServiceVersion', '2.0');\n        request.setRequestHeader('MaxDataServiceVersion', '2.0');\n    };\n    /**\n     * Returns the data from the query processing.\n     * @param  {DataResult} data\n     * @param  {DataOptions} ds?\n     * @param  {Query} query?\n     * @param  {XMLHttpRequest} xhr?\n     * @param  {Ajax} request?\n     * @param  {CrudOptions} changes?\n     * @returns aggregateResult\n     */\n    ODataAdaptor.prototype.processResponse = function (data, ds, query, xhr, request, changes) {\n        var metaCheck = 'odata.metadata';\n        if ((request && request.type === 'GET') && !this.rootUrl && data[metaCheck]) {\n            var dataUrls = data[metaCheck].split('/$metadata#');\n            this.rootUrl = dataUrls[0];\n            this.resourceTableName = dataUrls[1];\n        }\n        var pvtData = 'pvtData';\n        if (!isNullOrUndefined(data.d)) {\n            var dataCopy = ((query && query.isCountRequired) ? data.d.results : data.d);\n            var metaData = '__metadata';\n            if (!isNullOrUndefined(dataCopy)) {\n                for (var i = 0; i < dataCopy.length; i++) {\n                    if (!isNullOrUndefined(dataCopy[i][metaData])) {\n                        delete dataCopy[i][metaData];\n                    }\n                }\n            }\n        }\n        var pvt = request && request[pvtData];\n        var emptyAndBatch = this.processBatchResponse(data, query, xhr, request, changes);\n        if (emptyAndBatch) {\n            return emptyAndBatch;\n        }\n        var versionCheck = xhr && request.getResponseHeader('DataServiceVersion');\n        var count = null;\n        var version = (versionCheck && parseInt(versionCheck, 10)) || 2;\n        if (query && query.isCountRequired) {\n            var oDataCount = '__count';\n            if (data[oDataCount] || data['odata.count']) {\n                count = data[oDataCount] || data['odata.count'];\n            }\n            if (data.d) {\n                data = data.d;\n            }\n            if (data[oDataCount] || data['odata.count']) {\n                count = data[oDataCount] || data['odata.count'];\n            }\n        }\n        if (version === 3 && data.value) {\n            data = data.value;\n        }\n        if (data.d) {\n            data = data.d;\n        }\n        if (version < 3 && data.results) {\n            data = data.results;\n        }\n        var args = {};\n        args.count = count;\n        args.result = data;\n        this.getAggregateResult(pvt, data, args, null, query);\n        return DataUtil.isNull(count) ? args.result : { result: args.result, count: args.count, aggregates: args.aggregates };\n    };\n    /**\n     * Converts the request object to query string.\n     * @param  {Object} req\n     * @param  {Query} query\n     * @param  {DataManager} dm\n     * @returns tableName\n     */\n    ODataAdaptor.prototype.convertToQueryString = function (request, query, dm) {\n        var res = [];\n        var table = 'table';\n        var tableName = request[table] || '';\n        var format = '$format';\n        delete request[table];\n        if (dm.dataSource.requiresFormat) {\n            request[format] = 'json';\n        }\n        var keys = Object.keys(request);\n        for (var _i = 0, keys_4 = keys; _i < keys_4.length; _i++) {\n            var prop = keys_4[_i];\n            res.push(prop + '=' + request[prop]);\n        }\n        res = res.join('&');\n        if (dm.dataSource.url && dm.dataSource.url.indexOf('?') !== -1 && !tableName) {\n            return res;\n        }\n        return res.length ? tableName + '?' + res : tableName || '';\n    };\n    ODataAdaptor.prototype.localTimeReplacer = function (key, convertObj) {\n        for (var _i = 0, _a = !isNullOrUndefined(convertObj) ? Object.keys(convertObj) : []; _i < _a.length; _i++) {\n            var prop = _a[_i];\n            if ((convertObj[prop] instanceof Date)) {\n                convertObj[prop] = DataUtil.dateParse.toLocalTime(convertObj[prop]);\n            }\n        }\n        return convertObj;\n    };\n    /**\n     * Prepare and returns request body which is used to insert a new record in the table.\n     * @param  {DataManager} dm\n     * @param  {Object} data\n     * @param  {string} tableName?\n     */\n    ODataAdaptor.prototype.insert = function (dm, data, tableName) {\n        return {\n            url: (dm.dataSource.insertUrl || dm.dataSource.url).replace(/\\/*$/, tableName ? '/' + tableName : ''),\n            data: JSON.stringify(data, this.options.localTime ? this.localTimeReplacer : null)\n        };\n    };\n    /**\n     * Prepare and return request body which is used to remove record from the table.\n     * @param  {DataManager} dm\n     * @param  {string} keyField\n     * @param  {number} value\n     * @param  {string} tableName?\n     */\n    ODataAdaptor.prototype.remove = function (dm, keyField, value, tableName) {\n        var url;\n        if (typeof value === 'string' && !DataUtil.parse.isGuid(value)) {\n            url = \"('\" + value + \"')\";\n        }\n        else {\n            url = \"(\" + value + \")\";\n        }\n        return {\n            type: 'DELETE',\n            url: (dm.dataSource.removeUrl || dm.dataSource.url).replace(/\\/*$/, tableName ? '/' + tableName : '') + url\n        };\n    };\n    /**\n     * Updates existing record and saves the changes to the table.\n     * @param  {DataManager} dm\n     * @param  {string} keyField\n     * @param  {Object} value\n     * @param  {string} tableName?\n     * @returns this\n     */\n    ODataAdaptor.prototype.update = function (dm, keyField, value, tableName, query, original) {\n        if (this.options.updateType === 'PATCH' && !isNullOrUndefined(original)) {\n            value = this.compareAndRemove(value, original, keyField);\n        }\n        var url;\n        if (typeof value[keyField] === 'string' && !DataUtil.parse.isGuid(value[keyField])) {\n            url = \"('\" + value[keyField] + \"')\";\n        }\n        else {\n            url = \"(\" + value[keyField] + \")\";\n        }\n        return {\n            type: this.options.updateType,\n            url: (dm.dataSource.updateUrl || dm.dataSource.url).replace(/\\/*$/, tableName ? '/' + tableName : '') + url,\n            data: JSON.stringify(value, this.options.localTime ? this.localTimeReplacer : null),\n            accept: this.options.accept\n        };\n    };\n    /**\n     * Prepare the request body based on the newly added, removed and updated records.\n     * The result is used by the batch request.\n     * @param  {DataManager} dm\n     * @param  {CrudOptions} changes\n     * @param  {RemoteArgs} e\n     * @returns {Object}\n     */\n    ODataAdaptor.prototype.batchRequest = function (dm, changes, e, query, original) {\n        var initialGuid = e.guid = DataUtil.getGuid(this.options.batchPre);\n        var url = this.rootUrl ? this.rootUrl + '/' + this.options.batch :\n            dm.dataSource.url.replace(/\\/*$/, '/' + this.options.batch);\n        e.url = this.resourceTableName ? this.resourceTableName : e.url;\n        var args = {\n            url: e.url,\n            key: e.key,\n            cid: 1,\n            cSet: DataUtil.getGuid(this.options.changeSet)\n        };\n        var req = '--' + initialGuid + '\\n';\n        req += 'Content-Type: multipart/mixed; boundary=' + args.cSet.replace('--', '') + '\\n';\n        this.pvt.changeSet = 0;\n        req += this.generateInsertRequest(changes.addedRecords, args, dm);\n        req += this.generateUpdateRequest(changes.changedRecords, args, dm, original ? original.changedRecords : []);\n        req += this.generateDeleteRequest(changes.deletedRecords, args, dm);\n        req += args.cSet + '--\\n';\n        req += '--' + initialGuid + '--';\n        return {\n            type: 'POST',\n            url: url,\n            dataType: 'json',\n            contentType: 'multipart/mixed; charset=UTF-8;boundary=' + initialGuid,\n            data: req\n        };\n    };\n    /**\n     * Generate the string content from the removed records.\n     * The result will be send during batch update.\n     * @param  {Object[]} arr\n     * @param  {RemoteArgs} e\n     * @returns this\n     */\n    ODataAdaptor.prototype.generateDeleteRequest = function (arr, e, dm) {\n        if (!arr) {\n            return '';\n        }\n        var req = '';\n        var stat = {\n            'method': 'DELETE ',\n            'url': function (data, i, key) {\n                var url = DataUtil.getObject(key, data[i]);\n                if (typeof url === 'number' || DataUtil.parse.isGuid(url)) {\n                    return '(' + url + ')';\n                }\n                else if (url instanceof Date) {\n                    var dateTime = data[i][key];\n                    return '(' + dateTime.toJSON() + ')';\n                }\n                else {\n                    return \"('\" + url + \"')\";\n                }\n            },\n            'data': function (data, i) { return ''; }\n        };\n        req = this.generateBodyContent(arr, e, stat, dm);\n        return req + '\\n';\n    };\n    /**\n     * Generate the string content from the inserted records.\n     * The result will be send during batch update.\n     * @param  {Object[]} arr\n     * @param  {RemoteArgs} e\n     */\n    ODataAdaptor.prototype.generateInsertRequest = function (arr, e, dm) {\n        if (!arr) {\n            return '';\n        }\n        var req = '';\n        var stat = {\n            'method': 'POST ',\n            'url': function (data, i, key) { return ''; },\n            'data': function (data, i) { return JSON.stringify(data[i]) + '\\n\\n'; }\n        };\n        req = this.generateBodyContent(arr, e, stat, dm);\n        return req;\n    };\n    /**\n     * Generate the string content from the updated records.\n     * The result will be send during batch update.\n     * @param  {Object[]} arr\n     * @param  {RemoteArgs} e\n     */\n    ODataAdaptor.prototype.generateUpdateRequest = function (arr, e, dm, org) {\n        var _this = this;\n        if (!arr) {\n            return '';\n        }\n        var req = '';\n        arr.forEach(function (change) { return change = _this.compareAndRemove(change, org.filter(function (o) { return DataUtil.getObject(e.key, o) === DataUtil.getObject(e.key, change); })[0], e.key); });\n        var stat = {\n            'method': this.options.updateType + ' ',\n            'url': function (data, i, key) {\n                if (typeof data[i][key] === 'number' || DataUtil.parse.isGuid(data[i][key])) {\n                    return '(' + data[i][key] + ')';\n                }\n                else if (data[i][key] instanceof Date) {\n                    var date = data[i][key];\n                    return '(' + date.toJSON() + ')';\n                }\n                else {\n                    return \"('\" + data[i][key] + \"')\";\n                }\n            },\n            'data': function (data, i) { return JSON.stringify(data[i]) + '\\n\\n'; }\n        };\n        req = this.generateBodyContent(arr, e, stat, dm);\n        return req;\n    };\n    ODataAdaptor.getField = function (prop) {\n        return prop.replace(/\\./g, '/');\n    };\n    ODataAdaptor.prototype.generateBodyContent = function (arr, e, stat, dm) {\n        var req = '';\n        for (var i = 0; i < arr.length; i++) {\n            req += '\\n' + e.cSet + '\\n';\n            req += this.options.changeSetContent + '\\n\\n';\n            req += stat.method;\n            if (stat.method === 'POST ') {\n                req += (dm.dataSource.insertUrl || dm.dataSource.crudUrl || e.url) + stat.url(arr, i, e.key) + ' HTTP/1.1\\n';\n            }\n            else if (stat.method === 'PUT ' || stat.method === 'PATCH ') {\n                req += (dm.dataSource.updateUrl || dm.dataSource.crudUrl || e.url) + stat.url(arr, i, e.key) + ' HTTP/1.1\\n';\n            }\n            else if (stat.method === 'DELETE ') {\n                req += (dm.dataSource.removeUrl || dm.dataSource.crudUrl || e.url) + stat.url(arr, i, e.key) + ' HTTP/1.1\\n';\n            }\n            req += 'Accept: ' + this.options.accept + '\\n';\n            req += 'Content-Id: ' + this.pvt.changeSet++ + '\\n';\n            req += this.options.batchChangeSetContentType + '\\n';\n            if (!isNullOrUndefined(arr[i]['@odata.etag'])) {\n                req += 'If-Match: ' + arr[i]['@odata.etag'] + '\\n\\n';\n                delete arr[i]['@odata.etag'];\n            }\n            else {\n                req += '\\n';\n            }\n            req += stat.data(arr, i);\n        }\n        return req;\n    };\n    ODataAdaptor.prototype.processBatchResponse = function (data, query, xhr, request, changes) {\n        if (xhr && xhr.getResponseHeader('Content-Type') && xhr.getResponseHeader('Content-Type').indexOf('xml') !== -1) {\n            return (query.isCountRequired ? { result: [], count: 0 } : []);\n        }\n        if (request && this.options.batch && DataUtil.endsWith(request.url, this.options.batch) && request.type.toLowerCase() === 'post') {\n            var guid = xhr.getResponseHeader('Content-Type');\n            var cIdx = void 0;\n            var jsonObj = void 0;\n            var d = data + '';\n            guid = guid.substring(guid.indexOf('=batchresponse') + 1);\n            d = d.split(guid);\n            if (d.length < 2) {\n                return {};\n            }\n            d = d[1];\n            var exVal = /(?:\\bContent-Type.+boundary=)(changesetresponse.+)/i.exec(d);\n            if (exVal) {\n                d.replace(exVal[0], '');\n            }\n            var changeGuid = exVal ? exVal[1] : '';\n            d = d.split(changeGuid);\n            for (var i = d.length; i > -1; i--) {\n                if (!/\\bContent-ID:/i.test(d[i]) || !/\\bHTTP.+201/.test(d[i])) {\n                    continue;\n                }\n                cIdx = parseInt(/\\bContent-ID: (\\d+)/i.exec(d[i])[1], 10);\n                if (changes.addedRecords[cIdx]) {\n                    jsonObj = DataUtil.parse.parseJson(/^\\{.+\\}/m.exec(d[i])[0]);\n                    extend({}, changes.addedRecords[cIdx], this.processResponse(jsonObj));\n                }\n            }\n            return changes;\n        }\n        return null;\n    };\n    ODataAdaptor.prototype.compareAndRemove = function (data, original, key) {\n        var _this = this;\n        if (isNullOrUndefined(original)) {\n            return data;\n        }\n        Object.keys(data).forEach(function (prop) {\n            if (prop !== key && prop !== '@odata.etag') {\n                if (DataUtil.isPlainObject(data[prop])) {\n                    _this.compareAndRemove(data[prop], original[prop]);\n                    var final = Object.keys(data[prop]).filter(function (data) { return data !== '@odata.etag'; });\n                    if (final.length === 0) {\n                        delete data[prop];\n                    }\n                }\n                else if (data[prop] === original[prop]) {\n                    delete data[prop];\n                }\n                else if (data[prop] && original[prop] && data[prop].valueOf() === original[prop].valueOf()) {\n                    delete data[prop];\n                }\n            }\n        });\n        return data;\n    };\n    return ODataAdaptor;\n}(UrlAdaptor));\nexport { ODataAdaptor };\n/**\n * The OData v4 is an improved version of OData protocols.\n * The DataManager uses the ODataV4Adaptor to consume OData v4 services.\n * @hidden\n */\nvar ODataV4Adaptor = /** @class */ (function (_super) {\n    __extends(ODataV4Adaptor, _super);\n    function ODataV4Adaptor(props) {\n        var _this = _super.call(this, props) || this;\n        // options replaced the default adaptor options\n        _this.options = extend({}, _this.options, {\n            requestType: 'get',\n            accept: 'application/json, text/javascript, */*; q=0.01',\n            multipartAccept: 'multipart/mixed',\n            sortBy: '$orderby',\n            select: '$select',\n            skip: '$skip',\n            take: '$top',\n            count: '$count',\n            search: '$search',\n            where: '$filter',\n            expand: '$expand',\n            batch: '$batch',\n            changeSet: '--changeset_',\n            batchPre: 'batch_',\n            contentId: 'Content-Id: ',\n            batchContent: 'Content-Type: multipart/mixed; boundary=',\n            changeSetContent: 'Content-Type: application/http\\nContent-Transfer-Encoding: binary ',\n            batchChangeSetContentType: 'Content-Type: application/json; charset=utf-8 ',\n            updateType: 'PATCH',\n            localTime: false,\n            apply: '$apply'\n        });\n        extend(_this.options, props || {});\n        return _this;\n    }\n    /**\n     * @hidden\n     */\n    ODataV4Adaptor.prototype.getModuleName = function () {\n        return 'ODataV4Adaptor';\n    };\n    /**\n     * Returns the query string which requests total count from the data source.\n     * @param  {boolean} e\n     * @returns string\n     */\n    ODataV4Adaptor.prototype.onCount = function (e) {\n        return e === true ? 'true' : '';\n    };\n    /**\n     * Generate request string based on the filter criteria from query.\n     * @param  {Predicate} pred\n     * @param  {boolean} requiresCast?\n     */\n    ODataV4Adaptor.prototype.onPredicate = function (predicate, query, requiresCast) {\n        var returnValue = '';\n        var val = predicate.value;\n        var isDate = val instanceof Date;\n        returnValue = _super.prototype.onPredicate.call(this, predicate, query, requiresCast);\n        if (isDate) {\n            returnValue = returnValue.replace(/datetime'(.*)'$/, '$1');\n        }\n        if (DataUtil.parse.isGuid(val)) {\n            returnValue = returnValue.replace('guid', '').replace(/'/g, '');\n        }\n        return returnValue;\n    };\n    /**\n     *  Generate query string based on the multiple search criteria from query.\n     * @param  {{fields:string[]} e\n     * @param  {string} operator\n     * @param  {string} key\n     * @param  {boolean}} ignoreCase\n     */\n    ODataV4Adaptor.prototype.onEachSearch = function (e) {\n        var search = this.pvt.searches || [];\n        search.push(e.key);\n        this.pvt.searches = search;\n    };\n    /**\n     *  Generate query string based on the search criteria from query.\n     * @param  {Object} e\n     */\n    ODataV4Adaptor.prototype.onSearch = function (e) {\n        return this.pvt.searches.join(' OR ');\n    };\n    /**\n     * Returns the expand query string.\n     * @param  {string} e\n     */\n    ODataV4Adaptor.prototype.onExpand = function (e) {\n        var _this = this;\n        var selected = {};\n        var expanded = {};\n        var expands = e.expands.slice();\n        var exArr = [];\n        var selects = e.selects.filter(function (item) { return item.indexOf('.') > -1; });\n        selects.forEach(function (select) {\n            var splits = select.split('.');\n            if (!(splits[0] in selected)) {\n                selected[splits[0]] = [];\n            }\n            selected[splits[0]].push(splits[1]);\n        });\n        //Auto expand from select query\n        Object.keys(selected).forEach(function (expand) {\n            if ((expands.indexOf(expand) === -1)) {\n                expands.push(expand);\n            }\n        });\n        expands.forEach(function (expand) {\n            expanded[expand] = expand in selected ? expand + \"(\" + _this.options.select + \"=\" + selected[expand].join(',') + \")\" : expand;\n        });\n        Object.keys(expanded).forEach(function (ex) { return exArr.push(expanded[ex]); });\n        return exArr.join(',');\n    };\n    /**\n     * Returns the groupby query string.\n     * @param  {string} e\n     */\n    ODataV4Adaptor.prototype.onDistinct = function (distinctFields) {\n        var fields = distinctFields.map(function (field) { return ODataAdaptor.getField(field); }).join(',');\n        return \"groupby((\" + fields + \"))\";\n    };\n    /**\n     * Returns the select query string.\n     * @param  {string[]} e\n     */\n    ODataV4Adaptor.prototype.onSelect = function (e) {\n        return _super.prototype.onSelect.call(this, e.filter(function (item) { return item.indexOf('.') === -1; }));\n    };\n    /**\n     * Method will trigger before send the request to server side.\n     * Used to set the custom header or modify the request options.\n     * @param  {DataManager} dm\n     * @param  {XMLHttpRequest} request\n     * @param  {Ajax} settings\n     * @returns void\n     */\n    ODataV4Adaptor.prototype.beforeSend = function (dm, request, settings) {\n        if (settings.type === 'POST' || settings.type === 'PUT' || settings.type === 'PATCH') {\n            request.setRequestHeader('Prefer', 'return=representation');\n        }\n        request.setRequestHeader('Accept', this.options.accept);\n    };\n    /**\n     * Returns the data from the query processing.\n     * @param  {DataResult} data\n     * @param  {DataOptions} ds?\n     * @param  {Query} query?\n     * @param  {XMLHttpRequest} xhr?\n     * @param  {Ajax} request?\n     * @param  {CrudOptions} changes?\n     * @returns aggregateResult\n     */\n    ODataV4Adaptor.prototype.processResponse = function (data, ds, query, xhr, request, changes) {\n        var metaName = '@odata.context';\n        if ((request && request.type === 'GET') && !this.rootUrl && data[metaName]) {\n            var dataUrl = data[metaName].split('/$metadata#');\n            this.rootUrl = dataUrl[0];\n            this.resourceTableName = dataUrl[1];\n        }\n        var pvtData = 'pvtData';\n        var pvt = request && request[pvtData];\n        var emptyAndBatch = _super.prototype.processBatchResponse.call(this, data, query, xhr, request, changes);\n        if (emptyAndBatch) {\n            return emptyAndBatch;\n        }\n        var count = null;\n        var dataCount = '@odata.count';\n        if (query && query.isCountRequired) {\n            if (dataCount in data) {\n                count = data[dataCount];\n            }\n        }\n        data = !isNullOrUndefined(data.value) ? data.value : data;\n        var args = {};\n        args.count = count;\n        args.result = data;\n        this.getAggregateResult(pvt, data, args, null, query);\n        return DataUtil.isNull(count) ? args.result : { result: args.result, count: count, aggregates: args.aggregates };\n    };\n    return ODataV4Adaptor;\n}(ODataAdaptor));\nexport { ODataV4Adaptor };\n/**\n * The Web API is a programmatic interface to define the request and response messages system that is mostly exposed in JSON or XML.\n * The DataManager uses the WebApiAdaptor to consume Web API.\n * Since this adaptor is targeted to interact with Web API created using OData endpoint, it is extended from ODataAdaptor\n * @hidden\n */\nvar WebApiAdaptor = /** @class */ (function (_super) {\n    __extends(WebApiAdaptor, _super);\n    function WebApiAdaptor() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    WebApiAdaptor.prototype.getModuleName = function () {\n        return 'WebApiAdaptor';\n    };\n    /**\n     * Prepare and returns request body which is used to insert a new record in the table.\n     * @param  {DataManager} dm\n     * @param  {Object} data\n     * @param  {string} tableName?\n     */\n    WebApiAdaptor.prototype.insert = function (dm, data, tableName) {\n        return {\n            type: 'POST',\n            url: dm.dataSource.url,\n            data: JSON.stringify(data)\n        };\n    };\n    /**\n     * Prepare and return request body which is used to remove record from the table.\n     * @param  {DataManager} dm\n     * @param  {string} keyField\n     * @param  {number} value\n     * @param  {string} tableName?\n     */\n    WebApiAdaptor.prototype.remove = function (dm, keyField, value, tableName) {\n        return {\n            type: 'DELETE',\n            url: dm.dataSource.url + '/' + value,\n            data: JSON.stringify(value)\n        };\n    };\n    /**\n     * Prepare and return request body which is used to update record.\n     * @param  {DataManager} dm\n     * @param  {string} keyField\n     * @param  {Object} value\n     * @param  {string} tableName?\n     */\n    WebApiAdaptor.prototype.update = function (dm, keyField, value, tableName) {\n        return {\n            type: 'PUT',\n            url: dm.dataSource.url,\n            data: JSON.stringify(value)\n        };\n    };\n    WebApiAdaptor.prototype.batchRequest = function (dm, changes, e) {\n        var _this = this;\n        var initialGuid = e.guid = DataUtil.getGuid(this.options.batchPre);\n        var url = dm.dataSource.url.replace(/\\/*$/, '/' + this.options.batch);\n        e.url = this.resourceTableName ? this.resourceTableName : e.url;\n        var req = [];\n        var _loop_1 = function (i, x) {\n            changes.addedRecords.forEach(function (j, d) {\n                var stat = {\n                    'method': 'POST ',\n                    'url': function (data, i, key) { return ''; },\n                    'data': function (data, i) { return JSON.stringify(data[i]) + '\\n\\n'; }\n                };\n                req.push('--' + initialGuid);\n                req.push('Content-Type: application/http; msgtype=request', '');\n                req.push('POST ' + '/api/' + (dm.dataSource.insertUrl || dm.dataSource.crudUrl || e.url)\n                    + stat.url(changes.addedRecords, i, e.key) + ' HTTP/1.1');\n                req.push('Content-Type: ' + 'application/json; charset=utf-8');\n                req.push('Host: ' + location.host);\n                req.push('', j ? JSON.stringify(j) : '');\n            });\n        };\n        //insertion\n        for (var i = 0, x = changes.addedRecords.length; i < x; i++) {\n            _loop_1(i, x);\n        }\n        var _loop_2 = function (i, x) {\n            changes.changedRecords.forEach(function (j, d) {\n                var stat = {\n                    'method': _this.options.updateType + ' ',\n                    'url': function (data, i, key) { return ''; },\n                    'data': function (data, i) { return JSON.stringify(data[i]) + '\\n\\n'; }\n                };\n                req.push('--' + initialGuid);\n                req.push('Content-Type: application/http; msgtype=request', '');\n                req.push('PUT ' + '/api/' + (dm.dataSource.updateUrl || dm.dataSource.crudUrl || e.url)\n                    + stat.url(changes.changedRecords, i, e.key) + ' HTTP/1.1');\n                req.push('Content-Type: ' + 'application/json; charset=utf-8');\n                req.push('Host: ' + location.host);\n                req.push('', j ? JSON.stringify(j) : '');\n            });\n        };\n        //updation \n        for (var i = 0, x = changes.changedRecords.length; i < x; i++) {\n            _loop_2(i, x);\n        }\n        var _loop_3 = function (i, x) {\n            changes.deletedRecords.forEach(function (j, d) {\n                var state = {\n                    'mtd': 'DELETE ',\n                    'url': function (data, i, key) {\n                        var url = DataUtil.getObject(key, data[i]);\n                        if (typeof url === 'number' || DataUtil.parse.isGuid(url)) {\n                            return '/' + url;\n                        }\n                        else if (url instanceof Date) {\n                            var datTime = data[i][key];\n                            return '/' + datTime.toJSON();\n                        }\n                        else {\n                            return \"/'\" + url + \"'\";\n                        }\n                    },\n                    'data': function (data, i) { return ''; }\n                };\n                req.push('--' + initialGuid);\n                req.push('Content-Type: application/http; msgtype=request', '');\n                req.push('DELETE ' + '/api/' + (dm.dataSource.removeUrl || dm.dataSource.crudUrl || e.url)\n                    + state.url(changes.deletedRecords, i, e.key) + ' HTTP/1.1');\n                req.push('Content-Type: ' + 'application/json; charset=utf-8');\n                req.push('Host: ' + location.host);\n                req.push('', j ? JSON.stringify(j) : '');\n            });\n        };\n        //deletion\n        for (var i = 0, x = changes.deletedRecords.length; i < x; i++) {\n            _loop_3(i, x);\n        }\n        req.push('--' + initialGuid + '--', '');\n        return {\n            type: 'POST',\n            url: url,\n            contentType: 'multipart/mixed; boundary=' + initialGuid,\n            data: req.join('\\r\\n')\n        };\n    };\n    /**\n     * Method will trigger before send the request to server side.\n     * Used to set the custom header or modify the request options.\n     * @param  {DataManager} dm\n     * @param  {XMLHttpRequest} request\n     * @param  {Ajax} settings\n     * @returns void\n     */\n    WebApiAdaptor.prototype.beforeSend = function (dm, request, settings) {\n        request.setRequestHeader('Accept', 'application/json, text/javascript, */*; q=0.01');\n    };\n    /**\n     * Returns the data from the query processing.\n     * @param  {DataResult} data\n     * @param  {DataOptions} ds?\n     * @param  {Query} query?\n     * @param  {XMLHttpRequest} xhr?\n     * @param  {Ajax} request?\n     * @param  {CrudOptions} changes?\n     * @returns aggregateResult\n     */\n    WebApiAdaptor.prototype.processResponse = function (data, ds, query, xhr, request, changes) {\n        var pvtData = 'pvtData';\n        var pvt = request && request[pvtData];\n        var count = null;\n        var args = {};\n        if (request && request.type.toLowerCase() !== 'post') {\n            var versionCheck = xhr && request.getResponseHeader('DataServiceVersion');\n            var version = (versionCheck && parseInt(versionCheck, 10)) || 2;\n            if (query && query.isCountRequired) {\n                if (!DataUtil.isNull(data.Count)) {\n                    count = data.Count;\n                }\n            }\n            if (version < 3 && data.Items) {\n                data = data.Items;\n            }\n            args.count = count;\n            args.result = data;\n            this.getAggregateResult(pvt, data, args, null, query);\n        }\n        args.result = args.result || data;\n        return DataUtil.isNull(count) ? args.result : { result: args.result, count: args.count, aggregates: args.aggregates };\n    };\n    return WebApiAdaptor;\n}(ODataAdaptor));\nexport { WebApiAdaptor };\n/**\n * WebMethodAdaptor can be used by DataManager to interact with web method.\n * @hidden\n */\nvar WebMethodAdaptor = /** @class */ (function (_super) {\n    __extends(WebMethodAdaptor, _super);\n    function WebMethodAdaptor() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Prepare the request body based on the query.\n     * The query information can be accessed at the WebMethod using variable named `value`.\n     * @param  {DataManager} dm\n     * @param  {Query} query\n     * @param  {Object[]} hierarchyFilters?\n     * @returns application\n     */\n    WebMethodAdaptor.prototype.processQuery = function (dm, query, hierarchyFilters) {\n        var obj = new UrlAdaptor().processQuery(dm, query, hierarchyFilters);\n        var getData = 'data';\n        var data = DataUtil.parse.parseJson(obj[getData]);\n        var result = {};\n        var value = 'value';\n        if (data.param) {\n            for (var i = 0; i < data.param.length; i++) {\n                var param = data.param[i];\n                var key = Object.keys(param)[0];\n                result[key] = param[key];\n            }\n        }\n        result[value] = data;\n        var pvtData = 'pvtData';\n        var url = 'url';\n        return {\n            data: JSON.stringify(result),\n            url: obj[url],\n            pvtData: obj[pvtData],\n            type: 'POST',\n            contentType: 'application/json; charset=utf-8'\n        };\n    };\n    return WebMethodAdaptor;\n}(UrlAdaptor));\nexport { WebMethodAdaptor };\n/**\n * RemoteSaveAdaptor, extended from JsonAdaptor and it is used for binding local data and performs all DataManager queries in client-side.\n * It interacts with server-side only for CRUD operations.\n * @hidden\n */\nvar RemoteSaveAdaptor = /** @class */ (function (_super) {\n    __extends(RemoteSaveAdaptor, _super);\n    /**\n     * @hidden\n     */\n    function RemoteSaveAdaptor() {\n        var _this = _super.call(this) || this;\n        setValue('beforeSend', UrlAdaptor.prototype.beforeSend, _this);\n        return _this;\n    }\n    RemoteSaveAdaptor.prototype.insert = function (dm, data, tableName, query, position) {\n        this.pvt.position = position;\n        this.updateType = 'add';\n        return {\n            url: dm.dataSource.insertUrl || dm.dataSource.crudUrl || dm.dataSource.url,\n            data: JSON.stringify(extend({}, {\n                value: data,\n                table: tableName,\n                action: 'insert'\n            }, DataUtil.getAddParams(this, dm, query)))\n        };\n    };\n    RemoteSaveAdaptor.prototype.remove = function (dm, keyField, val, tableName, query) {\n        _super.prototype.remove.call(this, dm, keyField, val);\n        return {\n            type: 'POST',\n            url: dm.dataSource.removeUrl || dm.dataSource.crudUrl || dm.dataSource.url,\n            data: JSON.stringify(extend({}, {\n                key: val,\n                keyColumn: keyField,\n                table: tableName,\n                action: 'remove'\n            }, DataUtil.getAddParams(this, dm, query)))\n        };\n    };\n    RemoteSaveAdaptor.prototype.update = function (dm, keyField, val, tableName, query) {\n        this.updateType = 'update';\n        this.updateKey = keyField;\n        return {\n            type: 'POST',\n            url: dm.dataSource.updateUrl || dm.dataSource.crudUrl || dm.dataSource.url,\n            data: JSON.stringify(extend({}, {\n                value: val,\n                action: 'update',\n                keyColumn: keyField,\n                key: val[keyField],\n                table: tableName\n            }, DataUtil.getAddParams(this, dm, query)))\n        };\n    };\n    RemoteSaveAdaptor.prototype.processResponse = function (data, ds, query, xhr, request, changes, e) {\n        var i;\n        if (this.updateType === 'add') {\n            _super.prototype.insert.call(this, ds, data, null, null, this.pvt.position);\n        }\n        if (this.updateType === 'update') {\n            _super.prototype.update.call(this, ds, this.updateKey, data);\n        }\n        this.updateType = undefined;\n        if (data.added) {\n            for (i = 0; i < data.added.length; i++) {\n                _super.prototype.insert.call(this, ds, data.added[i]);\n            }\n        }\n        if (data.changed) {\n            for (i = 0; i < data.changed.length; i++) {\n                _super.prototype.update.call(this, ds, e.key, data.changed[i]);\n            }\n        }\n        if (data.deleted) {\n            for (i = 0; i < data.deleted.length; i++) {\n                _super.prototype.remove.call(this, ds, e.key, data.deleted[i]);\n            }\n        }\n        return data;\n    };\n    /**\n     * Prepare the request body based on the newly added, removed and updated records.\n     * Also perform the changes in the locally cached data to sync with the remote data.\n     * The result is used by the batch request.\n     * @param  {DataManager} dm\n     * @param  {CrudOptions} changes\n     * @param  {RemoteArgs} e\n     */\n    RemoteSaveAdaptor.prototype.batchRequest = function (dm, changes, e, query, original) {\n        return {\n            type: 'POST',\n            url: dm.dataSource.batchUrl || dm.dataSource.crudUrl || dm.dataSource.url,\n            contentType: 'application/json; charset=utf-8',\n            dataType: 'json',\n            data: JSON.stringify(extend({}, {\n                changed: changes.changedRecords,\n                added: changes.addedRecords,\n                deleted: changes.deletedRecords,\n                action: 'batch',\n                table: e.url,\n                key: e.key\n            }, DataUtil.getAddParams(this, dm, query)))\n        };\n    };\n    RemoteSaveAdaptor.prototype.addParams = function (options) {\n        var urlParams = new UrlAdaptor();\n        urlParams.addParams(options);\n    };\n    return RemoteSaveAdaptor;\n}(JsonAdaptor));\nexport { RemoteSaveAdaptor };\n/**\n * Cache Adaptor is used to cache the data of the visited pages. It prevents new requests for the previously visited pages.\n * You can configure cache page size and duration of caching by using cachingPageSize and timeTillExpiration properties of the DataManager\n * @hidden\n */\nvar CacheAdaptor = /** @class */ (function (_super) {\n    __extends(CacheAdaptor, _super);\n    /**\n     * Constructor for CacheAdaptor class.\n     * @param  {CacheAdaptor} adaptor?\n     * @param  {number} timeStamp?\n     * @param  {number} pageSize?\n     * @hidden\n     */\n    function CacheAdaptor(adaptor, timeStamp, pageSize) {\n        var _this = _super.call(this) || this;\n        _this.isCrudAction = false;\n        _this.isInsertAction = false;\n        if (!isNullOrUndefined(adaptor)) {\n            _this.cacheAdaptor = adaptor;\n        }\n        _this.pageSize = pageSize;\n        _this.guidId = DataUtil.getGuid('cacheAdaptor');\n        var obj = { keys: [], results: [] };\n        window.localStorage.setItem(_this.guidId, JSON.stringify(obj));\n        var guid = _this.guidId;\n        if (!isNullOrUndefined(timeStamp)) {\n            setInterval(function () {\n                var data;\n                data = DataUtil.parse.parseJson(window.localStorage.getItem(guid));\n                var forDel = [];\n                for (var i = 0; i < data.results.length; i++) {\n                    var currentTime = +new Date();\n                    var requestTime = +new Date(data.results[i].timeStamp);\n                    data.results[i].timeStamp = currentTime - requestTime;\n                    if (currentTime - requestTime > timeStamp) {\n                        forDel.push(i);\n                    }\n                }\n                for (var i = 0; i < forDel.length; i++) {\n                    data.results.splice(forDel[i], 1);\n                    data.keys.splice(forDel[i], 1);\n                }\n                window.localStorage.removeItem(guid);\n                window.localStorage.setItem(guid, JSON.stringify(data));\n            }, timeStamp);\n        }\n        return _this;\n    }\n    /**\n     * It will generate the key based on the URL when we send a request to server.\n     * @param  {string} url\n     * @param  {Query} query?\n     * @hidden\n     */\n    CacheAdaptor.prototype.generateKey = function (url, query) {\n        var queries = this.getQueryRequest(query);\n        var singles = Query.filterQueryLists(query.queries, ['onSelect', 'onPage', 'onSkip', 'onTake', 'onRange']);\n        var key = url;\n        var page = 'onPage';\n        if (page in singles) {\n            key += singles[page].pageIndex;\n        }\n        queries.sorts.forEach(function (obj) {\n            key += obj.e.direction + obj.e.fieldName;\n        });\n        queries.groups.forEach(function (obj) {\n            key += obj.e.fieldName;\n        });\n        queries.searches.forEach(function (obj) {\n            key += obj.e.searchKey;\n        });\n        for (var filter = 0; filter < queries.filters.length; filter++) {\n            var currentFilter = queries.filters[filter];\n            if (currentFilter.e.isComplex) {\n                var newQuery = query.clone();\n                newQuery.queries = [];\n                for (var i = 0; i < currentFilter.e.predicates.length; i++) {\n                    newQuery.queries.push({ fn: 'onWhere', e: currentFilter.e.predicates[i], filter: query.queries.filter });\n                }\n                key += currentFilter.e.condition + this.generateKey(url, newQuery);\n            }\n            else {\n                key += currentFilter.e.field + currentFilter.e.operator + currentFilter.e.value;\n            }\n        }\n        return key;\n    };\n    /**\n     * Process the query to generate request body.\n     * If the data is already cached, it will return the cached data.\n     * @param  {DataManager} dm\n     * @param  {Query} query?\n     * @param  {Object[]} hierarchyFilters?\n     */\n    CacheAdaptor.prototype.processQuery = function (dm, query, hierarchyFilters) {\n        var key = this.generateKey(dm.dataSource.url, query);\n        var cachedItems;\n        cachedItems = DataUtil.parse.parseJson(window.localStorage.getItem(this.guidId));\n        var data = cachedItems ? cachedItems.results[cachedItems.keys.indexOf(key)] : null;\n        if (data != null && !this.isCrudAction && !this.isInsertAction) {\n            return data;\n        }\n        this.isCrudAction = null;\n        this.isInsertAction = null;\n        return this.cacheAdaptor.processQuery.apply(this.cacheAdaptor, [].slice.call(arguments, 0));\n    };\n    /**\n     * Returns the data from the query processing.\n     * It will also cache the data for later usage.\n     * @param  {DataResult} data\n     * @param  {DataManager} ds?\n     * @param  {Query} query?\n     * @param  {XMLHttpRequest} xhr?\n     * @param  {Ajax} request?\n     * @param  {CrudOptions} changes?\n     */\n    CacheAdaptor.prototype.processResponse = function (data, ds, query, xhr, request, changes) {\n        if (this.isInsertAction || (request && this.cacheAdaptor.options.batch &&\n            DataUtil.endsWith(request.url, this.cacheAdaptor.options.batch) && request.type.toLowerCase() === 'post')) {\n            return this.cacheAdaptor.processResponse(data, ds, query, xhr, request, changes);\n        }\n        data = this.cacheAdaptor.processResponse.apply(this.cacheAdaptor, [].slice.call(arguments, 0));\n        var key = query ? this.generateKey(ds.dataSource.url, query) : ds.dataSource.url;\n        var obj = {};\n        obj = DataUtil.parse.parseJson(window.localStorage.getItem(this.guidId));\n        var index = obj.keys.indexOf(key);\n        if (index !== -1) {\n            obj.results.splice(index, 1);\n            obj.keys.splice(index, 1);\n        }\n        obj.results[obj.keys.push(key) - 1] = { keys: key, result: data.result, timeStamp: new Date(), count: data.count };\n        while (obj.results.length > this.pageSize) {\n            obj.results.splice(0, 1);\n            obj.keys.splice(0, 1);\n        }\n        window.localStorage.setItem(this.guidId, JSON.stringify(obj));\n        return data;\n    };\n    /**\n     * Method will trigger before send the request to server side. Used to set the custom header or modify the request options.\n     * @param  {DataManager} dm\n     * @param  {XMLHttpRequest} request\n     * @param  {Ajax} settings?\n     */\n    CacheAdaptor.prototype.beforeSend = function (dm, request, settings) {\n        if (!isNullOrUndefined(this.cacheAdaptor.options.batch) && DataUtil.endsWith(settings.url, this.cacheAdaptor.options.batch)\n            && settings.type.toLowerCase() === 'post') {\n            request.setRequestHeader('Accept', this.cacheAdaptor.options.multipartAccept);\n        }\n        if (!dm.dataSource.crossDomain) {\n            request.setRequestHeader('Accept', this.cacheAdaptor.options.accept);\n        }\n    };\n    /**\n     * Updates existing record and saves the changes to the table.\n     * @param  {DataManager} dm\n     * @param  {string} keyField\n     * @param  {Object} value\n     * @param  {string} tableName\n     */\n    CacheAdaptor.prototype.update = function (dm, keyField, value, tableName) {\n        this.isCrudAction = true;\n        return this.cacheAdaptor.update(dm, keyField, value, tableName);\n    };\n    /**\n     * Prepare and returns request body which is used to insert a new record in the table.\n     * @param  {DataManager} dm\n     * @param  {Object} data\n     * @param  {string} tableName?\n     */\n    CacheAdaptor.prototype.insert = function (dm, data, tableName) {\n        this.isInsertAction = true;\n        return this.cacheAdaptor.insert(dm, data, tableName);\n    };\n    /**\n     * Prepare and return request body which is used to remove record from the table.\n     * @param  {DataManager} dm\n     * @param  {string} keyField\n     * @param  {Object} value\n     * @param  {string} tableName?\n     */\n    CacheAdaptor.prototype.remove = function (dm, keyField, value, tableName) {\n        this.isCrudAction = true;\n        return this.cacheAdaptor.remove(dm, keyField, value, tableName);\n    };\n    /**\n     * Prepare the request body based on the newly added, removed and updated records.\n     * The result is used by the batch request.\n     * @param  {DataManager} dm\n     * @param  {CrudOptions} changes\n     * @param  {RemoteArgs} e\n     */\n    CacheAdaptor.prototype.batchRequest = function (dm, changes, e) {\n        return this.cacheAdaptor.batchRequest(dm, changes, e);\n    };\n    return CacheAdaptor;\n}(UrlAdaptor));\nexport { CacheAdaptor };\n"]},"metadata":{},"sourceType":"module"}