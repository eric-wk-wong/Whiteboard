{"ast":null,"code":"var _jsxFileName = \"/Users/jay/jay-resume/src/components/Blogger/Blogger.js\";\nimport React from \"react\";\nimport firebase from \"../base\";\nimport { SpellInput } from \"../SpellInput\";\n\nfunction Blogger() {\n  const [spells, setSpells] = React.useState([]);\n  const [newSpellName, setNewSpellName] = React.useState();\n  React.useEffect(() => {\n    const fetchData = async () => {\n      const db = firebase.firestore();\n      const data = await db.collection(\"spells\").get();\n      setSpells(data.docs.map(doc => ({ ...doc.data(),\n        id: doc.id\n      })));\n    };\n\n    fetchData();\n  }, []);\n\n  const onCreate = () => {\n    const db = firebase.firestore();\n    db.collection(\"spells\").add({\n      name: newSpellName\n    });\n  };\n\n  return React.createElement(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    value: newSpellName,\n    onChange: e => setNewSpellName(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    onClick: onCreate,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, \"Creat\"), spells.map(spell => React.createElement(\"li\", {\n    key: spell.name,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, React.createElement(SpellInput, {\n    spell: spell,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }))));\n}\n\nexport default Blogger;","map":{"version":3,"sources":["/Users/jay/jay-resume/src/components/Blogger/Blogger.js"],"names":["React","firebase","SpellInput","Blogger","spells","setSpells","useState","newSpellName","setNewSpellName","useEffect","fetchData","db","firestore","data","collection","get","docs","map","doc","id","onCreate","add","name","e","target","value","spell"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,SAArB;AACA,SAASC,UAAT,QAA2B,eAA3B;;AAEA,SAASC,OAAT,GAAmB;AACjB,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBL,KAAK,CAACM,QAAN,CAAe,EAAf,CAA5B;AACA,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCR,KAAK,CAACM,QAAN,EAAxC;AAEAN,EAAAA,KAAK,CAACS,SAAN,CAAgB,MAAM;AACpB,UAAMC,SAAS,GAAG,YAAY;AAC5B,YAAMC,EAAE,GAAGV,QAAQ,CAACW,SAAT,EAAX;AACA,YAAMC,IAAI,GAAG,MAAMF,EAAE,CAACG,UAAH,CAAc,QAAd,EAAwBC,GAAxB,EAAnB;AACAV,MAAAA,SAAS,CAACQ,IAAI,CAACG,IAAL,CAAUC,GAAV,CAAcC,GAAG,KAAK,EAAE,GAAGA,GAAG,CAACL,IAAJ,EAAL;AAAiBM,QAAAA,EAAE,EAAED,GAAG,CAACC;AAAzB,OAAL,CAAjB,CAAD,CAAT;AACD,KAJD;;AAKAT,IAAAA,SAAS;AACV,GAPD,EAOG,EAPH;;AASA,QAAMU,QAAQ,GAAG,MAAM;AACrB,UAAMT,EAAE,GAAGV,QAAQ,CAACW,SAAT,EAAX;AACAD,IAAAA,EAAE,CAACG,UAAH,CAAc,QAAd,EAAwBO,GAAxB,CAA4B;AAAEC,MAAAA,IAAI,EAAEf;AAAR,KAA5B;AACD,GAHD;;AAKA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACE,IAAA,KAAK,EAAEA,YADT;AAEE,IAAA,QAAQ,EAAEgB,CAAC,IAAIf,eAAe,CAACe,CAAC,CAACC,MAAF,CAASC,KAAV,CAFhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAKE;AAAQ,IAAA,OAAO,EAAEL,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aALF,EAMGhB,MAAM,CAACa,GAAP,CAAWS,KAAK,IACf;AAAI,IAAA,GAAG,EAAEA,KAAK,CAACJ,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,UAAD;AAAY,IAAA,KAAK,EAAEI,KAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADD,CANH,CADF;AAcD;;AAED,eAAevB,OAAf","sourcesContent":["import React from \"react\";\nimport firebase from \"../base\";\nimport { SpellInput } from \"../SpellInput\";\n\nfunction Blogger() {\n  const [spells, setSpells] = React.useState([]);\n  const [newSpellName, setNewSpellName] = React.useState();\n\n  React.useEffect(() => {\n    const fetchData = async () => {\n      const db = firebase.firestore();\n      const data = await db.collection(\"spells\").get();\n      setSpells(data.docs.map(doc => ({ ...doc.data(), id: doc.id })));\n    };\n    fetchData();\n  }, []);\n\n  const onCreate = () => {\n    const db = firebase.firestore();\n    db.collection(\"spells\").add({ name: newSpellName });\n  };\n\n  return (\n    <ul>\n      <input\n        value={newSpellName}\n        onChange={e => setNewSpellName(e.target.value)}\n      />\n      <button onClick={onCreate}>Creat</button>\n      {spells.map(spell => (\n        <li key={spell.name}>\n          <SpellInput spell={spell} />\n        </li>\n      ))}\n    </ul>\n  );\n}\n\nexport default Blogger;"]},"metadata":{},"sourceType":"module"}