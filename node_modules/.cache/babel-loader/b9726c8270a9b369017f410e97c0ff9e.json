{"ast":null,"code":"import { extend, merge, isNullOrUndefined, getValue } from '@syncfusion/ej2-base';\nimport { attributes, prepend, isVisible, append, addClass } from '@syncfusion/ej2-base';\nimport { compile, SanitizeHtmlHelper } from '@syncfusion/ej2-base';\nimport { DataManager, Query } from '@syncfusion/ej2-data';\nexport var cssClass = {\n  li: 'e-list-item',\n  ul: 'e-list-parent e-ul',\n  group: 'e-list-group-item',\n  icon: 'e-list-icon',\n  text: 'e-list-text',\n  check: 'e-list-check',\n  checked: 'e-checked',\n  selected: 'e-selected',\n  expanded: 'e-expanded',\n  textContent: 'e-text-content',\n  hasChild: 'e-has-child',\n  level: 'e-level',\n  url: 'e-list-url',\n  collapsible: 'e-icon-collapsible',\n  disabled: 'e-disabled',\n  image: 'e-list-img',\n  iconWrapper: 'e-icon-wrapper',\n  anchorWrap: 'e-anchor-wrap'\n};\n/**\n * Base List Generator\n */\n\nexport var ListBase;\n\n(function (ListBase) {\n  /**\n   * Default mapped fields.\n   */\n  ListBase.defaultMappedFields = {\n    id: 'id',\n    text: 'text',\n    url: 'url',\n    value: 'value',\n    isChecked: 'isChecked',\n    enabled: 'enabled',\n    expanded: 'expanded',\n    selected: 'selected',\n    iconCss: 'iconCss',\n    child: 'child',\n    isVisible: 'isVisible',\n    hasChildren: 'hasChildren',\n    tooltip: 'tooltip',\n    htmlAttributes: 'htmlAttributes',\n    urlAttributes: 'urlAttributes',\n    imageAttributes: 'imageAttributes',\n    imageUrl: 'imageUrl',\n    groupBy: null\n  };\n  var defaultAriaAttributes = {\n    level: 1,\n    listRole: 'presentation',\n    itemRole: 'presentation',\n    groupItemRole: 'group',\n    itemText: 'list-item',\n    wrapperRole: 'presentation'\n  };\n  var defaultListBaseOptions = {\n    showCheckBox: false,\n    showIcon: false,\n    enableHtmlSanitizer: false,\n    expandCollapse: false,\n    fields: ListBase.defaultMappedFields,\n    ariaAttributes: defaultAriaAttributes,\n    listClass: '',\n    itemClass: '',\n    processSubChild: false,\n    sortOrder: 'None',\n    template: null,\n    groupTemplate: null,\n    headerTemplate: null,\n    expandIconClass: 'e-icon-collapsible',\n    moduleName: 'list',\n    expandIconPosition: 'Right',\n    itemNavigable: false\n  };\n  /**\n   * Function helps to created and return the UL Li element based on your data.\n   * @param  {{[key:string]:Object}[]|string[]} dataSource - Specifies an array of JSON or String data.\n   * @param  {ListBaseOptions} options? - Specifies the list options that need to provide.\n   */\n\n  function createList(createElement, dataSource, options, isSingleLevel) {\n    var curOpt = extend({}, defaultListBaseOptions, options);\n    var ariaAttributes = extend({}, defaultAriaAttributes, curOpt.ariaAttributes);\n    var type = typeofData(dataSource).typeof;\n\n    if (type === 'string' || type === 'number') {\n      return createListFromArray(createElement, dataSource, isSingleLevel, options);\n    } else {\n      return createListFromJson(createElement, dataSource, options, ariaAttributes.level, isSingleLevel);\n    }\n  }\n\n  ListBase.createList = createList;\n  /**\n   * Function helps to created an element list based on string array input .\n   * @param  {string[]} dataSource - Specifies an array of string data\n   */\n\n  function createListFromArray(createElement, dataSource, isSingleLevel, options) {\n    var subChild = createListItemFromArray(createElement, dataSource, isSingleLevel, options);\n    return generateUL(createElement, subChild, null, options);\n  }\n\n  ListBase.createListFromArray = createListFromArray;\n  /**\n   * Function helps to created an element list based on string array input .\n   * @param  {string[]} dataSource - Specifies an array of string data\n   */\n\n  function createListItemFromArray(createElement, dataSource, isSingleLevel, options) {\n    var subChild = [];\n    var curOpt = extend({}, defaultListBaseOptions, options);\n    cssClass = getModuleClass(curOpt.moduleName);\n    var id = generateId(); // generate id for drop-down-list option.\n\n    for (var i = 0; i < dataSource.length; i++) {\n      if (isNullOrUndefined(dataSource[i])) {\n        continue;\n      }\n\n      var li = void 0;\n\n      if (curOpt.itemCreating && typeof curOpt.itemCreating === 'function') {\n        var curData = {\n          dataSource: dataSource,\n          curData: dataSource[i],\n          text: dataSource[i],\n          options: curOpt\n        };\n        curOpt.itemCreating(curData);\n      }\n\n      if (isSingleLevel) {\n        li = generateSingleLevelLI(createElement, dataSource[i], undefined, null, null, [], null, id, i, options);\n      } else {\n        li = generateLI(createElement, dataSource[i], undefined, null, null, options);\n      }\n\n      if (curOpt.itemCreated && typeof curOpt.itemCreated === 'function') {\n        var curData = {\n          dataSource: dataSource,\n          curData: dataSource[i],\n          text: dataSource[i],\n          item: li,\n          options: curOpt\n        };\n        curOpt.itemCreated(curData);\n      }\n\n      subChild.push(li);\n    }\n\n    return subChild;\n  }\n\n  ListBase.createListItemFromArray = createListItemFromArray;\n  /**\n   * Function helps to created an element list based on array of JSON input .\n   * @param  {{[key:string]:Object}[]} dataSource - Specifies an array of JSON data.\n   * @param  {ListBaseOptions} options? - Specifies the list options that need to provide.\n   */\n  // tslint:disable-next-line:max-func-body-length\n\n  function createListItemFromJson(createElement, dataSource, options, level, isSingleLevel) {\n    var curOpt = extend({}, defaultListBaseOptions, options);\n    cssClass = getModuleClass(curOpt.moduleName);\n    var fields = extend({}, ListBase.defaultMappedFields, curOpt.fields);\n    var ariaAttributes = extend({}, defaultAriaAttributes, curOpt.ariaAttributes);\n    var id;\n    var checkboxElement = [];\n\n    if (level) {\n      ariaAttributes.level = level;\n    }\n\n    var child = [];\n    var li;\n\n    if (dataSource && dataSource.length && !isNullOrUndefined(typeofData(dataSource).item) && !typeofData(dataSource).item.hasOwnProperty(fields.id)) {\n      id = generateId(); // generate id for drop-down-list option.\n    }\n\n    for (var i = 0; i < dataSource.length; i++) {\n      var fieldData = getFieldValues(dataSource[i], fields);\n\n      if (isNullOrUndefined(dataSource[i])) {\n        continue;\n      }\n\n      if (curOpt.itemCreating && typeof curOpt.itemCreating === 'function') {\n        var curData = {\n          dataSource: dataSource,\n          curData: dataSource[i],\n          text: fieldData[fields.text],\n          options: curOpt,\n          fields: fields\n        };\n        curOpt.itemCreating(curData);\n      }\n\n      var curItem = dataSource[i];\n\n      if (curOpt.itemCreating && typeof curOpt.itemCreating === 'function') {\n        fieldData = getFieldValues(dataSource[i], fields);\n      }\n\n      if (fieldData.hasOwnProperty(fields.id) && !isNullOrUndefined(fieldData[fields.id])) {\n        id = fieldData[fields.id];\n      }\n\n      var innerEle = [];\n\n      if (curOpt.showCheckBox) {\n        if (curOpt.itemNavigable && (fieldData[fields.url] || fieldData[fields.urlAttributes])) {\n          checkboxElement.push(createElement('input', {\n            className: cssClass.check,\n            attrs: {\n              type: 'checkbox'\n            }\n          }));\n        } else {\n          innerEle.push(createElement('input', {\n            className: cssClass.check,\n            attrs: {\n              type: 'checkbox'\n            }\n          }));\n        }\n      }\n\n      if (isSingleLevel === true) {\n        if (curOpt.showIcon && fieldData.hasOwnProperty(fields.iconCss) && !isNullOrUndefined(fieldData[fields.iconCss])) {\n          innerEle.push(createElement('span', {\n            className: cssClass.icon + ' ' + fieldData[fields.iconCss]\n          }));\n        }\n\n        li = generateSingleLevelLI(createElement, curItem, fieldData, fields, curOpt.itemClass, innerEle, curItem.hasOwnProperty('isHeader') && curItem.isHeader ? true : false, id, i, options);\n\n        if (curOpt.itemNavigable && checkboxElement.length) {\n          prepend(checkboxElement, li.firstElementChild);\n        }\n      } else {\n        li = generateLI(createElement, curItem, fieldData, fields, curOpt.itemClass, options);\n        li.classList.add(cssClass.level + '-' + ariaAttributes.level);\n        li.setAttribute('aria-level', ariaAttributes.level.toString());\n\n        if (fieldData.hasOwnProperty(fields.tooltip)) {\n          li.setAttribute('title', fieldData[fields.tooltip]);\n        }\n\n        if (fieldData.hasOwnProperty(fields.htmlAttributes) && fieldData[fields.htmlAttributes]) {\n          setAttribute(li, fieldData[fields.htmlAttributes]);\n        }\n\n        if (fieldData.hasOwnProperty(fields.enabled) && fieldData[fields.enabled] === false) {\n          li.classList.add(cssClass.disabled);\n        }\n\n        if (fieldData.hasOwnProperty(fields.isVisible) && fieldData[fields.isVisible] === false) {\n          li.style.display = 'none';\n        }\n\n        if (fieldData.hasOwnProperty(fields.imageUrl) && !isNullOrUndefined(fieldData[fields.imageUrl]) && !curOpt.template) {\n          var attr = {\n            src: fieldData[fields.imageUrl]\n          };\n          merge(attr, fieldData[fields.imageAttributes]);\n          prepend([createElement('img', {\n            className: cssClass.image,\n            attrs: attr\n          })], li.firstElementChild);\n        }\n\n        if (curOpt.showIcon && fieldData.hasOwnProperty(fields.iconCss) && !isNullOrUndefined(fieldData[fields.iconCss]) && !curOpt.template) {\n          prepend([createElement('div', {\n            className: cssClass.icon + ' ' + fieldData[fields.iconCss]\n          })], li.firstElementChild);\n        }\n\n        if (innerEle.length) {\n          prepend(innerEle, li.firstElementChild);\n        }\n\n        if (curOpt.itemNavigable && checkboxElement.length) {\n          prepend(checkboxElement, li.firstElementChild);\n        }\n\n        processSubChild(createElement, fieldData, fields, dataSource, curOpt, li, ariaAttributes.level);\n      }\n\n      if (curOpt.itemCreated && typeof curOpt.itemCreated === 'function') {\n        var curData = {\n          dataSource: dataSource,\n          curData: dataSource[i],\n          text: fieldData[fields.text],\n          item: li,\n          options: curOpt,\n          fields: fields\n        };\n        curOpt.itemCreated(curData);\n      }\n\n      checkboxElement = [];\n      child.push(li);\n    }\n\n    return child;\n  }\n\n  ListBase.createListItemFromJson = createListItemFromJson;\n  /**\n   * Function helps to created an element list based on array of JSON input .\n   * @param  {{[key:string]:Object}[]} dataSource - Specifies an array of JSON data.\n   * @param  {ListBaseOptions} options? - Specifies the list options that need to provide.\n   */\n\n  function createListFromJson(createElement, dataSource, options, level, isSingleLevel) {\n    var curOpt = extend({}, defaultListBaseOptions, options);\n    var li = createListItemFromJson(createElement, dataSource, options, level, isSingleLevel);\n    return generateUL(createElement, li, curOpt.listClass, options);\n  }\n\n  ListBase.createListFromJson = createListFromJson;\n  /**\n   * Return the next or previous visible element.\n   * @param  {Element[]|NodeList} elementArray - An element array to find next or previous element.\n   * @param  {Element} li - An element to find next or previous after this element.\n   * @param  {boolean} isPrevious? - Specify when the need get previous element from array.\n   */\n\n  function getSiblingLI(elementArray, element, isPrevious) {\n    cssClass = getModuleClass(defaultListBaseOptions.moduleName);\n\n    if (!elementArray || !elementArray.length) {\n      return void 0;\n    }\n\n    var siblingLI;\n    var liIndex;\n    var liCollections = Array.prototype.slice.call(elementArray);\n\n    if (element) {\n      liIndex = indexOf(element, liCollections);\n    } else {\n      liIndex = isPrevious === true ? liCollections.length : -1;\n    }\n\n    siblingLI = liCollections[liIndex + (isPrevious === true ? -1 : 1)];\n\n    while (siblingLI && (!isVisible(siblingLI) || siblingLI.classList.contains(cssClass.disabled))) {\n      liIndex = liIndex + (isPrevious === true ? -1 : 1);\n      siblingLI = liCollections[liIndex];\n    }\n\n    return siblingLI;\n  }\n\n  ListBase.getSiblingLI = getSiblingLI;\n  /**\n   * Return the index of the li element\n   * @param  {Element} item - An element to find next or previous after this element.\n   * @param  {Element[]|NodeList} elementArray - An element array to find index of given li.\n   */\n\n  function indexOf(item, elementArray) {\n    if (!elementArray || !item) {\n      return void 0;\n    } else {\n      var liCollections = elementArray;\n      liCollections = Array.prototype.slice.call(elementArray);\n      return liCollections.indexOf(item);\n    }\n  }\n\n  ListBase.indexOf = indexOf;\n  /**\n   * Returns the grouped data from given dataSource.\n   * @param  {{[key:string]:Object}[]} dataSource - The JSON data which is necessary to process.\n   * @param  {FieldsMapping} fields - Fields that are mapped from the data source.\n   * @param  {SortOrder='None'} sortOrder- Specifies final result sort order.\n   */\n\n  function groupDataSource(dataSource, fields, sortOrder) {\n    if (sortOrder === void 0) {\n      sortOrder = 'None';\n    }\n\n    var curFields = extend({}, ListBase.defaultMappedFields, fields);\n    var cusQuery = new Query().group(curFields.groupBy); // need to remove once sorting issues fixed in DataManager\n\n    cusQuery = addSorting(sortOrder, 'key', cusQuery);\n    var ds = getDataSource(dataSource, cusQuery);\n    dataSource = [];\n\n    for (var j = 0; j < ds.length; j++) {\n      var itemObj = ds[j].items;\n      var grpItem = {};\n      var hdr = 'isHeader';\n      grpItem[curFields.text] = ds[j].key;\n      grpItem[hdr] = true;\n      grpItem.id = 'group-list-item-' + (ds[j].key ? ds[j].key.toString().trim() : 'undefined');\n      grpItem.items = itemObj;\n      dataSource.push(grpItem);\n\n      for (var k = 0; k < itemObj.length; k++) {\n        dataSource.push(itemObj[k]);\n      }\n    }\n\n    return dataSource;\n  }\n\n  ListBase.groupDataSource = groupDataSource;\n  /**\n   * Returns a sorted query object.\n   * @param  {SortOrder} sortOrder - Specifies that sort order.\n   * @param  {string} sortBy - Specifies sortBy fields.\n   * @param  {Query=new Query()} query - Pass if any existing query.\n   */\n\n  function addSorting(sortOrder, sortBy, query) {\n    if (query === void 0) {\n      query = new Query();\n    }\n\n    if (sortOrder === 'Ascending') {\n      query.sortBy(sortBy, 'ascending', true);\n    } else if (sortOrder === 'Descending') {\n      query.sortBy(sortBy, 'descending', true);\n    } else {\n      for (var i = 0; i < query.queries.length; i++) {\n        if (query.queries[i].fn === 'onSortBy') {\n          query.queries.splice(i, 1);\n        }\n      }\n    }\n\n    return query;\n  }\n\n  ListBase.addSorting = addSorting;\n  /**\n   * Return an array of JSON Data that processed based on queries.\n   * @param  {{[key:string]:Object}[]} dataSource - Specifies local JSON data source.\n   * @param  {Query} query - Specifies query that need to process.\n   */\n\n  function getDataSource(dataSource, query) {\n    // tslint:disable-next-line\n    return new DataManager(dataSource).executeLocal(query);\n  }\n\n  ListBase.getDataSource = getDataSource;\n  /**\n   * Created JSON data based the UL and LI element\n   * @param  {HTMLElement|Element} element - UL element that need to convert as a JSON\n   * @param  {ListBaseOptions} options? - Specifies listbase option for fields.\n   */\n\n  function createJsonFromElement(element, options) {\n    var curOpt = extend({}, defaultListBaseOptions, options);\n    var fields = extend({}, ListBase.defaultMappedFields, curOpt.fields);\n    var curEle = element.cloneNode(true);\n    var jsonAr = [];\n    curEle.classList.add('json-parent');\n    var childs = curEle.querySelectorAll('.json-parent>li');\n    curEle.classList.remove('json-parent');\n\n    for (var i = 0; i < childs.length; i++) {\n      var li = childs[i];\n      var anchor = li.querySelector('a');\n      var ul = li.querySelector('ul');\n      var json = {};\n      var childNodes = anchor ? anchor.childNodes : li.childNodes;\n      var keys = Object.keys(childNodes);\n\n      for (var i_1 = 0; i_1 < childNodes.length; i_1++) {\n        if (!childNodes[Number(keys[i_1])].hasChildNodes()) {\n          json[fields.text] = childNodes[Number(keys[i_1])].textContent;\n        }\n      }\n\n      var attributes_1 = getAllAttributes(li);\n\n      if (attributes_1.id) {\n        json[fields.id] = attributes_1.id;\n        delete attributes_1.id;\n      } else {\n        json[fields.id] = generateId();\n      }\n\n      if (Object.keys(attributes_1).length) {\n        json[fields.htmlAttributes] = attributes_1;\n      }\n\n      if (anchor) {\n        attributes_1 = getAllAttributes(anchor);\n\n        if (Object.keys(attributes_1).length) {\n          json[fields.urlAttributes] = attributes_1;\n        }\n      }\n\n      if (ul) {\n        json[fields.child] = createJsonFromElement(ul, options);\n      }\n\n      jsonAr.push(json);\n    }\n\n    return jsonAr;\n  }\n\n  ListBase.createJsonFromElement = createJsonFromElement;\n\n  function typeofData(data) {\n    var match = {\n      typeof: null,\n      item: null\n    };\n\n    for (var i = 0; i < data.length; i++) {\n      if (!isNullOrUndefined(data[i])) {\n        return match = {\n          typeof: typeof data[i],\n          item: data[i]\n        };\n      }\n    }\n\n    return match;\n  }\n\n  function setAttribute(element, elementAttributes) {\n    var attr = {};\n    merge(attr, elementAttributes);\n\n    if (attr.class) {\n      addClass([element], attr.class.split(' '));\n      delete attr.class;\n    }\n\n    attributes(element, attr);\n  }\n\n  function getAllAttributes(element) {\n    var attributes = {};\n    var attr = element.attributes;\n\n    for (var index = 0; index < attr.length; index++) {\n      attributes[attr[index].nodeName] = attr[index].nodeValue;\n    }\n\n    return attributes;\n  }\n  /**\n   * Created UL element from content template.\n   * @param  {string} template - that need to convert and generate li element.\n   * @param  {{[key:string]:Object}[]} dataSource - Specifies local JSON data source.\n   * @param  {ListBaseOptions} options? - Specifies listbase option for fields.\n   */\n\n\n  function renderContentTemplate(createElement, template, dataSource, fields, options) {\n    cssClass = getModuleClass(defaultListBaseOptions.moduleName);\n    var ulElement = createElement('ul', {\n      className: cssClass.ul,\n      attrs: {\n        role: 'presentation'\n      }\n    });\n    var curOpt = extend({}, defaultListBaseOptions, options);\n    var curFields = extend({}, ListBase.defaultMappedFields, fields);\n    var compiledString = compile(template);\n    var liCollection = [];\n    var id = generateId(); // generate id for drop-down-list option.\n\n    for (var i = 0; i < dataSource.length; i++) {\n      var fieldData = getFieldValues(dataSource[i], curFields);\n      var curItem = dataSource[i];\n      var isHeader = curItem.isHeader;\n      var value = fieldData[curFields.value];\n\n      if (curOpt.itemCreating && typeof curOpt.itemCreating === 'function') {\n        var curData = {\n          dataSource: dataSource,\n          curData: curItem,\n          text: value,\n          options: curOpt,\n          fields: curFields\n        };\n        curOpt.itemCreating(curData);\n      }\n\n      if (curOpt.itemCreating && typeof curOpt.itemCreating === 'function') {\n        fieldData = getFieldValues(dataSource[i], curFields);\n        value = fieldData[curFields.value];\n      }\n\n      var li = createElement('li', {\n        id: id + '-' + i,\n        className: isHeader ? cssClass.group : cssClass.li,\n        attrs: {\n          role: 'presentation'\n        }\n      });\n\n      if (isHeader) {\n        li.innerText = fieldData[curFields.text];\n      } else {\n        var currentID = isHeader ? curOpt.groupTemplateID : curOpt.templateID;\n        append(compiledString(curItem, null, null, currentID, !!curOpt.isStringTemplate), li);\n        li.setAttribute('data-value', value);\n        li.setAttribute('role', 'option');\n      }\n\n      if (curOpt.itemCreated && typeof curOpt.itemCreated === 'function') {\n        var curData = {\n          dataSource: dataSource,\n          curData: curItem,\n          text: value,\n          item: li,\n          options: curOpt,\n          fields: curFields\n        };\n        curOpt.itemCreated(curData);\n      }\n\n      liCollection.push(li);\n    }\n\n    append(liCollection, ulElement);\n    return ulElement;\n  }\n\n  ListBase.renderContentTemplate = renderContentTemplate;\n  /**\n   * Created header items from group template.\n   * @param  {string} template - that need to convert and generate li element.\n   * @param  {{[key:string]:Object}[]} dataSource - Specifies local JSON data source.\n   * @param  {FieldsMapping} fields - Specifies fields for mapping the dataSource.\n   * @param  {Element[]} headerItems? - Specifies listbase header items.\n   */\n\n  function renderGroupTemplate(groupTemplate, groupDataSource, fields, headerItems, options) {\n    var compiledString = compile(groupTemplate);\n    var curFields = extend({}, ListBase.defaultMappedFields, fields);\n    var curOpt = extend({}, defaultListBaseOptions, options);\n    var category = curFields.groupBy;\n\n    for (var _i = 0, headerItems_1 = headerItems; _i < headerItems_1.length; _i++) {\n      var header = headerItems_1[_i];\n      var headerData = {};\n      headerData[category] = header.textContent;\n      header.innerHTML = '';\n      append(compiledString(headerData, null, null, curOpt.groupTemplateID, !!curOpt.isStringTemplate), header);\n    }\n\n    return headerItems;\n  }\n\n  ListBase.renderGroupTemplate = renderGroupTemplate;\n\n  function generateId() {\n    return Math.floor((1 + Math.random()) * 0x10000).toString(16).substring(1);\n  }\n\n  ListBase.generateId = generateId;\n\n  function processSubChild(createElement, fieldData, fields, ds, options, element, level) {\n    // Get SubList\n    var subDS = fieldData[fields.child] || [];\n    var hasChildren = fieldData[fields.hasChildren]; //Create Sub child\n\n    if (subDS.length) {\n      hasChildren = true;\n      element.classList.add(cssClass.hasChild);\n\n      if (options.processSubChild) {\n        var subLi = createListFromJson(createElement, subDS, options, ++level);\n        element.appendChild(subLi);\n      }\n    } // Create expand and collapse node\n\n\n    if (!!options.expandCollapse && hasChildren && !options.template) {\n      element.firstElementChild.classList.add(cssClass.iconWrapper);\n      var expandElement = options.expandIconPosition === 'Left' ? prepend : append;\n      expandElement([createElement('div', {\n        className: 'e-icons ' + options.expandIconClass\n      })], element.querySelector('.' + cssClass.textContent));\n    }\n  }\n\n  function generateSingleLevelLI(createElement, item, fieldData, fields, className, innerElements, grpLI, id, index, options) {\n    var curOpt = extend({}, defaultListBaseOptions, options);\n    var ariaAttributes = extend({}, defaultAriaAttributes, curOpt.ariaAttributes);\n    var text = item;\n    var value = item;\n    var dataSource;\n\n    if (typeof item !== 'string' && typeof item !== 'number' && typeof item !== 'boolean') {\n      dataSource = item;\n      text = typeof fieldData[fields.text] === 'boolean' || typeof fieldData[fields.text] === 'number' ? fieldData[fields.text] : fieldData[fields.text] || '';\n      value = fieldData[fields.value];\n    }\n\n    var elementID;\n\n    if (!isNullOrUndefined(dataSource) && !isNullOrUndefined(fieldData[fields.id]) && fieldData[fields.id] !== '') {\n      elementID = id;\n    } else {\n      elementID = id + '-' + index;\n    }\n\n    var li = createElement('li', {\n      className: (grpLI === true ? cssClass.group : cssClass.li) + ' ' + (isNullOrUndefined(className) ? '' : className),\n      id: elementID,\n      attrs: ariaAttributes.groupItemRole !== '' && ariaAttributes.itemRole !== '' ? {\n        role: grpLI === true ? ariaAttributes.groupItemRole : ariaAttributes.itemRole\n      } : {}\n    });\n\n    if (dataSource && fieldData.hasOwnProperty(fields.enabled) && fieldData[fields.enabled].toString() === 'false') {\n      li.classList.add(cssClass.disabled);\n    }\n\n    if (grpLI) {\n      li.innerText = text;\n    } else {\n      if (!isNullOrUndefined(value)) {\n        li.setAttribute('data-value', value);\n      }\n\n      li.setAttribute('role', 'option');\n\n      if (dataSource && fieldData.hasOwnProperty(fields.htmlAttributes) && fieldData[fields.htmlAttributes]) {\n        setAttribute(li, fieldData[fields.htmlAttributes]);\n      }\n\n      if (innerElements.length && !curOpt.itemNavigable) {\n        append(innerElements, li);\n      }\n\n      if (dataSource && (fieldData[fields.url] || fieldData[fields.urlAttributes] && fieldData[fields.urlAttributes].href)) {\n        li.appendChild(anchorTag(createElement, dataSource, fields, text, innerElements, curOpt.itemNavigable));\n      } else {\n        if (innerElements.length && curOpt.itemNavigable) {\n          append(innerElements, li);\n        }\n\n        li.appendChild(document.createTextNode(text));\n      }\n    }\n\n    return li;\n  }\n\n  function getModuleClass(moduleName) {\n    var moduleClass;\n    return moduleClass = {\n      li: \"e-\" + moduleName + \"-item\",\n      ul: \"e-\" + moduleName + \"-parent e-ul\",\n      group: \"e-\" + moduleName + \"-group-item\",\n      icon: \"e-\" + moduleName + \"-icon\",\n      text: \"e-\" + moduleName + \"-text\",\n      check: \"e-\" + moduleName + \"-check\",\n      checked: 'e-checked',\n      selected: 'e-selected',\n      expanded: 'e-expanded',\n      textContent: 'e-text-content',\n      hasChild: 'e-has-child',\n      level: 'e-level',\n      url: \"e-\" + moduleName + \"-url\",\n      collapsible: 'e-icon-collapsible',\n      disabled: 'e-disabled',\n      image: \"e-\" + moduleName + \"-img\",\n      iconWrapper: 'e-icon-wrapper',\n      anchorWrap: 'e-anchor-wrap'\n    };\n  }\n\n  function anchorTag(createElement, dataSource, fields, text, innerElements, isFullNavigation) {\n    var fieldData = getFieldValues(dataSource, fields);\n    var attr = {\n      href: fieldData[fields.url]\n    };\n\n    if (fieldData.hasOwnProperty(fields.urlAttributes) && fieldData[fields.urlAttributes]) {\n      merge(attr, fieldData[fields.urlAttributes]);\n      attr.href = fieldData[fields.url] ? fieldData[fields.url] : fieldData[fields.urlAttributes].href;\n    }\n\n    var anchorTag;\n\n    if (!isFullNavigation) {\n      anchorTag = createElement('a', {\n        className: cssClass.text + ' ' + cssClass.url,\n        innerHTML: text\n      });\n    } else {\n      anchorTag = createElement('a', {\n        className: cssClass.text + ' ' + cssClass.url\n      });\n      var anchorWrapper = createElement('div', {\n        className: cssClass.anchorWrap\n      });\n\n      if (innerElements && innerElements.length) {\n        append(innerElements, anchorWrapper);\n      }\n\n      anchorWrapper.appendChild(document.createTextNode(text));\n      append([anchorWrapper], anchorTag);\n    }\n\n    setAttribute(anchorTag, attr);\n    return anchorTag;\n  }\n  /* tslint:disable:align */\n\n\n  function generateLI(createElement, item, fieldData, fields, className, options) {\n    var curOpt = extend({}, defaultListBaseOptions, options);\n    var ariaAttributes = extend({}, defaultAriaAttributes, curOpt.ariaAttributes);\n    var text = item;\n    var uID;\n    var grpLI;\n    var dataSource;\n\n    if (typeof item !== 'string' && typeof item !== 'number') {\n      dataSource = item;\n      text = fieldData[fields.text] || '';\n      uID = fieldData[fields.id];\n      grpLI = item.hasOwnProperty('isHeader') && item.isHeader ? true : false;\n    }\n\n    if (options && options.enableHtmlSanitizer) {\n      text = SanitizeHtmlHelper.sanitize(text);\n    }\n\n    var li = createElement('li', {\n      className: (grpLI === true ? cssClass.group : cssClass.li) + ' ' + (isNullOrUndefined(className) ? '' : className),\n      attrs: ariaAttributes.groupItemRole !== '' && ariaAttributes.itemRole !== '' ? {\n        role: grpLI === true ? ariaAttributes.groupItemRole : ariaAttributes.itemRole\n      } : {}\n    });\n    !isNullOrUndefined(uID) ? li.setAttribute('data-uid', uID) : li.setAttribute('data-uid', generateId());\n    var blazId = 'BlazId';\n\n    if (options && !!options.removeBlazorID && typeof item === 'object' && item.hasOwnProperty(blazId)) {\n      delete item[blazId];\n    }\n\n    if (grpLI && options && options.groupTemplate) {\n      var compiledString = compile(options.groupTemplate);\n      append(compiledString(item, null, null, curOpt.groupTemplateID, !!curOpt.isStringTemplate), li);\n    } else if (!grpLI && options && options.template) {\n      var compiledString = compile(options.template);\n      append(compiledString(item, null, null, curOpt.templateID, !!curOpt.isStringTemplate), li);\n    } else {\n      var innerDiv = createElement('div', {\n        className: cssClass.textContent,\n        attrs: ariaAttributes.wrapperRole !== '' ? {\n          role: ariaAttributes.wrapperRole\n        } : {}\n      });\n\n      if (dataSource && (fieldData[fields.url] || fieldData[fields.urlAttributes] && fieldData[fields.urlAttributes].href)) {\n        innerDiv.appendChild(anchorTag(createElement, dataSource, fields, text, null, curOpt.itemNavigable));\n      } else {\n        innerDiv.appendChild(createElement('span', {\n          className: cssClass.text,\n          innerHTML: text,\n          attrs: ariaAttributes.itemText !== '' ? {\n            role: ariaAttributes.itemText\n          } : {}\n        }));\n      }\n\n      li.appendChild(innerDiv);\n    }\n\n    return li;\n  }\n  /**\n   * Returns UL element based on the given LI element.\n   * @param  {HTMLElement[]} liElement - Specifies array of LI element.\n   * @param  {string} className? - Specifies class name that need to be added in UL element.\n   * @param  {ListBaseOptions} options? - Specifies ListBase options.\n   */\n\n\n  function generateUL(createElement, liElement, className, options) {\n    var curOpt = extend({}, defaultListBaseOptions, options);\n    var ariaAttributes = extend({}, defaultAriaAttributes, curOpt.ariaAttributes);\n    cssClass = getModuleClass(curOpt.moduleName);\n    var ulElement = createElement('ul', {\n      className: cssClass.ul + ' ' + (isNullOrUndefined(className) ? '' : className),\n      attrs: ariaAttributes.listRole !== '' ? {\n        role: ariaAttributes.listRole\n      } : {}\n    });\n    append(liElement, ulElement);\n    return ulElement;\n  }\n\n  ListBase.generateUL = generateUL;\n  /**\n   * Returns LI element with additional DIV tag based on the given LI element.\n   * @param  {liElement} liElement - Specifies LI element.\n   * @param  {string} className? - Specifies class name that need to be added in created DIV element.\n   * @param  {ListBaseOptions} options? - Specifies ListBase options.\n   */\n\n  function generateIcon(createElement, liElement, className, options) {\n    var curOpt = extend({}, defaultListBaseOptions, options);\n    cssClass = getModuleClass(curOpt.moduleName);\n    var expandElement = curOpt.expandIconPosition === 'Left' ? prepend : append;\n    expandElement([createElement('div', {\n      className: 'e-icons ' + curOpt.expandIconClass + ' ' + (isNullOrUndefined(className) ? '' : className)\n    })], liElement.querySelector('.' + cssClass.textContent));\n    return liElement;\n  }\n\n  ListBase.generateIcon = generateIcon;\n})(ListBase || (ListBase = {}));\n/**\n * Used to get dataSource item from complex data using fields.\n * @param {{[key:string]:Object}|string[]|string} dataSource - Specifies an  JSON or String data.\n * @param {FieldsMapping} fields - Fields that are mapped from the dataSource.\n */\n\n\nexport function getFieldValues(dataItem, fields) {\n  var fieldData = {};\n\n  if (isNullOrUndefined(dataItem) || typeof dataItem === 'string' || typeof dataItem === 'number' || !isNullOrUndefined(dataItem.isHeader)) {\n    return dataItem;\n  } else {\n    for (var _i = 0, _a = Object.keys(fields); _i < _a.length; _i++) {\n      var field = _a[_i];\n      var dataField = fields[field];\n      var value = !isNullOrUndefined(dataField) && typeof dataField === 'string' ? getValue(dataField, dataItem) : undefined;\n\n      if (!isNullOrUndefined(value)) {\n        fieldData[dataField] = value;\n      }\n    }\n  }\n\n  return fieldData;\n}","map":{"version":3,"sources":["/Users/jay/node_modules/@syncfusion/ej2-lists/src/common/list-base.js"],"names":["extend","merge","isNullOrUndefined","getValue","attributes","prepend","isVisible","append","addClass","compile","SanitizeHtmlHelper","DataManager","Query","cssClass","li","ul","group","icon","text","check","checked","selected","expanded","textContent","hasChild","level","url","collapsible","disabled","image","iconWrapper","anchorWrap","ListBase","defaultMappedFields","id","value","isChecked","enabled","iconCss","child","hasChildren","tooltip","htmlAttributes","urlAttributes","imageAttributes","imageUrl","groupBy","defaultAriaAttributes","listRole","itemRole","groupItemRole","itemText","wrapperRole","defaultListBaseOptions","showCheckBox","showIcon","enableHtmlSanitizer","expandCollapse","fields","ariaAttributes","listClass","itemClass","processSubChild","sortOrder","template","groupTemplate","headerTemplate","expandIconClass","moduleName","expandIconPosition","itemNavigable","createList","createElement","dataSource","options","isSingleLevel","curOpt","type","typeofData","typeof","createListFromArray","createListFromJson","subChild","createListItemFromArray","generateUL","getModuleClass","generateId","i","length","itemCreating","curData","generateSingleLevelLI","undefined","generateLI","itemCreated","item","push","createListItemFromJson","checkboxElement","hasOwnProperty","fieldData","getFieldValues","curItem","innerEle","className","attrs","isHeader","firstElementChild","classList","add","setAttribute","toString","style","display","attr","src","getSiblingLI","elementArray","element","isPrevious","siblingLI","liIndex","liCollections","Array","prototype","slice","call","indexOf","contains","groupDataSource","curFields","cusQuery","addSorting","ds","getDataSource","j","itemObj","items","grpItem","hdr","key","trim","k","sortBy","query","queries","fn","splice","executeLocal","createJsonFromElement","curEle","cloneNode","jsonAr","childs","querySelectorAll","remove","anchor","querySelector","json","childNodes","keys","Object","i_1","Number","hasChildNodes","attributes_1","getAllAttributes","data","match","elementAttributes","class","split","index","nodeName","nodeValue","renderContentTemplate","ulElement","role","compiledString","liCollection","innerText","currentID","groupTemplateID","templateID","isStringTemplate","renderGroupTemplate","headerItems","category","_i","headerItems_1","header","headerData","innerHTML","Math","floor","random","substring","subDS","subLi","appendChild","expandElement","innerElements","grpLI","elementID","href","anchorTag","document","createTextNode","moduleClass","isFullNavigation","anchorWrapper","uID","sanitize","blazId","removeBlazorID","innerDiv","liElement","generateIcon","dataItem","_a","field","dataField"],"mappings":"AAAA,SAASA,MAAT,EAAiBC,KAAjB,EAAwBC,iBAAxB,EAA2CC,QAA3C,QAA2D,sBAA3D;AACA,SAASC,UAAT,EAAqBC,OAArB,EAA8BC,SAA9B,EAAyCC,MAAzC,EAAiDC,QAAjD,QAAiE,sBAAjE;AACA,SAASC,OAAT,EAAkBC,kBAAlB,QAA4C,sBAA5C;AACA,SAASC,WAAT,EAAsBC,KAAtB,QAAmC,sBAAnC;AACA,OAAO,IAAIC,QAAQ,GAAG;AAClBC,EAAAA,EAAE,EAAE,aADc;AAElBC,EAAAA,EAAE,EAAE,oBAFc;AAGlBC,EAAAA,KAAK,EAAE,mBAHW;AAIlBC,EAAAA,IAAI,EAAE,aAJY;AAKlBC,EAAAA,IAAI,EAAE,aALY;AAMlBC,EAAAA,KAAK,EAAE,cANW;AAOlBC,EAAAA,OAAO,EAAE,WAPS;AAQlBC,EAAAA,QAAQ,EAAE,YARQ;AASlBC,EAAAA,QAAQ,EAAE,YATQ;AAUlBC,EAAAA,WAAW,EAAE,gBAVK;AAWlBC,EAAAA,QAAQ,EAAE,aAXQ;AAYlBC,EAAAA,KAAK,EAAE,SAZW;AAalBC,EAAAA,GAAG,EAAE,YAba;AAclBC,EAAAA,WAAW,EAAE,oBAdK;AAelBC,EAAAA,QAAQ,EAAE,YAfQ;AAgBlBC,EAAAA,KAAK,EAAE,YAhBW;AAiBlBC,EAAAA,WAAW,EAAE,gBAjBK;AAkBlBC,EAAAA,UAAU,EAAE;AAlBM,CAAf;AAoBP;;;;AAGA,OAAO,IAAIC,QAAJ;;AACP,CAAC,UAAUA,QAAV,EAAoB;AACjB;;;AAGAA,EAAAA,QAAQ,CAACC,mBAAT,GAA+B;AAC3BC,IAAAA,EAAE,EAAE,IADuB;AAE3BhB,IAAAA,IAAI,EAAE,MAFqB;AAG3BQ,IAAAA,GAAG,EAAE,KAHsB;AAI3BS,IAAAA,KAAK,EAAE,OAJoB;AAK3BC,IAAAA,SAAS,EAAE,WALgB;AAM3BC,IAAAA,OAAO,EAAE,SANkB;AAO3Bf,IAAAA,QAAQ,EAAE,UAPiB;AAQ3BD,IAAAA,QAAQ,EAAE,UARiB;AAS3BiB,IAAAA,OAAO,EAAE,SATkB;AAU3BC,IAAAA,KAAK,EAAE,OAVoB;AAW3BjC,IAAAA,SAAS,EAAE,WAXgB;AAY3BkC,IAAAA,WAAW,EAAE,aAZc;AAa3BC,IAAAA,OAAO,EAAE,SAbkB;AAc3BC,IAAAA,cAAc,EAAE,gBAdW;AAe3BC,IAAAA,aAAa,EAAE,eAfY;AAgB3BC,IAAAA,eAAe,EAAE,iBAhBU;AAiB3BC,IAAAA,QAAQ,EAAE,UAjBiB;AAkB3BC,IAAAA,OAAO,EAAE;AAlBkB,GAA/B;AAoBA,MAAIC,qBAAqB,GAAG;AACxBtB,IAAAA,KAAK,EAAE,CADiB;AAExBuB,IAAAA,QAAQ,EAAE,cAFc;AAGxBC,IAAAA,QAAQ,EAAE,cAHc;AAIxBC,IAAAA,aAAa,EAAE,OAJS;AAKxBC,IAAAA,QAAQ,EAAE,WALc;AAMxBC,IAAAA,WAAW,EAAE;AANW,GAA5B;AAQA,MAAIC,sBAAsB,GAAG;AACzBC,IAAAA,YAAY,EAAE,KADW;AAEzBC,IAAAA,QAAQ,EAAE,KAFe;AAGzBC,IAAAA,mBAAmB,EAAE,KAHI;AAIzBC,IAAAA,cAAc,EAAE,KAJS;AAKzBC,IAAAA,MAAM,EAAE1B,QAAQ,CAACC,mBALQ;AAMzB0B,IAAAA,cAAc,EAAEZ,qBANS;AAOzBa,IAAAA,SAAS,EAAE,EAPc;AAQzBC,IAAAA,SAAS,EAAE,EARc;AASzBC,IAAAA,eAAe,EAAE,KATQ;AAUzBC,IAAAA,SAAS,EAAE,MAVc;AAWzBC,IAAAA,QAAQ,EAAE,IAXe;AAYzBC,IAAAA,aAAa,EAAE,IAZU;AAazBC,IAAAA,cAAc,EAAE,IAbS;AAczBC,IAAAA,eAAe,EAAE,oBAdQ;AAezBC,IAAAA,UAAU,EAAE,MAfa;AAgBzBC,IAAAA,kBAAkB,EAAE,OAhBK;AAiBzBC,IAAAA,aAAa,EAAE;AAjBU,GAA7B;AAmBA;;;;;;AAKA,WAASC,UAAT,CAAoBC,aAApB,EAAmCC,UAAnC,EAA+CC,OAA/C,EAAwDC,aAAxD,EAAuE;AACnE,QAAIC,MAAM,GAAG5E,MAAM,CAAC,EAAD,EAAKqD,sBAAL,EAA6BqB,OAA7B,CAAnB;AACA,QAAIf,cAAc,GAAG3D,MAAM,CAAC,EAAD,EAAK+C,qBAAL,EAA4B6B,MAAM,CAACjB,cAAnC,CAA3B;AACA,QAAIkB,IAAI,GAAGC,UAAU,CAACL,UAAD,CAAV,CAAuBM,MAAlC;;AACA,QAAIF,IAAI,KAAK,QAAT,IAAqBA,IAAI,KAAK,QAAlC,EAA4C;AACxC,aAAOG,mBAAmB,CAACR,aAAD,EAAgBC,UAAhB,EAA4BE,aAA5B,EAA2CD,OAA3C,CAA1B;AACH,KAFD,MAGK;AACD,aAAOO,kBAAkB,CAACT,aAAD,EAAgBC,UAAhB,EAA4BC,OAA5B,EAAqCf,cAAc,CAAClC,KAApD,EAA2DkD,aAA3D,CAAzB;AACH;AACJ;;AACD3C,EAAAA,QAAQ,CAACuC,UAAT,GAAsBA,UAAtB;AACA;;;;;AAIA,WAASS,mBAAT,CAA6BR,aAA7B,EAA4CC,UAA5C,EAAwDE,aAAxD,EAAuED,OAAvE,EAAgF;AAC5E,QAAIQ,QAAQ,GAAGC,uBAAuB,CAACX,aAAD,EAAgBC,UAAhB,EAA4BE,aAA5B,EAA2CD,OAA3C,CAAtC;AACA,WAAOU,UAAU,CAACZ,aAAD,EAAgBU,QAAhB,EAA0B,IAA1B,EAAgCR,OAAhC,CAAjB;AACH;;AACD1C,EAAAA,QAAQ,CAACgD,mBAAT,GAA+BA,mBAA/B;AACA;;;;;AAIA,WAASG,uBAAT,CAAiCX,aAAjC,EAAgDC,UAAhD,EAA4DE,aAA5D,EAA2ED,OAA3E,EAAoF;AAChF,QAAIQ,QAAQ,GAAG,EAAf;AACA,QAAIN,MAAM,GAAG5E,MAAM,CAAC,EAAD,EAAKqD,sBAAL,EAA6BqB,OAA7B,CAAnB;AACA7D,IAAAA,QAAQ,GAAGwE,cAAc,CAACT,MAAM,CAACR,UAAR,CAAzB;AACA,QAAIlC,EAAE,GAAGoD,UAAU,EAAnB,CAJgF,CAIzD;;AACvB,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGd,UAAU,CAACe,MAA/B,EAAuCD,CAAC,EAAxC,EAA4C;AACxC,UAAIrF,iBAAiB,CAACuE,UAAU,CAACc,CAAD,CAAX,CAArB,EAAsC;AAClC;AACH;;AACD,UAAIzE,EAAE,GAAG,KAAK,CAAd;;AACA,UAAI8D,MAAM,CAACa,YAAP,IAAuB,OAAOb,MAAM,CAACa,YAAd,KAA+B,UAA1D,EAAsE;AAClE,YAAIC,OAAO,GAAG;AACVjB,UAAAA,UAAU,EAAEA,UADF;AAEViB,UAAAA,OAAO,EAAEjB,UAAU,CAACc,CAAD,CAFT;AAGVrE,UAAAA,IAAI,EAAEuD,UAAU,CAACc,CAAD,CAHN;AAIVb,UAAAA,OAAO,EAAEE;AAJC,SAAd;AAMAA,QAAAA,MAAM,CAACa,YAAP,CAAoBC,OAApB;AACH;;AACD,UAAIf,aAAJ,EAAmB;AACf7D,QAAAA,EAAE,GAAG6E,qBAAqB,CAACnB,aAAD,EAAgBC,UAAU,CAACc,CAAD,CAA1B,EAA+BK,SAA/B,EAA0C,IAA1C,EAAgD,IAAhD,EAAsD,EAAtD,EAA0D,IAA1D,EAAgE1D,EAAhE,EAAoEqD,CAApE,EAAuEb,OAAvE,CAA1B;AACH,OAFD,MAGK;AACD5D,QAAAA,EAAE,GAAG+E,UAAU,CAACrB,aAAD,EAAgBC,UAAU,CAACc,CAAD,CAA1B,EAA+BK,SAA/B,EAA0C,IAA1C,EAAgD,IAAhD,EAAsDlB,OAAtD,CAAf;AACH;;AACD,UAAIE,MAAM,CAACkB,WAAP,IAAsB,OAAOlB,MAAM,CAACkB,WAAd,KAA8B,UAAxD,EAAoE;AAChE,YAAIJ,OAAO,GAAG;AACVjB,UAAAA,UAAU,EAAEA,UADF;AAEViB,UAAAA,OAAO,EAAEjB,UAAU,CAACc,CAAD,CAFT;AAGVrE,UAAAA,IAAI,EAAEuD,UAAU,CAACc,CAAD,CAHN;AAIVQ,UAAAA,IAAI,EAAEjF,EAJI;AAKV4D,UAAAA,OAAO,EAAEE;AALC,SAAd;AAOAA,QAAAA,MAAM,CAACkB,WAAP,CAAmBJ,OAAnB;AACH;;AACDR,MAAAA,QAAQ,CAACc,IAAT,CAAclF,EAAd;AACH;;AACD,WAAOoE,QAAP;AACH;;AACDlD,EAAAA,QAAQ,CAACmD,uBAAT,GAAmCA,uBAAnC;AACA;;;;;AAKA;;AACA,WAASc,sBAAT,CAAgCzB,aAAhC,EAA+CC,UAA/C,EAA2DC,OAA3D,EAAoEjD,KAApE,EAA2EkD,aAA3E,EAA0F;AACtF,QAAIC,MAAM,GAAG5E,MAAM,CAAC,EAAD,EAAKqD,sBAAL,EAA6BqB,OAA7B,CAAnB;AACA7D,IAAAA,QAAQ,GAAGwE,cAAc,CAACT,MAAM,CAACR,UAAR,CAAzB;AACA,QAAIV,MAAM,GAAG1D,MAAM,CAAC,EAAD,EAAKgC,QAAQ,CAACC,mBAAd,EAAmC2C,MAAM,CAAClB,MAA1C,CAAnB;AACA,QAAIC,cAAc,GAAG3D,MAAM,CAAC,EAAD,EAAK+C,qBAAL,EAA4B6B,MAAM,CAACjB,cAAnC,CAA3B;AACA,QAAIzB,EAAJ;AACA,QAAIgE,eAAe,GAAG,EAAtB;;AACA,QAAIzE,KAAJ,EAAW;AACPkC,MAAAA,cAAc,CAAClC,KAAf,GAAuBA,KAAvB;AACH;;AACD,QAAIc,KAAK,GAAG,EAAZ;AACA,QAAIzB,EAAJ;;AACA,QAAI2D,UAAU,IAAIA,UAAU,CAACe,MAAzB,IAAmC,CAACtF,iBAAiB,CAAC4E,UAAU,CAACL,UAAD,CAAV,CAAuBsB,IAAxB,CAArD,IACA,CAACjB,UAAU,CAACL,UAAD,CAAV,CAAuBsB,IAAvB,CAA4BI,cAA5B,CAA2CzC,MAAM,CAACxB,EAAlD,CADL,EAC4D;AACxDA,MAAAA,EAAE,GAAGoD,UAAU,EAAf,CADwD,CACrC;AACtB;;AACD,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGd,UAAU,CAACe,MAA/B,EAAuCD,CAAC,EAAxC,EAA4C;AACxC,UAAIa,SAAS,GAAGC,cAAc,CAAC5B,UAAU,CAACc,CAAD,CAAX,EAAgB7B,MAAhB,CAA9B;;AACA,UAAIxD,iBAAiB,CAACuE,UAAU,CAACc,CAAD,CAAX,CAArB,EAAsC;AAClC;AACH;;AACD,UAAIX,MAAM,CAACa,YAAP,IAAuB,OAAOb,MAAM,CAACa,YAAd,KAA+B,UAA1D,EAAsE;AAClE,YAAIC,OAAO,GAAG;AACVjB,UAAAA,UAAU,EAAEA,UADF;AAEViB,UAAAA,OAAO,EAAEjB,UAAU,CAACc,CAAD,CAFT;AAGVrE,UAAAA,IAAI,EAAEkF,SAAS,CAAC1C,MAAM,CAACxC,IAAR,CAHL;AAIVwD,UAAAA,OAAO,EAAEE,MAJC;AAKVlB,UAAAA,MAAM,EAAEA;AALE,SAAd;AAOAkB,QAAAA,MAAM,CAACa,YAAP,CAAoBC,OAApB;AACH;;AACD,UAAIY,OAAO,GAAG7B,UAAU,CAACc,CAAD,CAAxB;;AACA,UAAIX,MAAM,CAACa,YAAP,IAAuB,OAAOb,MAAM,CAACa,YAAd,KAA+B,UAA1D,EAAsE;AAClEW,QAAAA,SAAS,GAAGC,cAAc,CAAC5B,UAAU,CAACc,CAAD,CAAX,EAAgB7B,MAAhB,CAA1B;AACH;;AACD,UAAI0C,SAAS,CAACD,cAAV,CAAyBzC,MAAM,CAACxB,EAAhC,KAAuC,CAAChC,iBAAiB,CAACkG,SAAS,CAAC1C,MAAM,CAACxB,EAAR,CAAV,CAA7D,EAAqF;AACjFA,QAAAA,EAAE,GAAGkE,SAAS,CAAC1C,MAAM,CAACxB,EAAR,CAAd;AACH;;AACD,UAAIqE,QAAQ,GAAG,EAAf;;AACA,UAAI3B,MAAM,CAACtB,YAAX,EAAyB;AACrB,YAAIsB,MAAM,CAACN,aAAP,KAAyB8B,SAAS,CAAC1C,MAAM,CAAChC,GAAR,CAAT,IAAyB0E,SAAS,CAAC1C,MAAM,CAACf,aAAR,CAA3D,CAAJ,EAAwF;AACpFuD,UAAAA,eAAe,CAACF,IAAhB,CAAqBxB,aAAa,CAAC,OAAD,EAAU;AAAEgC,YAAAA,SAAS,EAAE3F,QAAQ,CAACM,KAAtB;AAA6BsF,YAAAA,KAAK,EAAE;AAAE5B,cAAAA,IAAI,EAAE;AAAR;AAApC,WAAV,CAAlC;AACH,SAFD,MAGK;AACD0B,UAAAA,QAAQ,CAACP,IAAT,CAAcxB,aAAa,CAAC,OAAD,EAAU;AAAEgC,YAAAA,SAAS,EAAE3F,QAAQ,CAACM,KAAtB;AAA6BsF,YAAAA,KAAK,EAAE;AAAE5B,cAAAA,IAAI,EAAE;AAAR;AAApC,WAAV,CAA3B;AACH;AACJ;;AACD,UAAIF,aAAa,KAAK,IAAtB,EAA4B;AACxB,YAAIC,MAAM,CAACrB,QAAP,IAAmB6C,SAAS,CAACD,cAAV,CAAyBzC,MAAM,CAACpB,OAAhC,CAAnB,IAA+D,CAACpC,iBAAiB,CAACkG,SAAS,CAAC1C,MAAM,CAACpB,OAAR,CAAV,CAArF,EAAkH;AAC9GiE,UAAAA,QAAQ,CAACP,IAAT,CAAcxB,aAAa,CAAC,MAAD,EAAS;AAAEgC,YAAAA,SAAS,EAAE3F,QAAQ,CAACI,IAAT,GAAgB,GAAhB,GAAsBmF,SAAS,CAAC1C,MAAM,CAACpB,OAAR;AAA5C,WAAT,CAA3B;AACH;;AACDxB,QAAAA,EAAE,GAAG6E,qBAAqB,CAACnB,aAAD,EAAgB8B,OAAhB,EAAyBF,SAAzB,EAAoC1C,MAApC,EAA4CkB,MAAM,CAACf,SAAnD,EAA8D0C,QAA9D,EAAyED,OAAO,CAACH,cAAR,CAAuB,UAAvB,KAC/FG,OAAO,CAACI,QADsF,GAC1E,IAD0E,GACnE,KADL,EACYxE,EADZ,EACgBqD,CADhB,EACmBb,OADnB,CAA1B;;AAEA,YAAIE,MAAM,CAACN,aAAP,IAAwB4B,eAAe,CAACV,MAA5C,EAAoD;AAChDnF,UAAAA,OAAO,CAAC6F,eAAD,EAAkBpF,EAAE,CAAC6F,iBAArB,CAAP;AACH;AACJ,OATD,MAUK;AACD7F,QAAAA,EAAE,GAAG+E,UAAU,CAACrB,aAAD,EAAgB8B,OAAhB,EAAyBF,SAAzB,EAAoC1C,MAApC,EAA4CkB,MAAM,CAACf,SAAnD,EAA8Da,OAA9D,CAAf;AACA5D,QAAAA,EAAE,CAAC8F,SAAH,CAAaC,GAAb,CAAiBhG,QAAQ,CAACY,KAAT,GAAiB,GAAjB,GAAuBkC,cAAc,CAAClC,KAAvD;AACAX,QAAAA,EAAE,CAACgG,YAAH,CAAgB,YAAhB,EAA8BnD,cAAc,CAAClC,KAAf,CAAqBsF,QAArB,EAA9B;;AACA,YAAIX,SAAS,CAACD,cAAV,CAAyBzC,MAAM,CAACjB,OAAhC,CAAJ,EAA8C;AAC1C3B,UAAAA,EAAE,CAACgG,YAAH,CAAgB,OAAhB,EAAyBV,SAAS,CAAC1C,MAAM,CAACjB,OAAR,CAAlC;AACH;;AACD,YAAI2D,SAAS,CAACD,cAAV,CAAyBzC,MAAM,CAAChB,cAAhC,KAAmD0D,SAAS,CAAC1C,MAAM,CAAChB,cAAR,CAAhE,EAAyF;AACrFoE,UAAAA,YAAY,CAAChG,EAAD,EAAKsF,SAAS,CAAC1C,MAAM,CAAChB,cAAR,CAAd,CAAZ;AACH;;AACD,YAAI0D,SAAS,CAACD,cAAV,CAAyBzC,MAAM,CAACrB,OAAhC,KAA4C+D,SAAS,CAAC1C,MAAM,CAACrB,OAAR,CAAT,KAA8B,KAA9E,EAAqF;AACjFvB,UAAAA,EAAE,CAAC8F,SAAH,CAAaC,GAAb,CAAiBhG,QAAQ,CAACe,QAA1B;AACH;;AACD,YAAIwE,SAAS,CAACD,cAAV,CAAyBzC,MAAM,CAACpD,SAAhC,KAA8C8F,SAAS,CAAC1C,MAAM,CAACpD,SAAR,CAAT,KAAgC,KAAlF,EAAyF;AACrFQ,UAAAA,EAAE,CAACkG,KAAH,CAASC,OAAT,GAAmB,MAAnB;AACH;;AACD,YAAIb,SAAS,CAACD,cAAV,CAAyBzC,MAAM,CAACb,QAAhC,KAA6C,CAAC3C,iBAAiB,CAACkG,SAAS,CAAC1C,MAAM,CAACb,QAAR,CAAV,CAA/D,IACG,CAAC+B,MAAM,CAACZ,QADf,EACyB;AACrB,cAAIkD,IAAI,GAAG;AAAEC,YAAAA,GAAG,EAAEf,SAAS,CAAC1C,MAAM,CAACb,QAAR;AAAhB,WAAX;AACA5C,UAAAA,KAAK,CAACiH,IAAD,EAAOd,SAAS,CAAC1C,MAAM,CAACd,eAAR,CAAhB,CAAL;AACAvC,UAAAA,OAAO,CAAC,CAACmE,aAAa,CAAC,KAAD,EAAQ;AAAEgC,YAAAA,SAAS,EAAE3F,QAAQ,CAACgB,KAAtB;AAA6B4E,YAAAA,KAAK,EAAES;AAApC,WAAR,CAAd,CAAD,EAAqEpG,EAAE,CAAC6F,iBAAxE,CAAP;AACH;;AACD,YAAI/B,MAAM,CAACrB,QAAP,IAAmB6C,SAAS,CAACD,cAAV,CAAyBzC,MAAM,CAACpB,OAAhC,CAAnB,IACA,CAACpC,iBAAiB,CAACkG,SAAS,CAAC1C,MAAM,CAACpB,OAAR,CAAV,CADlB,IACiD,CAACsC,MAAM,CAACZ,QAD7D,EACuE;AACnE3D,UAAAA,OAAO,CAAC,CAACmE,aAAa,CAAC,KAAD,EAAQ;AAAEgC,YAAAA,SAAS,EAAE3F,QAAQ,CAACI,IAAT,GAAgB,GAAhB,GAAsBmF,SAAS,CAAC1C,MAAM,CAACpB,OAAR;AAA5C,WAAR,CAAd,CAAD,EAAyFxB,EAAE,CAAC6F,iBAA5F,CAAP;AACH;;AACD,YAAIJ,QAAQ,CAACf,MAAb,EAAqB;AACjBnF,UAAAA,OAAO,CAACkG,QAAD,EAAWzF,EAAE,CAAC6F,iBAAd,CAAP;AACH;;AACD,YAAI/B,MAAM,CAACN,aAAP,IAAwB4B,eAAe,CAACV,MAA5C,EAAoD;AAChDnF,UAAAA,OAAO,CAAC6F,eAAD,EAAkBpF,EAAE,CAAC6F,iBAArB,CAAP;AACH;;AACD7C,QAAAA,eAAe,CAACU,aAAD,EAAgB4B,SAAhB,EAA2B1C,MAA3B,EAAmCe,UAAnC,EAA+CG,MAA/C,EAAuD9D,EAAvD,EAA2D6C,cAAc,CAAClC,KAA1E,CAAf;AACH;;AACD,UAAImD,MAAM,CAACkB,WAAP,IAAsB,OAAOlB,MAAM,CAACkB,WAAd,KAA8B,UAAxD,EAAoE;AAChE,YAAIJ,OAAO,GAAG;AACVjB,UAAAA,UAAU,EAAEA,UADF;AAEViB,UAAAA,OAAO,EAAEjB,UAAU,CAACc,CAAD,CAFT;AAGVrE,UAAAA,IAAI,EAAEkF,SAAS,CAAC1C,MAAM,CAACxC,IAAR,CAHL;AAIV6E,UAAAA,IAAI,EAAEjF,EAJI;AAKV4D,UAAAA,OAAO,EAAEE,MALC;AAMVlB,UAAAA,MAAM,EAAEA;AANE,SAAd;AAQAkB,QAAAA,MAAM,CAACkB,WAAP,CAAmBJ,OAAnB;AACH;;AACDQ,MAAAA,eAAe,GAAG,EAAlB;AACA3D,MAAAA,KAAK,CAACyD,IAAN,CAAWlF,EAAX;AACH;;AACD,WAAOyB,KAAP;AACH;;AACDP,EAAAA,QAAQ,CAACiE,sBAAT,GAAkCA,sBAAlC;AACA;;;;;;AAKA,WAAShB,kBAAT,CAA4BT,aAA5B,EAA2CC,UAA3C,EAAuDC,OAAvD,EAAgEjD,KAAhE,EAAuEkD,aAAvE,EAAsF;AAClF,QAAIC,MAAM,GAAG5E,MAAM,CAAC,EAAD,EAAKqD,sBAAL,EAA6BqB,OAA7B,CAAnB;AACA,QAAI5D,EAAE,GAAGmF,sBAAsB,CAACzB,aAAD,EAAgBC,UAAhB,EAA4BC,OAA5B,EAAqCjD,KAArC,EAA4CkD,aAA5C,CAA/B;AACA,WAAOS,UAAU,CAACZ,aAAD,EAAgB1D,EAAhB,EAAoB8D,MAAM,CAAChB,SAA3B,EAAsCc,OAAtC,CAAjB;AACH;;AACD1C,EAAAA,QAAQ,CAACiD,kBAAT,GAA8BA,kBAA9B;AACA;;;;;;;AAMA,WAASmC,YAAT,CAAsBC,YAAtB,EAAoCC,OAApC,EAA6CC,UAA7C,EAAyD;AACrD1G,IAAAA,QAAQ,GAAGwE,cAAc,CAAChC,sBAAsB,CAACe,UAAxB,CAAzB;;AACA,QAAI,CAACiD,YAAD,IAAiB,CAACA,YAAY,CAAC7B,MAAnC,EAA2C;AACvC,aAAO,KAAK,CAAZ;AACH;;AACD,QAAIgC,SAAJ;AACA,QAAIC,OAAJ;AACA,QAAIC,aAAa,GAAGC,KAAK,CAACC,SAAN,CAAgBC,KAAhB,CAAsBC,IAAtB,CAA2BT,YAA3B,CAApB;;AACA,QAAIC,OAAJ,EAAa;AACTG,MAAAA,OAAO,GAAGM,OAAO,CAACT,OAAD,EAAUI,aAAV,CAAjB;AACH,KAFD,MAGK;AACDD,MAAAA,OAAO,GAAIF,UAAU,KAAK,IAAf,GAAsBG,aAAa,CAAClC,MAApC,GAA6C,CAAC,CAAzD;AACH;;AACDgC,IAAAA,SAAS,GAAGE,aAAa,CAACD,OAAO,IAAIF,UAAU,KAAK,IAAf,GAAsB,CAAC,CAAvB,GAA2B,CAA/B,CAAR,CAAzB;;AACA,WAAOC,SAAS,KAAK,CAAClH,SAAS,CAACkH,SAAD,CAAV,IAAyBA,SAAS,CAACZ,SAAV,CAAoBoB,QAApB,CAA6BnH,QAAQ,CAACe,QAAtC,CAA9B,CAAhB,EAAgG;AAC5F6F,MAAAA,OAAO,GAAGA,OAAO,IAAIF,UAAU,KAAK,IAAf,GAAsB,CAAC,CAAvB,GAA2B,CAA/B,CAAjB;AACAC,MAAAA,SAAS,GAAGE,aAAa,CAACD,OAAD,CAAzB;AACH;;AACD,WAAOD,SAAP;AACH;;AACDxF,EAAAA,QAAQ,CAACoF,YAAT,GAAwBA,YAAxB;AACA;;;;;;AAKA,WAASW,OAAT,CAAiBhC,IAAjB,EAAuBsB,YAAvB,EAAqC;AACjC,QAAI,CAACA,YAAD,IAAiB,CAACtB,IAAtB,EAA4B;AACxB,aAAO,KAAK,CAAZ;AACH,KAFD,MAGK;AACD,UAAI2B,aAAa,GAAGL,YAApB;AACAK,MAAAA,aAAa,GAAGC,KAAK,CAACC,SAAN,CAAgBC,KAAhB,CAAsBC,IAAtB,CAA2BT,YAA3B,CAAhB;AACA,aAAOK,aAAa,CAACK,OAAd,CAAsBhC,IAAtB,CAAP;AACH;AACJ;;AACD/D,EAAAA,QAAQ,CAAC+F,OAAT,GAAmBA,OAAnB;AACA;;;;;;;AAMA,WAASE,eAAT,CAAyBxD,UAAzB,EAAqCf,MAArC,EAA6CK,SAA7C,EAAwD;AACpD,QAAIA,SAAS,KAAK,KAAK,CAAvB,EAA0B;AAAEA,MAAAA,SAAS,GAAG,MAAZ;AAAqB;;AACjD,QAAImE,SAAS,GAAGlI,MAAM,CAAC,EAAD,EAAKgC,QAAQ,CAACC,mBAAd,EAAmCyB,MAAnC,CAAtB;AACA,QAAIyE,QAAQ,GAAG,IAAIvH,KAAJ,GAAYI,KAAZ,CAAkBkH,SAAS,CAACpF,OAA5B,CAAf,CAHoD,CAIpD;;AACAqF,IAAAA,QAAQ,GAAGC,UAAU,CAACrE,SAAD,EAAY,KAAZ,EAAmBoE,QAAnB,CAArB;AACA,QAAIE,EAAE,GAAGC,aAAa,CAAC7D,UAAD,EAAa0D,QAAb,CAAtB;AACA1D,IAAAA,UAAU,GAAG,EAAb;;AACA,SAAK,IAAI8D,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,EAAE,CAAC7C,MAAvB,EAA+B+C,CAAC,EAAhC,EAAoC;AAChC,UAAIC,OAAO,GAAGH,EAAE,CAACE,CAAD,CAAF,CAAME,KAApB;AACA,UAAIC,OAAO,GAAG,EAAd;AACA,UAAIC,GAAG,GAAG,UAAV;AACAD,MAAAA,OAAO,CAACR,SAAS,CAAChH,IAAX,CAAP,GAA0BmH,EAAE,CAACE,CAAD,CAAF,CAAMK,GAAhC;AACAF,MAAAA,OAAO,CAACC,GAAD,CAAP,GAAe,IAAf;AACAD,MAAAA,OAAO,CAACxG,EAAR,GAAa,sBAAsBmG,EAAE,CAACE,CAAD,CAAF,CAAMK,GAAN,GAC/BP,EAAE,CAACE,CAAD,CAAF,CAAMK,GAAN,CAAU7B,QAAV,GAAqB8B,IAArB,EAD+B,GACD,WADrB,CAAb;AAEAH,MAAAA,OAAO,CAACD,KAAR,GAAgBD,OAAhB;AACA/D,MAAAA,UAAU,CAACuB,IAAX,CAAgB0C,OAAhB;;AACA,WAAK,IAAII,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGN,OAAO,CAAChD,MAA5B,EAAoCsD,CAAC,EAArC,EAAyC;AACrCrE,QAAAA,UAAU,CAACuB,IAAX,CAAgBwC,OAAO,CAACM,CAAD,CAAvB;AACH;AACJ;;AACD,WAAOrE,UAAP;AACH;;AACDzC,EAAAA,QAAQ,CAACiG,eAAT,GAA2BA,eAA3B;AACA;;;;;;;AAMA,WAASG,UAAT,CAAoBrE,SAApB,EAA+BgF,MAA/B,EAAuCC,KAAvC,EAA8C;AAC1C,QAAIA,KAAK,KAAK,KAAK,CAAnB,EAAsB;AAAEA,MAAAA,KAAK,GAAG,IAAIpI,KAAJ,EAAR;AAAsB;;AAC9C,QAAImD,SAAS,KAAK,WAAlB,EAA+B;AAC3BiF,MAAAA,KAAK,CAACD,MAAN,CAAaA,MAAb,EAAqB,WAArB,EAAkC,IAAlC;AACH,KAFD,MAGK,IAAIhF,SAAS,KAAK,YAAlB,EAAgC;AACjCiF,MAAAA,KAAK,CAACD,MAAN,CAAaA,MAAb,EAAqB,YAArB,EAAmC,IAAnC;AACH,KAFI,MAGA;AACD,WAAK,IAAIxD,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGyD,KAAK,CAACC,OAAN,CAAczD,MAAlC,EAA0CD,CAAC,EAA3C,EAA+C;AAC3C,YAAIyD,KAAK,CAACC,OAAN,CAAc1D,CAAd,EAAiB2D,EAAjB,KAAwB,UAA5B,EAAwC;AACpCF,UAAAA,KAAK,CAACC,OAAN,CAAcE,MAAd,CAAqB5D,CAArB,EAAwB,CAAxB;AACH;AACJ;AACJ;;AACD,WAAOyD,KAAP;AACH;;AACDhH,EAAAA,QAAQ,CAACoG,UAAT,GAAsBA,UAAtB;AACA;;;;;;AAKA,WAASE,aAAT,CAAuB7D,UAAvB,EAAmCuE,KAAnC,EAA0C;AACtC;AACA,WAAO,IAAIrI,WAAJ,CAAgB8D,UAAhB,EACF2E,YADE,CACWJ,KADX,CAAP;AAEH;;AACDhH,EAAAA,QAAQ,CAACsG,aAAT,GAAyBA,aAAzB;AACA;;;;;;AAKA,WAASe,qBAAT,CAA+B/B,OAA/B,EAAwC5C,OAAxC,EAAiD;AAC7C,QAAIE,MAAM,GAAG5E,MAAM,CAAC,EAAD,EAAKqD,sBAAL,EAA6BqB,OAA7B,CAAnB;AACA,QAAIhB,MAAM,GAAG1D,MAAM,CAAC,EAAD,EAAKgC,QAAQ,CAACC,mBAAd,EAAmC2C,MAAM,CAAClB,MAA1C,CAAnB;AACA,QAAI4F,MAAM,GAAGhC,OAAO,CAACiC,SAAR,CAAkB,IAAlB,CAAb;AACA,QAAIC,MAAM,GAAG,EAAb;AACAF,IAAAA,MAAM,CAAC1C,SAAP,CAAiBC,GAAjB,CAAqB,aAArB;AACA,QAAI4C,MAAM,GAAGH,MAAM,CAACI,gBAAP,CAAwB,iBAAxB,CAAb;AACAJ,IAAAA,MAAM,CAAC1C,SAAP,CAAiB+C,MAAjB,CAAwB,aAAxB;;AACA,SAAK,IAAIpE,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGkE,MAAM,CAACjE,MAA3B,EAAmCD,CAAC,EAApC,EAAwC;AACpC,UAAIzE,EAAE,GAAG2I,MAAM,CAAClE,CAAD,CAAf;AACA,UAAIqE,MAAM,GAAG9I,EAAE,CAAC+I,aAAH,CAAiB,GAAjB,CAAb;AACA,UAAI9I,EAAE,GAAGD,EAAE,CAAC+I,aAAH,CAAiB,IAAjB,CAAT;AACA,UAAIC,IAAI,GAAG,EAAX;AACA,UAAIC,UAAU,GAAGH,MAAM,GAAGA,MAAM,CAACG,UAAV,GAAuBjJ,EAAE,CAACiJ,UAAjD;AACA,UAAIC,IAAI,GAAGC,MAAM,CAACD,IAAP,CAAYD,UAAZ,CAAX;;AACA,WAAK,IAAIG,GAAG,GAAG,CAAf,EAAkBA,GAAG,GAAGH,UAAU,CAACvE,MAAnC,EAA2C0E,GAAG,EAA9C,EAAkD;AAC9C,YAAI,CAAEH,UAAU,CAACI,MAAM,CAACH,IAAI,CAACE,GAAD,CAAL,CAAP,CAAX,CAAgCE,aAAhC,EAAL,EAAsD;AAClDN,UAAAA,IAAI,CAACpG,MAAM,CAACxC,IAAR,CAAJ,GAAoB6I,UAAU,CAACI,MAAM,CAACH,IAAI,CAACE,GAAD,CAAL,CAAP,CAAV,CAA8B3I,WAAlD;AACH;AACJ;;AACD,UAAI8I,YAAY,GAAGC,gBAAgB,CAACxJ,EAAD,CAAnC;;AACA,UAAIuJ,YAAY,CAACnI,EAAjB,EAAqB;AACjB4H,QAAAA,IAAI,CAACpG,MAAM,CAACxB,EAAR,CAAJ,GAAkBmI,YAAY,CAACnI,EAA/B;AACA,eAAOmI,YAAY,CAACnI,EAApB;AACH,OAHD,MAIK;AACD4H,QAAAA,IAAI,CAACpG,MAAM,CAACxB,EAAR,CAAJ,GAAkBoD,UAAU,EAA5B;AACH;;AACD,UAAI2E,MAAM,CAACD,IAAP,CAAYK,YAAZ,EAA0B7E,MAA9B,EAAsC;AAClCsE,QAAAA,IAAI,CAACpG,MAAM,CAAChB,cAAR,CAAJ,GAA8B2H,YAA9B;AACH;;AACD,UAAIT,MAAJ,EAAY;AACRS,QAAAA,YAAY,GAAGC,gBAAgB,CAACV,MAAD,CAA/B;;AACA,YAAIK,MAAM,CAACD,IAAP,CAAYK,YAAZ,EAA0B7E,MAA9B,EAAsC;AAClCsE,UAAAA,IAAI,CAACpG,MAAM,CAACf,aAAR,CAAJ,GAA6B0H,YAA7B;AACH;AACJ;;AACD,UAAItJ,EAAJ,EAAQ;AACJ+I,QAAAA,IAAI,CAACpG,MAAM,CAACnB,KAAR,CAAJ,GAAqB8G,qBAAqB,CAACtI,EAAD,EAAK2D,OAAL,CAA1C;AACH;;AACD8E,MAAAA,MAAM,CAACxD,IAAP,CAAY8D,IAAZ;AACH;;AACD,WAAON,MAAP;AACH;;AACDxH,EAAAA,QAAQ,CAACqH,qBAAT,GAAiCA,qBAAjC;;AACA,WAASvE,UAAT,CAAoByF,IAApB,EAA0B;AACtB,QAAIC,KAAK,GAAG;AAAEzF,MAAAA,MAAM,EAAE,IAAV;AAAgBgB,MAAAA,IAAI,EAAE;AAAtB,KAAZ;;AACA,SAAK,IAAIR,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGgF,IAAI,CAAC/E,MAAzB,EAAiCD,CAAC,EAAlC,EAAsC;AAClC,UAAI,CAACrF,iBAAiB,CAACqK,IAAI,CAAChF,CAAD,CAAL,CAAtB,EAAiC;AAC7B,eAAOiF,KAAK,GAAG;AAAEzF,UAAAA,MAAM,EAAE,OAAOwF,IAAI,CAAChF,CAAD,CAArB;AAA0BQ,UAAAA,IAAI,EAAEwE,IAAI,CAAChF,CAAD;AAApC,SAAf;AACH;AACJ;;AACD,WAAOiF,KAAP;AACH;;AACD,WAAS1D,YAAT,CAAsBQ,OAAtB,EAA+BmD,iBAA/B,EAAkD;AAC9C,QAAIvD,IAAI,GAAG,EAAX;AACAjH,IAAAA,KAAK,CAACiH,IAAD,EAAOuD,iBAAP,CAAL;;AACA,QAAIvD,IAAI,CAACwD,KAAT,EAAgB;AACZlK,MAAAA,QAAQ,CAAC,CAAC8G,OAAD,CAAD,EAAYJ,IAAI,CAACwD,KAAL,CAAWC,KAAX,CAAiB,GAAjB,CAAZ,CAAR;AACA,aAAOzD,IAAI,CAACwD,KAAZ;AACH;;AACDtK,IAAAA,UAAU,CAACkH,OAAD,EAAUJ,IAAV,CAAV;AACH;;AACD,WAASoD,gBAAT,CAA0BhD,OAA1B,EAAmC;AAC/B,QAAIlH,UAAU,GAAG,EAAjB;AACA,QAAI8G,IAAI,GAAGI,OAAO,CAAClH,UAAnB;;AACA,SAAK,IAAIwK,KAAK,GAAG,CAAjB,EAAoBA,KAAK,GAAG1D,IAAI,CAAC1B,MAAjC,EAAyCoF,KAAK,EAA9C,EAAkD;AAC9CxK,MAAAA,UAAU,CAAC8G,IAAI,CAAC0D,KAAD,CAAJ,CAAYC,QAAb,CAAV,GAAmC3D,IAAI,CAAC0D,KAAD,CAAJ,CAAYE,SAA/C;AACH;;AACD,WAAO1K,UAAP;AACH;AACD;;;;;;;;AAMA,WAAS2K,qBAAT,CAA+BvG,aAA/B,EAA8CR,QAA9C,EAAwDS,UAAxD,EAAoEf,MAApE,EAA4EgB,OAA5E,EAAqF;AACjF7D,IAAAA,QAAQ,GAAGwE,cAAc,CAAChC,sBAAsB,CAACe,UAAxB,CAAzB;AACA,QAAI4G,SAAS,GAAGxG,aAAa,CAAC,IAAD,EAAO;AAAEgC,MAAAA,SAAS,EAAE3F,QAAQ,CAACE,EAAtB;AAA0B0F,MAAAA,KAAK,EAAE;AAAEwE,QAAAA,IAAI,EAAE;AAAR;AAAjC,KAAP,CAA7B;AACA,QAAIrG,MAAM,GAAG5E,MAAM,CAAC,EAAD,EAAKqD,sBAAL,EAA6BqB,OAA7B,CAAnB;AACA,QAAIwD,SAAS,GAAGlI,MAAM,CAAC,EAAD,EAAKgC,QAAQ,CAACC,mBAAd,EAAmCyB,MAAnC,CAAtB;AACA,QAAIwH,cAAc,GAAGzK,OAAO,CAACuD,QAAD,CAA5B;AACA,QAAImH,YAAY,GAAG,EAAnB;AACA,QAAIjJ,EAAE,GAAGoD,UAAU,EAAnB,CAPiF,CAO1D;;AACvB,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGd,UAAU,CAACe,MAA/B,EAAuCD,CAAC,EAAxC,EAA4C;AACxC,UAAIa,SAAS,GAAGC,cAAc,CAAC5B,UAAU,CAACc,CAAD,CAAX,EAAgB2C,SAAhB,CAA9B;AACA,UAAI5B,OAAO,GAAG7B,UAAU,CAACc,CAAD,CAAxB;AACA,UAAImB,QAAQ,GAAGJ,OAAO,CAACI,QAAvB;AACA,UAAIvE,KAAK,GAAGiE,SAAS,CAAC8B,SAAS,CAAC/F,KAAX,CAArB;;AACA,UAAIyC,MAAM,CAACa,YAAP,IAAuB,OAAOb,MAAM,CAACa,YAAd,KAA+B,UAA1D,EAAsE;AAClE,YAAIC,OAAO,GAAG;AACVjB,UAAAA,UAAU,EAAEA,UADF;AAEViB,UAAAA,OAAO,EAAEY,OAFC;AAGVpF,UAAAA,IAAI,EAAEiB,KAHI;AAIVuC,UAAAA,OAAO,EAAEE,MAJC;AAKVlB,UAAAA,MAAM,EAAEwE;AALE,SAAd;AAOAtD,QAAAA,MAAM,CAACa,YAAP,CAAoBC,OAApB;AACH;;AACD,UAAId,MAAM,CAACa,YAAP,IAAuB,OAAOb,MAAM,CAACa,YAAd,KAA+B,UAA1D,EAAsE;AAClEW,QAAAA,SAAS,GAAGC,cAAc,CAAC5B,UAAU,CAACc,CAAD,CAAX,EAAgB2C,SAAhB,CAA1B;AACA/F,QAAAA,KAAK,GAAGiE,SAAS,CAAC8B,SAAS,CAAC/F,KAAX,CAAjB;AACH;;AACD,UAAIrB,EAAE,GAAG0D,aAAa,CAAC,IAAD,EAAO;AACzBtC,QAAAA,EAAE,EAAEA,EAAE,GAAG,GAAL,GAAWqD,CADU;AAEzBiB,QAAAA,SAAS,EAAEE,QAAQ,GAAG7F,QAAQ,CAACG,KAAZ,GAAoBH,QAAQ,CAACC,EAFvB;AAE2B2F,QAAAA,KAAK,EAAE;AAAEwE,UAAAA,IAAI,EAAE;AAAR;AAFlC,OAAP,CAAtB;;AAIA,UAAIvE,QAAJ,EAAc;AACV5F,QAAAA,EAAE,CAACsK,SAAH,GAAehF,SAAS,CAAC8B,SAAS,CAAChH,IAAX,CAAxB;AACH,OAFD,MAGK;AACD,YAAImK,SAAS,GAAG3E,QAAQ,GAAG9B,MAAM,CAAC0G,eAAV,GAA4B1G,MAAM,CAAC2G,UAA3D;AACAhL,QAAAA,MAAM,CAAC2K,cAAc,CAAC5E,OAAD,EAAU,IAAV,EAAgB,IAAhB,EAAsB+E,SAAtB,EAAiC,CAAC,CAACzG,MAAM,CAAC4G,gBAA1C,CAAf,EAA4E1K,EAA5E,CAAN;AACAA,QAAAA,EAAE,CAACgG,YAAH,CAAgB,YAAhB,EAA8B3E,KAA9B;AACArB,QAAAA,EAAE,CAACgG,YAAH,CAAgB,MAAhB,EAAwB,QAAxB;AACH;;AACD,UAAIlC,MAAM,CAACkB,WAAP,IAAsB,OAAOlB,MAAM,CAACkB,WAAd,KAA8B,UAAxD,EAAoE;AAChE,YAAIJ,OAAO,GAAG;AACVjB,UAAAA,UAAU,EAAEA,UADF;AAEViB,UAAAA,OAAO,EAAEY,OAFC;AAGVpF,UAAAA,IAAI,EAAEiB,KAHI;AAIV4D,UAAAA,IAAI,EAAEjF,EAJI;AAKV4D,UAAAA,OAAO,EAAEE,MALC;AAMVlB,UAAAA,MAAM,EAAEwE;AANE,SAAd;AAQAtD,QAAAA,MAAM,CAACkB,WAAP,CAAmBJ,OAAnB;AACH;;AACDyF,MAAAA,YAAY,CAACnF,IAAb,CAAkBlF,EAAlB;AACH;;AACDP,IAAAA,MAAM,CAAC4K,YAAD,EAAeH,SAAf,CAAN;AACA,WAAOA,SAAP;AACH;;AACDhJ,EAAAA,QAAQ,CAAC+I,qBAAT,GAAiCA,qBAAjC;AACA;;;;;;;;AAOA,WAASU,mBAAT,CAA6BxH,aAA7B,EAA4CgE,eAA5C,EAA6DvE,MAA7D,EAAqEgI,WAArE,EAAkFhH,OAAlF,EAA2F;AACvF,QAAIwG,cAAc,GAAGzK,OAAO,CAACwD,aAAD,CAA5B;AACA,QAAIiE,SAAS,GAAGlI,MAAM,CAAC,EAAD,EAAKgC,QAAQ,CAACC,mBAAd,EAAmCyB,MAAnC,CAAtB;AACA,QAAIkB,MAAM,GAAG5E,MAAM,CAAC,EAAD,EAAKqD,sBAAL,EAA6BqB,OAA7B,CAAnB;AACA,QAAIiH,QAAQ,GAAGzD,SAAS,CAACpF,OAAzB;;AACA,SAAK,IAAI8I,EAAE,GAAG,CAAT,EAAYC,aAAa,GAAGH,WAAjC,EAA8CE,EAAE,GAAGC,aAAa,CAACrG,MAAjE,EAAyEoG,EAAE,EAA3E,EAA+E;AAC3E,UAAIE,MAAM,GAAGD,aAAa,CAACD,EAAD,CAA1B;AACA,UAAIG,UAAU,GAAG,EAAjB;AACAA,MAAAA,UAAU,CAACJ,QAAD,CAAV,GAAuBG,MAAM,CAACvK,WAA9B;AACAuK,MAAAA,MAAM,CAACE,SAAP,GAAmB,EAAnB;AACAzL,MAAAA,MAAM,CAAC2K,cAAc,CAACa,UAAD,EAAa,IAAb,EAAmB,IAAnB,EAAyBnH,MAAM,CAAC0G,eAAhC,EAAiD,CAAC,CAAC1G,MAAM,CAAC4G,gBAA1D,CAAf,EAA4FM,MAA5F,CAAN;AACH;;AACD,WAAOJ,WAAP;AACH;;AACD1J,EAAAA,QAAQ,CAACyJ,mBAAT,GAA+BA,mBAA/B;;AACA,WAASnG,UAAT,GAAsB;AAClB,WAAO2G,IAAI,CAACC,KAAL,CAAW,CAAC,IAAID,IAAI,CAACE,MAAL,EAAL,IAAsB,OAAjC,EACFpF,QADE,CACO,EADP,EAEFqF,SAFE,CAEQ,CAFR,CAAP;AAGH;;AACDpK,EAAAA,QAAQ,CAACsD,UAAT,GAAsBA,UAAtB;;AACA,WAASxB,eAAT,CAAyBU,aAAzB,EAAwC4B,SAAxC,EAAmD1C,MAAnD,EAA2D2E,EAA3D,EAA+D3D,OAA/D,EAAwE4C,OAAxE,EAAiF7F,KAAjF,EAAwF;AACpF;AACA,QAAI4K,KAAK,GAAGjG,SAAS,CAAC1C,MAAM,CAACnB,KAAR,CAAT,IAA2B,EAAvC;AACA,QAAIC,WAAW,GAAG4D,SAAS,CAAC1C,MAAM,CAAClB,WAAR,CAA3B,CAHoF,CAIpF;;AACA,QAAI6J,KAAK,CAAC7G,MAAV,EAAkB;AACdhD,MAAAA,WAAW,GAAG,IAAd;AACA8E,MAAAA,OAAO,CAACV,SAAR,CAAkBC,GAAlB,CAAsBhG,QAAQ,CAACW,QAA/B;;AACA,UAAIkD,OAAO,CAACZ,eAAZ,EAA6B;AACzB,YAAIwI,KAAK,GAAGrH,kBAAkB,CAACT,aAAD,EAAgB6H,KAAhB,EAAuB3H,OAAvB,EAAgC,EAAEjD,KAAlC,CAA9B;AACA6F,QAAAA,OAAO,CAACiF,WAAR,CAAoBD,KAApB;AACH;AACJ,KAZmF,CAapF;;;AACA,QAAI,CAAC,CAAC5H,OAAO,CAACjB,cAAV,IAA4BjB,WAA5B,IAA2C,CAACkC,OAAO,CAACV,QAAxD,EAAkE;AAC9DsD,MAAAA,OAAO,CAACX,iBAAR,CAA0BC,SAA1B,CAAoCC,GAApC,CAAwChG,QAAQ,CAACiB,WAAjD;AACA,UAAI0K,aAAa,GAAG9H,OAAO,CAACL,kBAAR,KAA+B,MAA/B,GAAwChE,OAAxC,GAAkDE,MAAtE;AACAiM,MAAAA,aAAa,CAAC,CAAChI,aAAa,CAAC,KAAD,EAAQ;AAAEgC,QAAAA,SAAS,EAAE,aAAa9B,OAAO,CAACP;AAAlC,OAAR,CAAd,CAAD,EAA8EmD,OAAO,CAACuC,aAAR,CAAsB,MAAMhJ,QAAQ,CAACU,WAArC,CAA9E,CAAb;AACH;AACJ;;AACD,WAASoE,qBAAT,CAA+BnB,aAA/B,EAA8CuB,IAA9C,EAAoDK,SAApD,EAA+D1C,MAA/D,EAAuE8C,SAAvE,EAAkFiG,aAAlF,EAAiGC,KAAjG,EAAwGxK,EAAxG,EAA4G0I,KAA5G,EAAmHlG,OAAnH,EAA4H;AACxH,QAAIE,MAAM,GAAG5E,MAAM,CAAC,EAAD,EAAKqD,sBAAL,EAA6BqB,OAA7B,CAAnB;AACA,QAAIf,cAAc,GAAG3D,MAAM,CAAC,EAAD,EAAK+C,qBAAL,EAA4B6B,MAAM,CAACjB,cAAnC,CAA3B;AACA,QAAIzC,IAAI,GAAG6E,IAAX;AACA,QAAI5D,KAAK,GAAG4D,IAAZ;AACA,QAAItB,UAAJ;;AACA,QAAI,OAAOsB,IAAP,KAAgB,QAAhB,IAA4B,OAAOA,IAAP,KAAgB,QAA5C,IAAwD,OAAOA,IAAP,KAAgB,SAA5E,EAAuF;AACnFtB,MAAAA,UAAU,GAAGsB,IAAb;AACA7E,MAAAA,IAAI,GAAI,OAAOkF,SAAS,CAAC1C,MAAM,CAACxC,IAAR,CAAhB,KAAkC,SAAlC,IAA+C,OAAOkF,SAAS,CAAC1C,MAAM,CAACxC,IAAR,CAAhB,KAAkC,QAAlF,GACHkF,SAAS,CAAC1C,MAAM,CAACxC,IAAR,CADN,GACuBkF,SAAS,CAAC1C,MAAM,CAACxC,IAAR,CAAT,IAA0B,EADxD;AAEAiB,MAAAA,KAAK,GAAGiE,SAAS,CAAC1C,MAAM,CAACvB,KAAR,CAAjB;AACH;;AACD,QAAIwK,SAAJ;;AACA,QAAI,CAACzM,iBAAiB,CAACuE,UAAD,CAAlB,IAAkC,CAACvE,iBAAiB,CAACkG,SAAS,CAAC1C,MAAM,CAACxB,EAAR,CAAV,CAApD,IACGkE,SAAS,CAAC1C,MAAM,CAACxB,EAAR,CAAT,KAAyB,EADhC,EACoC;AAChCyK,MAAAA,SAAS,GAAGzK,EAAZ;AACH,KAHD,MAIK;AACDyK,MAAAA,SAAS,GAAGzK,EAAE,GAAG,GAAL,GAAW0I,KAAvB;AACH;;AACD,QAAI9J,EAAE,GAAG0D,aAAa,CAAC,IAAD,EAAO;AACzBgC,MAAAA,SAAS,EAAE,CAACkG,KAAK,KAAK,IAAV,GAAiB7L,QAAQ,CAACG,KAA1B,GAAkCH,QAAQ,CAACC,EAA5C,IAAkD,GAAlD,IAAyDZ,iBAAiB,CAACsG,SAAD,CAAjB,GAA+B,EAA/B,GAAoCA,SAA7F,CADc;AAEzBtE,MAAAA,EAAE,EAAEyK,SAFqB;AAEVlG,MAAAA,KAAK,EAAG9C,cAAc,CAACT,aAAf,KAAiC,EAAjC,IAAuCS,cAAc,CAACV,QAAf,KAA4B,EAAnE,GACnB;AAAEgI,QAAAA,IAAI,EAAGyB,KAAK,KAAK,IAAV,GAAiB/I,cAAc,CAACT,aAAhC,GAAgDS,cAAc,CAACV;AAAxE,OADmB,GACmE;AAHjE,KAAP,CAAtB;;AAKA,QAAIwB,UAAU,IAAI2B,SAAS,CAACD,cAAV,CAAyBzC,MAAM,CAACrB,OAAhC,CAAd,IAA0D+D,SAAS,CAAC1C,MAAM,CAACrB,OAAR,CAAT,CAA0B0E,QAA1B,OAAyC,OAAvG,EAAgH;AAC5GjG,MAAAA,EAAE,CAAC8F,SAAH,CAAaC,GAAb,CAAiBhG,QAAQ,CAACe,QAA1B;AACH;;AACD,QAAI8K,KAAJ,EAAW;AACP5L,MAAAA,EAAE,CAACsK,SAAH,GAAelK,IAAf;AACH,KAFD,MAGK;AACD,UAAI,CAAChB,iBAAiB,CAACiC,KAAD,CAAtB,EAA+B;AAC3BrB,QAAAA,EAAE,CAACgG,YAAH,CAAgB,YAAhB,EAA8B3E,KAA9B;AACH;;AACDrB,MAAAA,EAAE,CAACgG,YAAH,CAAgB,MAAhB,EAAwB,QAAxB;;AACA,UAAIrC,UAAU,IAAI2B,SAAS,CAACD,cAAV,CAAyBzC,MAAM,CAAChB,cAAhC,CAAd,IAAiE0D,SAAS,CAAC1C,MAAM,CAAChB,cAAR,CAA9E,EAAuG;AACnGoE,QAAAA,YAAY,CAAChG,EAAD,EAAKsF,SAAS,CAAC1C,MAAM,CAAChB,cAAR,CAAd,CAAZ;AACH;;AACD,UAAI+J,aAAa,CAACjH,MAAd,IAAwB,CAACZ,MAAM,CAACN,aAApC,EAAmD;AAC/C/D,QAAAA,MAAM,CAACkM,aAAD,EAAgB3L,EAAhB,CAAN;AACH;;AACD,UAAI2D,UAAU,KAAK2B,SAAS,CAAC1C,MAAM,CAAChC,GAAR,CAAT,IAA0B0E,SAAS,CAAC1C,MAAM,CAACf,aAAR,CAAT,IACzCyD,SAAS,CAAC1C,MAAM,CAACf,aAAR,CAAT,CAAgCiK,IADtB,CAAd,EAC4C;AACxC9L,QAAAA,EAAE,CAACyL,WAAH,CAAeM,SAAS,CAACrI,aAAD,EAAgBC,UAAhB,EAA4Bf,MAA5B,EAAoCxC,IAApC,EAA0CuL,aAA1C,EAAyD7H,MAAM,CAACN,aAAhE,CAAxB;AACH,OAHD,MAIK;AACD,YAAImI,aAAa,CAACjH,MAAd,IAAwBZ,MAAM,CAACN,aAAnC,EAAkD;AAC9C/D,UAAAA,MAAM,CAACkM,aAAD,EAAgB3L,EAAhB,CAAN;AACH;;AACDA,QAAAA,EAAE,CAACyL,WAAH,CAAeO,QAAQ,CAACC,cAAT,CAAwB7L,IAAxB,CAAf;AACH;AACJ;;AACD,WAAOJ,EAAP;AACH;;AACD,WAASuE,cAAT,CAAwBjB,UAAxB,EAAoC;AAChC,QAAI4I,WAAJ;AACA,WAAOA,WAAW,GAAG;AACjBlM,MAAAA,EAAE,EAAE,OAAOsD,UAAP,GAAoB,OADP;AAEjBrD,MAAAA,EAAE,EAAE,OAAOqD,UAAP,GAAoB,cAFP;AAGjBpD,MAAAA,KAAK,EAAE,OAAOoD,UAAP,GAAoB,aAHV;AAIjBnD,MAAAA,IAAI,EAAE,OAAOmD,UAAP,GAAoB,OAJT;AAKjBlD,MAAAA,IAAI,EAAE,OAAOkD,UAAP,GAAoB,OALT;AAMjBjD,MAAAA,KAAK,EAAE,OAAOiD,UAAP,GAAoB,QANV;AAOjBhD,MAAAA,OAAO,EAAE,WAPQ;AAQjBC,MAAAA,QAAQ,EAAE,YARO;AASjBC,MAAAA,QAAQ,EAAE,YATO;AAUjBC,MAAAA,WAAW,EAAE,gBAVI;AAWjBC,MAAAA,QAAQ,EAAE,aAXO;AAYjBC,MAAAA,KAAK,EAAE,SAZU;AAajBC,MAAAA,GAAG,EAAE,OAAO0C,UAAP,GAAoB,MAbR;AAcjBzC,MAAAA,WAAW,EAAE,oBAdI;AAejBC,MAAAA,QAAQ,EAAE,YAfO;AAgBjBC,MAAAA,KAAK,EAAE,OAAOuC,UAAP,GAAoB,MAhBV;AAiBjBtC,MAAAA,WAAW,EAAE,gBAjBI;AAkBjBC,MAAAA,UAAU,EAAE;AAlBK,KAArB;AAoBH;;AACD,WAAS8K,SAAT,CAAmBrI,aAAnB,EAAkCC,UAAlC,EAA8Cf,MAA9C,EAAsDxC,IAAtD,EAA4DuL,aAA5D,EAA2EQ,gBAA3E,EAA6F;AACzF,QAAI7G,SAAS,GAAGC,cAAc,CAAC5B,UAAD,EAAaf,MAAb,CAA9B;AACA,QAAIwD,IAAI,GAAG;AAAE0F,MAAAA,IAAI,EAAExG,SAAS,CAAC1C,MAAM,CAAChC,GAAR;AAAjB,KAAX;;AACA,QAAI0E,SAAS,CAACD,cAAV,CAAyBzC,MAAM,CAACf,aAAhC,KAAkDyD,SAAS,CAAC1C,MAAM,CAACf,aAAR,CAA/D,EAAuF;AACnF1C,MAAAA,KAAK,CAACiH,IAAD,EAAOd,SAAS,CAAC1C,MAAM,CAACf,aAAR,CAAhB,CAAL;AACAuE,MAAAA,IAAI,CAAC0F,IAAL,GAAYxG,SAAS,CAAC1C,MAAM,CAAChC,GAAR,CAAT,GAAwB0E,SAAS,CAAC1C,MAAM,CAAChC,GAAR,CAAjC,GACR0E,SAAS,CAAC1C,MAAM,CAACf,aAAR,CAAT,CAAgCiK,IADpC;AAEH;;AACD,QAAIC,SAAJ;;AACA,QAAI,CAACI,gBAAL,EAAuB;AACnBJ,MAAAA,SAAS,GAAGrI,aAAa,CAAC,GAAD,EAAM;AAAEgC,QAAAA,SAAS,EAAE3F,QAAQ,CAACK,IAAT,GAAgB,GAAhB,GAAsBL,QAAQ,CAACa,GAA5C;AAAiDsK,QAAAA,SAAS,EAAE9K;AAA5D,OAAN,CAAzB;AACH,KAFD,MAGK;AACD2L,MAAAA,SAAS,GAAGrI,aAAa,CAAC,GAAD,EAAM;AAAEgC,QAAAA,SAAS,EAAE3F,QAAQ,CAACK,IAAT,GAAgB,GAAhB,GAAsBL,QAAQ,CAACa;AAA5C,OAAN,CAAzB;AACA,UAAIwL,aAAa,GAAG1I,aAAa,CAAC,KAAD,EAAQ;AAAEgC,QAAAA,SAAS,EAAE3F,QAAQ,CAACkB;AAAtB,OAAR,CAAjC;;AACA,UAAI0K,aAAa,IAAIA,aAAa,CAACjH,MAAnC,EAA2C;AACvCjF,QAAAA,MAAM,CAACkM,aAAD,EAAgBS,aAAhB,CAAN;AACH;;AACDA,MAAAA,aAAa,CAACX,WAAd,CAA0BO,QAAQ,CAACC,cAAT,CAAwB7L,IAAxB,CAA1B;AACAX,MAAAA,MAAM,CAAC,CAAC2M,aAAD,CAAD,EAAkBL,SAAlB,CAAN;AACH;;AACD/F,IAAAA,YAAY,CAAC+F,SAAD,EAAY3F,IAAZ,CAAZ;AACA,WAAO2F,SAAP;AACH;AACD;;;AACA,WAAShH,UAAT,CAAoBrB,aAApB,EAAmCuB,IAAnC,EAAyCK,SAAzC,EAAoD1C,MAApD,EAA4D8C,SAA5D,EAAuE9B,OAAvE,EAAgF;AAC5E,QAAIE,MAAM,GAAG5E,MAAM,CAAC,EAAD,EAAKqD,sBAAL,EAA6BqB,OAA7B,CAAnB;AACA,QAAIf,cAAc,GAAG3D,MAAM,CAAC,EAAD,EAAK+C,qBAAL,EAA4B6B,MAAM,CAACjB,cAAnC,CAA3B;AACA,QAAIzC,IAAI,GAAG6E,IAAX;AACA,QAAIoH,GAAJ;AACA,QAAIT,KAAJ;AACA,QAAIjI,UAAJ;;AACA,QAAI,OAAOsB,IAAP,KAAgB,QAAhB,IAA4B,OAAOA,IAAP,KAAgB,QAAhD,EAA0D;AACtDtB,MAAAA,UAAU,GAAGsB,IAAb;AACA7E,MAAAA,IAAI,GAAGkF,SAAS,CAAC1C,MAAM,CAACxC,IAAR,CAAT,IAA0B,EAAjC;AACAiM,MAAAA,GAAG,GAAG/G,SAAS,CAAC1C,MAAM,CAACxB,EAAR,CAAf;AACAwK,MAAAA,KAAK,GAAI3G,IAAI,CAACI,cAAL,CAAoB,UAApB,KAAmCJ,IAAI,CAACW,QAAzC,GACF,IADE,GACK,KADb;AAEH;;AACD,QAAIhC,OAAO,IAAIA,OAAO,CAAClB,mBAAvB,EAA4C;AACxCtC,MAAAA,IAAI,GAAGR,kBAAkB,CAAC0M,QAAnB,CAA4BlM,IAA5B,CAAP;AACH;;AACD,QAAIJ,EAAE,GAAG0D,aAAa,CAAC,IAAD,EAAO;AACzBgC,MAAAA,SAAS,EAAE,CAACkG,KAAK,KAAK,IAAV,GAAiB7L,QAAQ,CAACG,KAA1B,GAAkCH,QAAQ,CAACC,EAA5C,IAAkD,GAAlD,IAAyDZ,iBAAiB,CAACsG,SAAD,CAAjB,GAA+B,EAA/B,GAAoCA,SAA7F,CADc;AAEzBC,MAAAA,KAAK,EAAG9C,cAAc,CAACT,aAAf,KAAiC,EAAjC,IAAuCS,cAAc,CAACV,QAAf,KAA4B,EAAnE,GACJ;AAAEgI,QAAAA,IAAI,EAAGyB,KAAK,KAAK,IAAV,GAAiB/I,cAAc,CAACT,aAAhC,GAAgDS,cAAc,CAACV;AAAxE,OADI,GACkF;AAHjE,KAAP,CAAtB;AAKA,KAAC/C,iBAAiB,CAACiN,GAAD,CAAlB,GAA0BrM,EAAE,CAACgG,YAAH,CAAgB,UAAhB,EAA4BqG,GAA5B,CAA1B,GAA6DrM,EAAE,CAACgG,YAAH,CAAgB,UAAhB,EAA4BxB,UAAU,EAAtC,CAA7D;AACA,QAAI+H,MAAM,GAAG,QAAb;;AACA,QAAI3I,OAAO,IAAI,CAAC,CAACA,OAAO,CAAC4I,cAArB,IACG,OAAOvH,IAAP,KAAgB,QADnB,IAEGA,IAAI,CAACI,cAAL,CAAoBkH,MAApB,CAFP,EAEoC;AAChC,aAAOtH,IAAI,CAACsH,MAAD,CAAX;AACH;;AACD,QAAIX,KAAK,IAAIhI,OAAT,IAAoBA,OAAO,CAACT,aAAhC,EAA+C;AAC3C,UAAIiH,cAAc,GAAGzK,OAAO,CAACiE,OAAO,CAACT,aAAT,CAA5B;AACA1D,MAAAA,MAAM,CAAC2K,cAAc,CAACnF,IAAD,EAAO,IAAP,EAAa,IAAb,EAAmBnB,MAAM,CAAC0G,eAA1B,EAA2C,CAAC,CAAC1G,MAAM,CAAC4G,gBAApD,CAAf,EAAsF1K,EAAtF,CAAN;AACH,KAHD,MAIK,IAAI,CAAC4L,KAAD,IAAUhI,OAAV,IAAqBA,OAAO,CAACV,QAAjC,EAA2C;AAC5C,UAAIkH,cAAc,GAAGzK,OAAO,CAACiE,OAAO,CAACV,QAAT,CAA5B;AACAzD,MAAAA,MAAM,CAAC2K,cAAc,CAACnF,IAAD,EAAO,IAAP,EAAa,IAAb,EAAmBnB,MAAM,CAAC2G,UAA1B,EAAsC,CAAC,CAAC3G,MAAM,CAAC4G,gBAA/C,CAAf,EAAiF1K,EAAjF,CAAN;AACH,KAHI,MAIA;AACD,UAAIyM,QAAQ,GAAG/I,aAAa,CAAC,KAAD,EAAQ;AAChCgC,QAAAA,SAAS,EAAE3F,QAAQ,CAACU,WADY;AAEhCkF,QAAAA,KAAK,EAAG9C,cAAc,CAACP,WAAf,KAA+B,EAA/B,GAAoC;AAAE6H,UAAAA,IAAI,EAAEtH,cAAc,CAACP;AAAvB,SAApC,GAA2E;AAFnD,OAAR,CAA5B;;AAIA,UAAIqB,UAAU,KAAK2B,SAAS,CAAC1C,MAAM,CAAChC,GAAR,CAAT,IAA0B0E,SAAS,CAAC1C,MAAM,CAACf,aAAR,CAAT,IACzCyD,SAAS,CAAC1C,MAAM,CAACf,aAAR,CAAT,CAAgCiK,IADtB,CAAd,EAC4C;AACxCW,QAAAA,QAAQ,CAAChB,WAAT,CAAqBM,SAAS,CAACrI,aAAD,EAAgBC,UAAhB,EAA4Bf,MAA5B,EAAoCxC,IAApC,EAA0C,IAA1C,EAAgD0D,MAAM,CAACN,aAAvD,CAA9B;AACH,OAHD,MAIK;AACDiJ,QAAAA,QAAQ,CAAChB,WAAT,CAAqB/H,aAAa,CAAC,MAAD,EAAS;AACvCgC,UAAAA,SAAS,EAAE3F,QAAQ,CAACK,IADmB;AACb8K,UAAAA,SAAS,EAAE9K,IADE;AAEvCuF,UAAAA,KAAK,EAAG9C,cAAc,CAACR,QAAf,KAA4B,EAA5B,GAAiC;AAAE8H,YAAAA,IAAI,EAAEtH,cAAc,CAACR;AAAvB,WAAjC,GAAqE;AAFtC,SAAT,CAAlC;AAIH;;AACDrC,MAAAA,EAAE,CAACyL,WAAH,CAAegB,QAAf;AACH;;AACD,WAAOzM,EAAP;AACH;AACD;;;;;;;;AAMA,WAASsE,UAAT,CAAoBZ,aAApB,EAAmCgJ,SAAnC,EAA8ChH,SAA9C,EAAyD9B,OAAzD,EAAkE;AAC9D,QAAIE,MAAM,GAAG5E,MAAM,CAAC,EAAD,EAAKqD,sBAAL,EAA6BqB,OAA7B,CAAnB;AACA,QAAIf,cAAc,GAAG3D,MAAM,CAAC,EAAD,EAAK+C,qBAAL,EAA4B6B,MAAM,CAACjB,cAAnC,CAA3B;AACA9C,IAAAA,QAAQ,GAAGwE,cAAc,CAACT,MAAM,CAACR,UAAR,CAAzB;AACA,QAAI4G,SAAS,GAAGxG,aAAa,CAAC,IAAD,EAAO;AAChCgC,MAAAA,SAAS,EAAE3F,QAAQ,CAACE,EAAT,GAAc,GAAd,IAAqBb,iBAAiB,CAACsG,SAAD,CAAjB,GAA+B,EAA/B,GAAoCA,SAAzD,CADqB;AAEhCC,MAAAA,KAAK,EAAG9C,cAAc,CAACX,QAAf,KAA4B,EAA5B,GAAiC;AAAEiI,QAAAA,IAAI,EAAEtH,cAAc,CAACX;AAAvB,OAAjC,GAAqE;AAF7C,KAAP,CAA7B;AAIAzC,IAAAA,MAAM,CAACiN,SAAD,EAAYxC,SAAZ,CAAN;AACA,WAAOA,SAAP;AACH;;AACDhJ,EAAAA,QAAQ,CAACoD,UAAT,GAAsBA,UAAtB;AACA;;;;;;;AAMA,WAASqI,YAAT,CAAsBjJ,aAAtB,EAAqCgJ,SAArC,EAAgDhH,SAAhD,EAA2D9B,OAA3D,EAAoE;AAChE,QAAIE,MAAM,GAAG5E,MAAM,CAAC,EAAD,EAAKqD,sBAAL,EAA6BqB,OAA7B,CAAnB;AACA7D,IAAAA,QAAQ,GAAGwE,cAAc,CAACT,MAAM,CAACR,UAAR,CAAzB;AACA,QAAIoI,aAAa,GAAG5H,MAAM,CAACP,kBAAP,KAA8B,MAA9B,GAAuChE,OAAvC,GAAiDE,MAArE;AACAiM,IAAAA,aAAa,CAAC,CAAChI,aAAa,CAAC,KAAD,EAAQ;AAC5BgC,MAAAA,SAAS,EAAE,aAAa5B,MAAM,CAACT,eAApB,GAAsC,GAAtC,IACNjE,iBAAiB,CAACsG,SAAD,CAAjB,GAA+B,EAA/B,GAAoCA,SAD9B;AADiB,KAAR,CAAd,CAAD,EAGJgH,SAAS,CAAC3D,aAAV,CAAwB,MAAMhJ,QAAQ,CAACU,WAAvC,CAHI,CAAb;AAIA,WAAOiM,SAAP;AACH;;AACDxL,EAAAA,QAAQ,CAACyL,YAAT,GAAwBA,YAAxB;AACH,CAjuBD,EAiuBGzL,QAAQ,KAAKA,QAAQ,GAAG,EAAhB,CAjuBX;AAkuBA;;;;;;;AAKA,OAAO,SAASqE,cAAT,CAAwBqH,QAAxB,EAAkChK,MAAlC,EAA0C;AAC7C,MAAI0C,SAAS,GAAG,EAAhB;;AACA,MAAIlG,iBAAiB,CAACwN,QAAD,CAAjB,IAA+B,OAAQA,QAAR,KAAsB,QAArD,IAAiE,OAAQA,QAAR,KAAsB,QAAvF,IACG,CAACxN,iBAAiB,CAACwN,QAAQ,CAAChH,QAAV,CADzB,EAC8C;AAC1C,WAAOgH,QAAP;AACH,GAHD,MAIK;AACD,SAAK,IAAI9B,EAAE,GAAG,CAAT,EAAY+B,EAAE,GAAG1D,MAAM,CAACD,IAAP,CAAYtG,MAAZ,CAAtB,EAA2CkI,EAAE,GAAG+B,EAAE,CAACnI,MAAnD,EAA2DoG,EAAE,EAA7D,EAAiE;AAC7D,UAAIgC,KAAK,GAAGD,EAAE,CAAC/B,EAAD,CAAd;AACA,UAAIiC,SAAS,GAAGnK,MAAM,CAACkK,KAAD,CAAtB;AACA,UAAIzL,KAAK,GAAG,CAACjC,iBAAiB,CAAC2N,SAAD,CAAlB,IACR,OAAQA,SAAR,KAAuB,QADf,GAC0B1N,QAAQ,CAAC0N,SAAD,EAAYH,QAAZ,CADlC,GAC0D9H,SADtE;;AAEA,UAAI,CAAC1F,iBAAiB,CAACiC,KAAD,CAAtB,EAA+B;AAC3BiE,QAAAA,SAAS,CAACyH,SAAD,CAAT,GAAuB1L,KAAvB;AACH;AACJ;AACJ;;AACD,SAAOiE,SAAP;AACH","sourcesContent":["import { extend, merge, isNullOrUndefined, getValue } from '@syncfusion/ej2-base';\nimport { attributes, prepend, isVisible, append, addClass } from '@syncfusion/ej2-base';\nimport { compile, SanitizeHtmlHelper } from '@syncfusion/ej2-base';\nimport { DataManager, Query } from '@syncfusion/ej2-data';\nexport var cssClass = {\n    li: 'e-list-item',\n    ul: 'e-list-parent e-ul',\n    group: 'e-list-group-item',\n    icon: 'e-list-icon',\n    text: 'e-list-text',\n    check: 'e-list-check',\n    checked: 'e-checked',\n    selected: 'e-selected',\n    expanded: 'e-expanded',\n    textContent: 'e-text-content',\n    hasChild: 'e-has-child',\n    level: 'e-level',\n    url: 'e-list-url',\n    collapsible: 'e-icon-collapsible',\n    disabled: 'e-disabled',\n    image: 'e-list-img',\n    iconWrapper: 'e-icon-wrapper',\n    anchorWrap: 'e-anchor-wrap'\n};\n/**\n * Base List Generator\n */\nexport var ListBase;\n(function (ListBase) {\n    /**\n     * Default mapped fields.\n     */\n    ListBase.defaultMappedFields = {\n        id: 'id',\n        text: 'text',\n        url: 'url',\n        value: 'value',\n        isChecked: 'isChecked',\n        enabled: 'enabled',\n        expanded: 'expanded',\n        selected: 'selected',\n        iconCss: 'iconCss',\n        child: 'child',\n        isVisible: 'isVisible',\n        hasChildren: 'hasChildren',\n        tooltip: 'tooltip',\n        htmlAttributes: 'htmlAttributes',\n        urlAttributes: 'urlAttributes',\n        imageAttributes: 'imageAttributes',\n        imageUrl: 'imageUrl',\n        groupBy: null\n    };\n    var defaultAriaAttributes = {\n        level: 1,\n        listRole: 'presentation',\n        itemRole: 'presentation',\n        groupItemRole: 'group',\n        itemText: 'list-item',\n        wrapperRole: 'presentation'\n    };\n    var defaultListBaseOptions = {\n        showCheckBox: false,\n        showIcon: false,\n        enableHtmlSanitizer: false,\n        expandCollapse: false,\n        fields: ListBase.defaultMappedFields,\n        ariaAttributes: defaultAriaAttributes,\n        listClass: '',\n        itemClass: '',\n        processSubChild: false,\n        sortOrder: 'None',\n        template: null,\n        groupTemplate: null,\n        headerTemplate: null,\n        expandIconClass: 'e-icon-collapsible',\n        moduleName: 'list',\n        expandIconPosition: 'Right',\n        itemNavigable: false\n    };\n    /**\n     * Function helps to created and return the UL Li element based on your data.\n     * @param  {{[key:string]:Object}[]|string[]} dataSource - Specifies an array of JSON or String data.\n     * @param  {ListBaseOptions} options? - Specifies the list options that need to provide.\n     */\n    function createList(createElement, dataSource, options, isSingleLevel) {\n        var curOpt = extend({}, defaultListBaseOptions, options);\n        var ariaAttributes = extend({}, defaultAriaAttributes, curOpt.ariaAttributes);\n        var type = typeofData(dataSource).typeof;\n        if (type === 'string' || type === 'number') {\n            return createListFromArray(createElement, dataSource, isSingleLevel, options);\n        }\n        else {\n            return createListFromJson(createElement, dataSource, options, ariaAttributes.level, isSingleLevel);\n        }\n    }\n    ListBase.createList = createList;\n    /**\n     * Function helps to created an element list based on string array input .\n     * @param  {string[]} dataSource - Specifies an array of string data\n     */\n    function createListFromArray(createElement, dataSource, isSingleLevel, options) {\n        var subChild = createListItemFromArray(createElement, dataSource, isSingleLevel, options);\n        return generateUL(createElement, subChild, null, options);\n    }\n    ListBase.createListFromArray = createListFromArray;\n    /**\n     * Function helps to created an element list based on string array input .\n     * @param  {string[]} dataSource - Specifies an array of string data\n     */\n    function createListItemFromArray(createElement, dataSource, isSingleLevel, options) {\n        var subChild = [];\n        var curOpt = extend({}, defaultListBaseOptions, options);\n        cssClass = getModuleClass(curOpt.moduleName);\n        var id = generateId(); // generate id for drop-down-list option.\n        for (var i = 0; i < dataSource.length; i++) {\n            if (isNullOrUndefined(dataSource[i])) {\n                continue;\n            }\n            var li = void 0;\n            if (curOpt.itemCreating && typeof curOpt.itemCreating === 'function') {\n                var curData = {\n                    dataSource: dataSource,\n                    curData: dataSource[i],\n                    text: dataSource[i],\n                    options: curOpt\n                };\n                curOpt.itemCreating(curData);\n            }\n            if (isSingleLevel) {\n                li = generateSingleLevelLI(createElement, dataSource[i], undefined, null, null, [], null, id, i, options);\n            }\n            else {\n                li = generateLI(createElement, dataSource[i], undefined, null, null, options);\n            }\n            if (curOpt.itemCreated && typeof curOpt.itemCreated === 'function') {\n                var curData = {\n                    dataSource: dataSource,\n                    curData: dataSource[i],\n                    text: dataSource[i],\n                    item: li,\n                    options: curOpt\n                };\n                curOpt.itemCreated(curData);\n            }\n            subChild.push(li);\n        }\n        return subChild;\n    }\n    ListBase.createListItemFromArray = createListItemFromArray;\n    /**\n     * Function helps to created an element list based on array of JSON input .\n     * @param  {{[key:string]:Object}[]} dataSource - Specifies an array of JSON data.\n     * @param  {ListBaseOptions} options? - Specifies the list options that need to provide.\n     */\n    // tslint:disable-next-line:max-func-body-length\n    function createListItemFromJson(createElement, dataSource, options, level, isSingleLevel) {\n        var curOpt = extend({}, defaultListBaseOptions, options);\n        cssClass = getModuleClass(curOpt.moduleName);\n        var fields = extend({}, ListBase.defaultMappedFields, curOpt.fields);\n        var ariaAttributes = extend({}, defaultAriaAttributes, curOpt.ariaAttributes);\n        var id;\n        var checkboxElement = [];\n        if (level) {\n            ariaAttributes.level = level;\n        }\n        var child = [];\n        var li;\n        if (dataSource && dataSource.length && !isNullOrUndefined(typeofData(dataSource).item) &&\n            !typeofData(dataSource).item.hasOwnProperty(fields.id)) {\n            id = generateId(); // generate id for drop-down-list option.\n        }\n        for (var i = 0; i < dataSource.length; i++) {\n            var fieldData = getFieldValues(dataSource[i], fields);\n            if (isNullOrUndefined(dataSource[i])) {\n                continue;\n            }\n            if (curOpt.itemCreating && typeof curOpt.itemCreating === 'function') {\n                var curData = {\n                    dataSource: dataSource,\n                    curData: dataSource[i],\n                    text: fieldData[fields.text],\n                    options: curOpt,\n                    fields: fields\n                };\n                curOpt.itemCreating(curData);\n            }\n            var curItem = dataSource[i];\n            if (curOpt.itemCreating && typeof curOpt.itemCreating === 'function') {\n                fieldData = getFieldValues(dataSource[i], fields);\n            }\n            if (fieldData.hasOwnProperty(fields.id) && !isNullOrUndefined(fieldData[fields.id])) {\n                id = fieldData[fields.id];\n            }\n            var innerEle = [];\n            if (curOpt.showCheckBox) {\n                if (curOpt.itemNavigable && (fieldData[fields.url] || fieldData[fields.urlAttributes])) {\n                    checkboxElement.push(createElement('input', { className: cssClass.check, attrs: { type: 'checkbox' } }));\n                }\n                else {\n                    innerEle.push(createElement('input', { className: cssClass.check, attrs: { type: 'checkbox' } }));\n                }\n            }\n            if (isSingleLevel === true) {\n                if (curOpt.showIcon && fieldData.hasOwnProperty(fields.iconCss) && !isNullOrUndefined(fieldData[fields.iconCss])) {\n                    innerEle.push(createElement('span', { className: cssClass.icon + ' ' + fieldData[fields.iconCss] }));\n                }\n                li = generateSingleLevelLI(createElement, curItem, fieldData, fields, curOpt.itemClass, innerEle, (curItem.hasOwnProperty('isHeader') &&\n                    curItem.isHeader) ? true : false, id, i, options);\n                if (curOpt.itemNavigable && checkboxElement.length) {\n                    prepend(checkboxElement, li.firstElementChild);\n                }\n            }\n            else {\n                li = generateLI(createElement, curItem, fieldData, fields, curOpt.itemClass, options);\n                li.classList.add(cssClass.level + '-' + ariaAttributes.level);\n                li.setAttribute('aria-level', ariaAttributes.level.toString());\n                if (fieldData.hasOwnProperty(fields.tooltip)) {\n                    li.setAttribute('title', fieldData[fields.tooltip]);\n                }\n                if (fieldData.hasOwnProperty(fields.htmlAttributes) && fieldData[fields.htmlAttributes]) {\n                    setAttribute(li, fieldData[fields.htmlAttributes]);\n                }\n                if (fieldData.hasOwnProperty(fields.enabled) && fieldData[fields.enabled] === false) {\n                    li.classList.add(cssClass.disabled);\n                }\n                if (fieldData.hasOwnProperty(fields.isVisible) && fieldData[fields.isVisible] === false) {\n                    li.style.display = 'none';\n                }\n                if (fieldData.hasOwnProperty(fields.imageUrl) && !isNullOrUndefined(fieldData[fields.imageUrl])\n                    && !curOpt.template) {\n                    var attr = { src: fieldData[fields.imageUrl] };\n                    merge(attr, fieldData[fields.imageAttributes]);\n                    prepend([createElement('img', { className: cssClass.image, attrs: attr })], li.firstElementChild);\n                }\n                if (curOpt.showIcon && fieldData.hasOwnProperty(fields.iconCss) &&\n                    !isNullOrUndefined(fieldData[fields.iconCss]) && !curOpt.template) {\n                    prepend([createElement('div', { className: cssClass.icon + ' ' + fieldData[fields.iconCss] })], li.firstElementChild);\n                }\n                if (innerEle.length) {\n                    prepend(innerEle, li.firstElementChild);\n                }\n                if (curOpt.itemNavigable && checkboxElement.length) {\n                    prepend(checkboxElement, li.firstElementChild);\n                }\n                processSubChild(createElement, fieldData, fields, dataSource, curOpt, li, ariaAttributes.level);\n            }\n            if (curOpt.itemCreated && typeof curOpt.itemCreated === 'function') {\n                var curData = {\n                    dataSource: dataSource,\n                    curData: dataSource[i],\n                    text: fieldData[fields.text],\n                    item: li,\n                    options: curOpt,\n                    fields: fields\n                };\n                curOpt.itemCreated(curData);\n            }\n            checkboxElement = [];\n            child.push(li);\n        }\n        return child;\n    }\n    ListBase.createListItemFromJson = createListItemFromJson;\n    /**\n     * Function helps to created an element list based on array of JSON input .\n     * @param  {{[key:string]:Object}[]} dataSource - Specifies an array of JSON data.\n     * @param  {ListBaseOptions} options? - Specifies the list options that need to provide.\n     */\n    function createListFromJson(createElement, dataSource, options, level, isSingleLevel) {\n        var curOpt = extend({}, defaultListBaseOptions, options);\n        var li = createListItemFromJson(createElement, dataSource, options, level, isSingleLevel);\n        return generateUL(createElement, li, curOpt.listClass, options);\n    }\n    ListBase.createListFromJson = createListFromJson;\n    /**\n     * Return the next or previous visible element.\n     * @param  {Element[]|NodeList} elementArray - An element array to find next or previous element.\n     * @param  {Element} li - An element to find next or previous after this element.\n     * @param  {boolean} isPrevious? - Specify when the need get previous element from array.\n     */\n    function getSiblingLI(elementArray, element, isPrevious) {\n        cssClass = getModuleClass(defaultListBaseOptions.moduleName);\n        if (!elementArray || !elementArray.length) {\n            return void 0;\n        }\n        var siblingLI;\n        var liIndex;\n        var liCollections = Array.prototype.slice.call(elementArray);\n        if (element) {\n            liIndex = indexOf(element, liCollections);\n        }\n        else {\n            liIndex = (isPrevious === true ? liCollections.length : -1);\n        }\n        siblingLI = liCollections[liIndex + (isPrevious === true ? -1 : 1)];\n        while (siblingLI && (!isVisible(siblingLI) || siblingLI.classList.contains(cssClass.disabled))) {\n            liIndex = liIndex + (isPrevious === true ? -1 : 1);\n            siblingLI = liCollections[liIndex];\n        }\n        return siblingLI;\n    }\n    ListBase.getSiblingLI = getSiblingLI;\n    /**\n     * Return the index of the li element\n     * @param  {Element} item - An element to find next or previous after this element.\n     * @param  {Element[]|NodeList} elementArray - An element array to find index of given li.\n     */\n    function indexOf(item, elementArray) {\n        if (!elementArray || !item) {\n            return void 0;\n        }\n        else {\n            var liCollections = elementArray;\n            liCollections = Array.prototype.slice.call(elementArray);\n            return liCollections.indexOf(item);\n        }\n    }\n    ListBase.indexOf = indexOf;\n    /**\n     * Returns the grouped data from given dataSource.\n     * @param  {{[key:string]:Object}[]} dataSource - The JSON data which is necessary to process.\n     * @param  {FieldsMapping} fields - Fields that are mapped from the data source.\n     * @param  {SortOrder='None'} sortOrder- Specifies final result sort order.\n     */\n    function groupDataSource(dataSource, fields, sortOrder) {\n        if (sortOrder === void 0) { sortOrder = 'None'; }\n        var curFields = extend({}, ListBase.defaultMappedFields, fields);\n        var cusQuery = new Query().group(curFields.groupBy);\n        // need to remove once sorting issues fixed in DataManager\n        cusQuery = addSorting(sortOrder, 'key', cusQuery);\n        var ds = getDataSource(dataSource, cusQuery);\n        dataSource = [];\n        for (var j = 0; j < ds.length; j++) {\n            var itemObj = ds[j].items;\n            var grpItem = {};\n            var hdr = 'isHeader';\n            grpItem[curFields.text] = ds[j].key;\n            grpItem[hdr] = true;\n            grpItem.id = 'group-list-item-' + (ds[j].key ?\n                ds[j].key.toString().trim() : 'undefined');\n            grpItem.items = itemObj;\n            dataSource.push(grpItem);\n            for (var k = 0; k < itemObj.length; k++) {\n                dataSource.push(itemObj[k]);\n            }\n        }\n        return dataSource;\n    }\n    ListBase.groupDataSource = groupDataSource;\n    /**\n     * Returns a sorted query object.\n     * @param  {SortOrder} sortOrder - Specifies that sort order.\n     * @param  {string} sortBy - Specifies sortBy fields.\n     * @param  {Query=new Query()} query - Pass if any existing query.\n     */\n    function addSorting(sortOrder, sortBy, query) {\n        if (query === void 0) { query = new Query(); }\n        if (sortOrder === 'Ascending') {\n            query.sortBy(sortBy, 'ascending', true);\n        }\n        else if (sortOrder === 'Descending') {\n            query.sortBy(sortBy, 'descending', true);\n        }\n        else {\n            for (var i = 0; i < query.queries.length; i++) {\n                if (query.queries[i].fn === 'onSortBy') {\n                    query.queries.splice(i, 1);\n                }\n            }\n        }\n        return query;\n    }\n    ListBase.addSorting = addSorting;\n    /**\n     * Return an array of JSON Data that processed based on queries.\n     * @param  {{[key:string]:Object}[]} dataSource - Specifies local JSON data source.\n     * @param  {Query} query - Specifies query that need to process.\n     */\n    function getDataSource(dataSource, query) {\n        // tslint:disable-next-line\n        return new DataManager(dataSource)\n            .executeLocal(query);\n    }\n    ListBase.getDataSource = getDataSource;\n    /**\n     * Created JSON data based the UL and LI element\n     * @param  {HTMLElement|Element} element - UL element that need to convert as a JSON\n     * @param  {ListBaseOptions} options? - Specifies listbase option for fields.\n     */\n    function createJsonFromElement(element, options) {\n        var curOpt = extend({}, defaultListBaseOptions, options);\n        var fields = extend({}, ListBase.defaultMappedFields, curOpt.fields);\n        var curEle = element.cloneNode(true);\n        var jsonAr = [];\n        curEle.classList.add('json-parent');\n        var childs = curEle.querySelectorAll('.json-parent>li');\n        curEle.classList.remove('json-parent');\n        for (var i = 0; i < childs.length; i++) {\n            var li = childs[i];\n            var anchor = li.querySelector('a');\n            var ul = li.querySelector('ul');\n            var json = {};\n            var childNodes = anchor ? anchor.childNodes : li.childNodes;\n            var keys = Object.keys(childNodes);\n            for (var i_1 = 0; i_1 < childNodes.length; i_1++) {\n                if (!(childNodes[Number(keys[i_1])]).hasChildNodes()) {\n                    json[fields.text] = childNodes[Number(keys[i_1])].textContent;\n                }\n            }\n            var attributes_1 = getAllAttributes(li);\n            if (attributes_1.id) {\n                json[fields.id] = attributes_1.id;\n                delete attributes_1.id;\n            }\n            else {\n                json[fields.id] = generateId();\n            }\n            if (Object.keys(attributes_1).length) {\n                json[fields.htmlAttributes] = attributes_1;\n            }\n            if (anchor) {\n                attributes_1 = getAllAttributes(anchor);\n                if (Object.keys(attributes_1).length) {\n                    json[fields.urlAttributes] = attributes_1;\n                }\n            }\n            if (ul) {\n                json[fields.child] = createJsonFromElement(ul, options);\n            }\n            jsonAr.push(json);\n        }\n        return jsonAr;\n    }\n    ListBase.createJsonFromElement = createJsonFromElement;\n    function typeofData(data) {\n        var match = { typeof: null, item: null };\n        for (var i = 0; i < data.length; i++) {\n            if (!isNullOrUndefined(data[i])) {\n                return match = { typeof: typeof data[i], item: data[i] };\n            }\n        }\n        return match;\n    }\n    function setAttribute(element, elementAttributes) {\n        var attr = {};\n        merge(attr, elementAttributes);\n        if (attr.class) {\n            addClass([element], attr.class.split(' '));\n            delete attr.class;\n        }\n        attributes(element, attr);\n    }\n    function getAllAttributes(element) {\n        var attributes = {};\n        var attr = element.attributes;\n        for (var index = 0; index < attr.length; index++) {\n            attributes[attr[index].nodeName] = attr[index].nodeValue;\n        }\n        return attributes;\n    }\n    /**\n     * Created UL element from content template.\n     * @param  {string} template - that need to convert and generate li element.\n     * @param  {{[key:string]:Object}[]} dataSource - Specifies local JSON data source.\n     * @param  {ListBaseOptions} options? - Specifies listbase option for fields.\n     */\n    function renderContentTemplate(createElement, template, dataSource, fields, options) {\n        cssClass = getModuleClass(defaultListBaseOptions.moduleName);\n        var ulElement = createElement('ul', { className: cssClass.ul, attrs: { role: 'presentation' } });\n        var curOpt = extend({}, defaultListBaseOptions, options);\n        var curFields = extend({}, ListBase.defaultMappedFields, fields);\n        var compiledString = compile(template);\n        var liCollection = [];\n        var id = generateId(); // generate id for drop-down-list option.\n        for (var i = 0; i < dataSource.length; i++) {\n            var fieldData = getFieldValues(dataSource[i], curFields);\n            var curItem = dataSource[i];\n            var isHeader = curItem.isHeader;\n            var value = fieldData[curFields.value];\n            if (curOpt.itemCreating && typeof curOpt.itemCreating === 'function') {\n                var curData = {\n                    dataSource: dataSource,\n                    curData: curItem,\n                    text: value,\n                    options: curOpt,\n                    fields: curFields\n                };\n                curOpt.itemCreating(curData);\n            }\n            if (curOpt.itemCreating && typeof curOpt.itemCreating === 'function') {\n                fieldData = getFieldValues(dataSource[i], curFields);\n                value = fieldData[curFields.value];\n            }\n            var li = createElement('li', {\n                id: id + '-' + i,\n                className: isHeader ? cssClass.group : cssClass.li, attrs: { role: 'presentation' }\n            });\n            if (isHeader) {\n                li.innerText = fieldData[curFields.text];\n            }\n            else {\n                var currentID = isHeader ? curOpt.groupTemplateID : curOpt.templateID;\n                append(compiledString(curItem, null, null, currentID, !!curOpt.isStringTemplate), li);\n                li.setAttribute('data-value', value);\n                li.setAttribute('role', 'option');\n            }\n            if (curOpt.itemCreated && typeof curOpt.itemCreated === 'function') {\n                var curData = {\n                    dataSource: dataSource,\n                    curData: curItem,\n                    text: value,\n                    item: li,\n                    options: curOpt,\n                    fields: curFields\n                };\n                curOpt.itemCreated(curData);\n            }\n            liCollection.push(li);\n        }\n        append(liCollection, ulElement);\n        return ulElement;\n    }\n    ListBase.renderContentTemplate = renderContentTemplate;\n    /**\n     * Created header items from group template.\n     * @param  {string} template - that need to convert and generate li element.\n     * @param  {{[key:string]:Object}[]} dataSource - Specifies local JSON data source.\n     * @param  {FieldsMapping} fields - Specifies fields for mapping the dataSource.\n     * @param  {Element[]} headerItems? - Specifies listbase header items.\n     */\n    function renderGroupTemplate(groupTemplate, groupDataSource, fields, headerItems, options) {\n        var compiledString = compile(groupTemplate);\n        var curFields = extend({}, ListBase.defaultMappedFields, fields);\n        var curOpt = extend({}, defaultListBaseOptions, options);\n        var category = curFields.groupBy;\n        for (var _i = 0, headerItems_1 = headerItems; _i < headerItems_1.length; _i++) {\n            var header = headerItems_1[_i];\n            var headerData = {};\n            headerData[category] = header.textContent;\n            header.innerHTML = '';\n            append(compiledString(headerData, null, null, curOpt.groupTemplateID, !!curOpt.isStringTemplate), header);\n        }\n        return headerItems;\n    }\n    ListBase.renderGroupTemplate = renderGroupTemplate;\n    function generateId() {\n        return Math.floor((1 + Math.random()) * 0x10000)\n            .toString(16)\n            .substring(1);\n    }\n    ListBase.generateId = generateId;\n    function processSubChild(createElement, fieldData, fields, ds, options, element, level) {\n        // Get SubList\n        var subDS = fieldData[fields.child] || [];\n        var hasChildren = fieldData[fields.hasChildren];\n        //Create Sub child\n        if (subDS.length) {\n            hasChildren = true;\n            element.classList.add(cssClass.hasChild);\n            if (options.processSubChild) {\n                var subLi = createListFromJson(createElement, subDS, options, ++level);\n                element.appendChild(subLi);\n            }\n        }\n        // Create expand and collapse node\n        if (!!options.expandCollapse && hasChildren && !options.template) {\n            element.firstElementChild.classList.add(cssClass.iconWrapper);\n            var expandElement = options.expandIconPosition === 'Left' ? prepend : append;\n            expandElement([createElement('div', { className: 'e-icons ' + options.expandIconClass })], element.querySelector('.' + cssClass.textContent));\n        }\n    }\n    function generateSingleLevelLI(createElement, item, fieldData, fields, className, innerElements, grpLI, id, index, options) {\n        var curOpt = extend({}, defaultListBaseOptions, options);\n        var ariaAttributes = extend({}, defaultAriaAttributes, curOpt.ariaAttributes);\n        var text = item;\n        var value = item;\n        var dataSource;\n        if (typeof item !== 'string' && typeof item !== 'number' && typeof item !== 'boolean') {\n            dataSource = item;\n            text = (typeof fieldData[fields.text] === 'boolean' || typeof fieldData[fields.text] === 'number') ?\n                fieldData[fields.text] : (fieldData[fields.text] || '');\n            value = fieldData[fields.value];\n        }\n        var elementID;\n        if (!isNullOrUndefined(dataSource) && !isNullOrUndefined(fieldData[fields.id])\n            && fieldData[fields.id] !== '') {\n            elementID = id;\n        }\n        else {\n            elementID = id + '-' + index;\n        }\n        var li = createElement('li', {\n            className: (grpLI === true ? cssClass.group : cssClass.li) + ' ' + (isNullOrUndefined(className) ? '' : className),\n            id: elementID, attrs: (ariaAttributes.groupItemRole !== '' && ariaAttributes.itemRole !== '' ?\n                { role: (grpLI === true ? ariaAttributes.groupItemRole : ariaAttributes.itemRole) } : {})\n        });\n        if (dataSource && fieldData.hasOwnProperty(fields.enabled) && fieldData[fields.enabled].toString() === 'false') {\n            li.classList.add(cssClass.disabled);\n        }\n        if (grpLI) {\n            li.innerText = text;\n        }\n        else {\n            if (!isNullOrUndefined(value)) {\n                li.setAttribute('data-value', value);\n            }\n            li.setAttribute('role', 'option');\n            if (dataSource && fieldData.hasOwnProperty(fields.htmlAttributes) && fieldData[fields.htmlAttributes]) {\n                setAttribute(li, fieldData[fields.htmlAttributes]);\n            }\n            if (innerElements.length && !curOpt.itemNavigable) {\n                append(innerElements, li);\n            }\n            if (dataSource && (fieldData[fields.url] || (fieldData[fields.urlAttributes] &&\n                fieldData[fields.urlAttributes].href))) {\n                li.appendChild(anchorTag(createElement, dataSource, fields, text, innerElements, curOpt.itemNavigable));\n            }\n            else {\n                if (innerElements.length && curOpt.itemNavigable) {\n                    append(innerElements, li);\n                }\n                li.appendChild(document.createTextNode(text));\n            }\n        }\n        return li;\n    }\n    function getModuleClass(moduleName) {\n        var moduleClass;\n        return moduleClass = {\n            li: \"e-\" + moduleName + \"-item\",\n            ul: \"e-\" + moduleName + \"-parent e-ul\",\n            group: \"e-\" + moduleName + \"-group-item\",\n            icon: \"e-\" + moduleName + \"-icon\",\n            text: \"e-\" + moduleName + \"-text\",\n            check: \"e-\" + moduleName + \"-check\",\n            checked: 'e-checked',\n            selected: 'e-selected',\n            expanded: 'e-expanded',\n            textContent: 'e-text-content',\n            hasChild: 'e-has-child',\n            level: 'e-level',\n            url: \"e-\" + moduleName + \"-url\",\n            collapsible: 'e-icon-collapsible',\n            disabled: 'e-disabled',\n            image: \"e-\" + moduleName + \"-img\",\n            iconWrapper: 'e-icon-wrapper',\n            anchorWrap: 'e-anchor-wrap'\n        };\n    }\n    function anchorTag(createElement, dataSource, fields, text, innerElements, isFullNavigation) {\n        var fieldData = getFieldValues(dataSource, fields);\n        var attr = { href: fieldData[fields.url] };\n        if (fieldData.hasOwnProperty(fields.urlAttributes) && fieldData[fields.urlAttributes]) {\n            merge(attr, fieldData[fields.urlAttributes]);\n            attr.href = fieldData[fields.url] ? fieldData[fields.url] :\n                fieldData[fields.urlAttributes].href;\n        }\n        var anchorTag;\n        if (!isFullNavigation) {\n            anchorTag = createElement('a', { className: cssClass.text + ' ' + cssClass.url, innerHTML: text });\n        }\n        else {\n            anchorTag = createElement('a', { className: cssClass.text + ' ' + cssClass.url });\n            var anchorWrapper = createElement('div', { className: cssClass.anchorWrap });\n            if (innerElements && innerElements.length) {\n                append(innerElements, anchorWrapper);\n            }\n            anchorWrapper.appendChild(document.createTextNode(text));\n            append([anchorWrapper], anchorTag);\n        }\n        setAttribute(anchorTag, attr);\n        return anchorTag;\n    }\n    /* tslint:disable:align */\n    function generateLI(createElement, item, fieldData, fields, className, options) {\n        var curOpt = extend({}, defaultListBaseOptions, options);\n        var ariaAttributes = extend({}, defaultAriaAttributes, curOpt.ariaAttributes);\n        var text = item;\n        var uID;\n        var grpLI;\n        var dataSource;\n        if (typeof item !== 'string' && typeof item !== 'number') {\n            dataSource = item;\n            text = fieldData[fields.text] || '';\n            uID = fieldData[fields.id];\n            grpLI = (item.hasOwnProperty('isHeader') && item.isHeader)\n                ? true : false;\n        }\n        if (options && options.enableHtmlSanitizer) {\n            text = SanitizeHtmlHelper.sanitize(text);\n        }\n        var li = createElement('li', {\n            className: (grpLI === true ? cssClass.group : cssClass.li) + ' ' + (isNullOrUndefined(className) ? '' : className),\n            attrs: (ariaAttributes.groupItemRole !== '' && ariaAttributes.itemRole !== '' ?\n                { role: (grpLI === true ? ariaAttributes.groupItemRole : ariaAttributes.itemRole) } : {})\n        });\n        !isNullOrUndefined(uID) ? li.setAttribute('data-uid', uID) : li.setAttribute('data-uid', generateId());\n        var blazId = 'BlazId';\n        if (options && !!options.removeBlazorID\n            && typeof item === 'object'\n            && item.hasOwnProperty(blazId)) {\n            delete item[blazId];\n        }\n        if (grpLI && options && options.groupTemplate) {\n            var compiledString = compile(options.groupTemplate);\n            append(compiledString(item, null, null, curOpt.groupTemplateID, !!curOpt.isStringTemplate), li);\n        }\n        else if (!grpLI && options && options.template) {\n            var compiledString = compile(options.template);\n            append(compiledString(item, null, null, curOpt.templateID, !!curOpt.isStringTemplate), li);\n        }\n        else {\n            var innerDiv = createElement('div', {\n                className: cssClass.textContent,\n                attrs: (ariaAttributes.wrapperRole !== '' ? { role: ariaAttributes.wrapperRole } : {})\n            });\n            if (dataSource && (fieldData[fields.url] || (fieldData[fields.urlAttributes] &&\n                fieldData[fields.urlAttributes].href))) {\n                innerDiv.appendChild(anchorTag(createElement, dataSource, fields, text, null, curOpt.itemNavigable));\n            }\n            else {\n                innerDiv.appendChild(createElement('span', {\n                    className: cssClass.text, innerHTML: text,\n                    attrs: (ariaAttributes.itemText !== '' ? { role: ariaAttributes.itemText } : {})\n                }));\n            }\n            li.appendChild(innerDiv);\n        }\n        return li;\n    }\n    /**\n     * Returns UL element based on the given LI element.\n     * @param  {HTMLElement[]} liElement - Specifies array of LI element.\n     * @param  {string} className? - Specifies class name that need to be added in UL element.\n     * @param  {ListBaseOptions} options? - Specifies ListBase options.\n     */\n    function generateUL(createElement, liElement, className, options) {\n        var curOpt = extend({}, defaultListBaseOptions, options);\n        var ariaAttributes = extend({}, defaultAriaAttributes, curOpt.ariaAttributes);\n        cssClass = getModuleClass(curOpt.moduleName);\n        var ulElement = createElement('ul', {\n            className: cssClass.ul + ' ' + (isNullOrUndefined(className) ? '' : className),\n            attrs: (ariaAttributes.listRole !== '' ? { role: ariaAttributes.listRole } : {})\n        });\n        append(liElement, ulElement);\n        return ulElement;\n    }\n    ListBase.generateUL = generateUL;\n    /**\n     * Returns LI element with additional DIV tag based on the given LI element.\n     * @param  {liElement} liElement - Specifies LI element.\n     * @param  {string} className? - Specifies class name that need to be added in created DIV element.\n     * @param  {ListBaseOptions} options? - Specifies ListBase options.\n     */\n    function generateIcon(createElement, liElement, className, options) {\n        var curOpt = extend({}, defaultListBaseOptions, options);\n        cssClass = getModuleClass(curOpt.moduleName);\n        var expandElement = curOpt.expandIconPosition === 'Left' ? prepend : append;\n        expandElement([createElement('div', {\n                className: 'e-icons ' + curOpt.expandIconClass + ' ' +\n                    (isNullOrUndefined(className) ? '' : className)\n            })], liElement.querySelector('.' + cssClass.textContent));\n        return liElement;\n    }\n    ListBase.generateIcon = generateIcon;\n})(ListBase || (ListBase = {}));\n/**\n * Used to get dataSource item from complex data using fields.\n * @param {{[key:string]:Object}|string[]|string} dataSource - Specifies an  JSON or String data.\n * @param {FieldsMapping} fields - Fields that are mapped from the dataSource.\n */\nexport function getFieldValues(dataItem, fields) {\n    var fieldData = {};\n    if (isNullOrUndefined(dataItem) || typeof (dataItem) === 'string' || typeof (dataItem) === 'number'\n        || !isNullOrUndefined(dataItem.isHeader)) {\n        return dataItem;\n    }\n    else {\n        for (var _i = 0, _a = Object.keys(fields); _i < _a.length; _i++) {\n            var field = _a[_i];\n            var dataField = fields[field];\n            var value = !isNullOrUndefined(dataField) &&\n                typeof (dataField) === 'string' ? getValue(dataField, dataItem) : undefined;\n            if (!isNullOrUndefined(value)) {\n                fieldData[dataField] = value;\n            }\n        }\n    }\n    return fieldData;\n}\n"]},"metadata":{},"sourceType":"module"}