{"ast":null,"code":"/**\n * Template compiler for react\n */\nimport { setTemplateEngine, getTemplateEngine, detach, extend } from '@syncfusion/ej2-base';\nimport * as ReactDOM from 'react-dom'; // tslint:disable:no-any\n\nvar stringCompiler = getTemplateEngine();\nexport function compile(templateElement, helper) {\n  if (typeof templateElement === 'string') {\n    return stringCompiler(templateElement, helper);\n  } else {\n    return function (data, component) {\n      var actTemplate = templateElement;\n      var actData = data;\n\n      if (typeof actTemplate === 'object') {\n        actTemplate = templateElement.template;\n        actData = extend({}, data, templateElement.data || {});\n      }\n\n      if (component && component.isReactHybrid) {\n        return [{\n          template: actTemplate,\n          data: data\n        }];\n      } else {\n        var ele = document.createElement('div');\n        document.body.appendChild(ele);\n        ReactDOM.render(actTemplate(actData), ele);\n        detach(ele);\n        return ele.children;\n      }\n    };\n  }\n}\nsetTemplateEngine({\n  compile: compile\n});","map":{"version":3,"sources":["D:/developing/projects/whiteboard2.0/node_modules/@syncfusion/ej2-react-base/src/template.js"],"names":["setTemplateEngine","getTemplateEngine","detach","extend","ReactDOM","stringCompiler","compile","templateElement","helper","data","component","actTemplate","actData","template","isReactHybrid","ele","document","createElement","body","appendChild","render","children"],"mappings":"AAAA;;;AAGA,SAASA,iBAAT,EAA4BC,iBAA5B,EAA+CC,MAA/C,EAAuDC,MAAvD,QAAqE,sBAArE;AACA,OAAO,KAAKC,QAAZ,MAA0B,WAA1B,C,CACA;;AACA,IAAIC,cAAc,GAAGJ,iBAAiB,EAAtC;AACA,OAAO,SAASK,OAAT,CAAiBC,eAAjB,EAAkCC,MAAlC,EAA0C;AAC7C,MAAI,OAAOD,eAAP,KAA2B,QAA/B,EAAyC;AACrC,WAAOF,cAAc,CAACE,eAAD,EAAkBC,MAAlB,CAArB;AACH,GAFD,MAGK;AACD,WAAO,UAAUC,IAAV,EAAgBC,SAAhB,EAA2B;AAC9B,UAAIC,WAAW,GAAGJ,eAAlB;AACA,UAAIK,OAAO,GAAGH,IAAd;;AACA,UAAI,OAAOE,WAAP,KAAuB,QAA3B,EAAqC;AACjCA,QAAAA,WAAW,GAAGJ,eAAe,CAACM,QAA9B;AACAD,QAAAA,OAAO,GAAGT,MAAM,CAAC,EAAD,EAAKM,IAAL,EAAWF,eAAe,CAACE,IAAhB,IAAwB,EAAnC,CAAhB;AACH;;AACD,UAAIC,SAAS,IAAIA,SAAS,CAACI,aAA3B,EAA0C;AACtC,eAAO,CAAC;AAAED,UAAAA,QAAQ,EAAEF,WAAZ;AAAyBF,UAAAA,IAAI,EAAEA;AAA/B,SAAD,CAAP;AACH,OAFD,MAGK;AACD,YAAIM,GAAG,GAAGC,QAAQ,CAACC,aAAT,CAAuB,KAAvB,CAAV;AACAD,QAAAA,QAAQ,CAACE,IAAT,CAAcC,WAAd,CAA0BJ,GAA1B;AACAX,QAAAA,QAAQ,CAACgB,MAAT,CAAgBT,WAAW,CAACC,OAAD,CAA3B,EAAsCG,GAAtC;AACAb,QAAAA,MAAM,CAACa,GAAD,CAAN;AACA,eAAOA,GAAG,CAACM,QAAX;AACH;AACJ,KAjBD;AAkBH;AACJ;AACDrB,iBAAiB,CAAC;AAAEM,EAAAA,OAAO,EAAEA;AAAX,CAAD,CAAjB","sourcesContent":["/**\n * Template compiler for react\n */\nimport { setTemplateEngine, getTemplateEngine, detach, extend } from '@syncfusion/ej2-base';\nimport * as ReactDOM from 'react-dom';\n// tslint:disable:no-any\nvar stringCompiler = getTemplateEngine();\nexport function compile(templateElement, helper) {\n    if (typeof templateElement === 'string') {\n        return stringCompiler(templateElement, helper);\n    }\n    else {\n        return function (data, component) {\n            var actTemplate = templateElement;\n            var actData = data;\n            if (typeof actTemplate === 'object') {\n                actTemplate = templateElement.template;\n                actData = extend({}, data, templateElement.data || {});\n            }\n            if (component && component.isReactHybrid) {\n                return [{ template: actTemplate, data: data }];\n            }\n            else {\n                var ele = document.createElement('div');\n                document.body.appendChild(ele);\n                ReactDOM.render(actTemplate(actData), ele);\n                detach(ele);\n                return ele.children;\n            }\n        };\n    }\n}\nsetTemplateEngine({ compile: compile });\n"]},"metadata":{},"sourceType":"module"}