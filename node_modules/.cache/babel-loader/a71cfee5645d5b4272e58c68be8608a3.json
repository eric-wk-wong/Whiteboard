{"ast":null,"code":"var _jsxFileName = \"/Users/jay/jay-resume/src/components/Blogger/Blogger.js\";\nimport React from \"react\";\nimport firebase from \"../base\";\nimport { SpellInput } from \"./SpellInput\";\n\nfunction Blogger() {\n  const [spells, setSpells] = React.useState([]);\n  const [newSpellName, setNewSpellName] = React.useState();\n  React.useEffect(() => {\n    const unsubscribe = firebase;\n\n    const fetchData = async () => {\n      const db = firebase.firestore();\n      const data = await db.collection(\"spells\").get();\n      setSpells(data.docs.map(doc => ({ ...doc.data(),\n        id: doc.id\n      })));\n    };\n\n    fetchData();\n    return () => unsubscribe();\n  }, []);\n\n  const onCreate = () => {\n    const db = firebase.firestore();\n    db.collection(\"spells\").add({\n      name: newSpellName\n    });\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    value: newSpellName,\n    onChange: e => setNewSpellName(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    onClick: onCreate,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, \"Create\"), React.createElement(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, spells.map(spell => React.createElement(\"li\", {\n    key: spell.name,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, React.createElement(SpellInput, {\n    spell: spell,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  })))));\n}\n\nexport default Blogger;","map":{"version":3,"sources":["/Users/jay/jay-resume/src/components/Blogger/Blogger.js"],"names":["React","firebase","SpellInput","Blogger","spells","setSpells","useState","newSpellName","setNewSpellName","useEffect","unsubscribe","fetchData","db","firestore","data","collection","get","docs","map","doc","id","onCreate","add","name","e","target","value","spell"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,SAArB;AACA,SAASC,UAAT,QAA2B,cAA3B;;AAEA,SAASC,OAAT,GAAmB;AACjB,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBL,KAAK,CAACM,QAAN,CAAe,EAAf,CAA5B;AACA,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCR,KAAK,CAACM,QAAN,EAAxC;AAEAN,EAAAA,KAAK,CAACS,SAAN,CAAgB,MAAM;AACpB,UAAMC,WAAW,GAAGT,QAApB;;AACA,UAAMU,SAAS,GAAG,YAAY;AAC5B,YAAMC,EAAE,GAAGX,QAAQ,CAACY,SAAT,EAAX;AACA,YAAMC,IAAI,GAAG,MAAMF,EAAE,CAACG,UAAH,CAAc,QAAd,EAAwBC,GAAxB,EAAnB;AACAX,MAAAA,SAAS,CAACS,IAAI,CAACG,IAAL,CAAUC,GAAV,CAAcC,GAAG,KAAK,EAAE,GAAGA,GAAG,CAACL,IAAJ,EAAL;AAAiBM,QAAAA,EAAE,EAAED,GAAG,CAACC;AAAzB,OAAL,CAAjB,CAAD,CAAT;AACD,KAJD;;AAKAT,IAAAA,SAAS;AACT,WAAM,MAAKD,WAAW,EAAtB;AACD,GATD,EASG,EATH;;AAWA,QAAMW,QAAQ,GAAG,MAAM;AACrB,UAAMT,EAAE,GAAGX,QAAQ,CAACY,SAAT,EAAX;AACAD,IAAAA,EAAE,CAACG,UAAH,CAAc,QAAd,EAAwBO,GAAxB,CAA4B;AAAEC,MAAAA,IAAI,EAAEhB;AAAR,KAA5B;AACD,GAHD;;AAKA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACM;AACF,IAAA,KAAK,EAAEA,YADL;AAEF,IAAA,QAAQ,EAAEiB,CAAC,IAAIhB,eAAe,CAACgB,CAAC,CAACC,MAAF,CAASC,KAAV,CAF5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADN,EAKE;AAAQ,IAAA,OAAO,EAAEL,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cALF,EAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGjB,MAAM,CAACc,GAAP,CAAWS,KAAK,IACf;AAAI,IAAA,GAAG,EAAEA,KAAK,CAACJ,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,UAAD;AAAY,IAAA,KAAK,EAAEI,KAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADD,CADH,CANA,CADF;AAgBD;;AAED,eAAexB,OAAf","sourcesContent":["import React from \"react\";\nimport firebase from \"../base\";\nimport { SpellInput } from \"./SpellInput\";\n\nfunction Blogger() {\n  const [spells, setSpells] = React.useState([]);\n  const [newSpellName, setNewSpellName] = React.useState();\n\n  React.useEffect(() => {\n    const unsubscribe = firebase\n    const fetchData = async () => {\n      const db = firebase.firestore();\n      const data = await db.collection(\"spells\").get();\n      setSpells(data.docs.map(doc => ({ ...doc.data(), id: doc.id })));\n    };\n    fetchData();\n    return() =>unsubscribe()\n  }, []);\n\n  const onCreate = () => {\n    const db = firebase.firestore();\n    db.collection(\"spells\").add({ name: newSpellName });\n  };\n\n  return (\n    <div>\n          <input\n        value={newSpellName}\n        onChange={e => setNewSpellName(e.target.value)}\n      />\n      <button onClick={onCreate}>Create</button>\n    <ul>\n      {spells.map(spell => (\n        <li key={spell.name}>\n          <SpellInput spell={spell} />\n        </li>\n      ))}\n    </ul>\n    </div>\n  );\n}\n\nexport default Blogger;"]},"metadata":{},"sourceType":"module"}