{"ast":null,"code":"import React, { Component } from 'react';\nimport firebase from '../firebase/base';\nfirebase.auth().onAuthStateChanged(user => {\n  if (user) {\n    var db = firebase.firestore();\n    db.collection('user').doc(user.uid).get().then(snapshot => {\n      /*this.setState({userName: snapshot.data().name,\r\n                     userType: snapshot.data().type,\r\n                     userCourse: snapshot.data().course,\r\n                     userEmail: user.email\r\n                   })*/\n      const userName = snapshot.data().name;\n      const userType = snapshot.data().type;\n      const userCourse = snapshot.data().course;\n      const userEmail = user.email;\n      const registeredCourse = [];\n      userEmail.map(course => {\n        db.doc(course).get().then(snapshot => {\n          registeredCourse.push(snapshot.data().name);\n          /*this.setState({\r\n              registeredCourse: [...this.state.registeredCourse,snapshot.data().name]\r\n              })}\r\n            )*/\n        });\n      });\n    }).catch(error => console.log(error));\n  } else {}\n});\nexport default {\n  userName,\n  userType,\n  userCourse,\n  userEmail,\n  registeredCourse\n};\n/*export default class UserInfo extends React.Component {\r\n  state = {\r\n     userName: null,\r\n     userType: null,\r\n     userEmail: null,\r\n     userCourse: [],\r\n     registeredCourse: []\r\n   }\r\n  componentDidMount(){\r\n    firebase.auth().onAuthStateChanged((user) => {\r\n      if (user) {\r\n        var db = firebase.firestore()\r\n        db.collection('user').doc(user.uid)\r\n            .get()\r\n            .then(snapshot => {\r\n                this.setState({userName: snapshot.data().name,\r\n                               userType: snapshot.data().type,\r\n                               userCourse: snapshot.data().course,\r\n                               userEmail: user.email\r\n                                })\r\n                this.state.userCourse.map(course => {\r\n                  db.doc(course).get().then(\r\n                        snapshot => {\r\n                            this.setState({\r\n                                registeredCourse: [...this.state.registeredCourse,snapshot.data().name]\r\n                                })}\r\n                              )\r\n                          })\r\n            }).catch(error => console.log(error))\r\n\r\n      } else {\r\n\r\n      }})\r\n  }\r\n  export const state = {\r\n    userName: this.state.userName,\r\n    userType: this.state.userType,\r\n    userEmail: this.state.userEmail,\r\n    userCourse: this.state.userCourse,\r\n    registeredCourse: this.state.registeredCourse\r\n  }\r\n}*/","map":{"version":3,"sources":["D:/developing/projects/whiteboard2.0/src/components/firebase/UserInfo.js"],"names":["React","Component","firebase","auth","onAuthStateChanged","user","db","firestore","collection","doc","uid","get","then","snapshot","userName","data","name","userType","type","userCourse","course","userEmail","email","registeredCourse","map","push","catch","error","console","log"],"mappings":"AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,QAAP,MAAqB,kBAArB;AAEAA,QAAQ,CAACC,IAAT,GAAgBC,kBAAhB,CAAoCC,IAAD,IAAU;AACxC,MAAIA,IAAJ,EAAU;AACR,QAAIC,EAAE,GAAGJ,QAAQ,CAACK,SAAT,EAAT;AACAD,IAAAA,EAAE,CAACE,UAAH,CAAc,MAAd,EAAsBC,GAAtB,CAA0BJ,IAAI,CAACK,GAA/B,EACKC,GADL,GAEKC,IAFL,CAEUC,QAAQ,IAAI;AACd;;;;;AAKD,YAAMC,QAAQ,GAAGD,QAAQ,CAACE,IAAT,GAAgBC,IAAjC;AACA,YAAMC,QAAQ,GAAGJ,QAAQ,CAACE,IAAT,GAAgBG,IAAjC;AACA,YAAMC,UAAU,GAAGN,QAAQ,CAACE,IAAT,GAAgBK,MAAnC;AACA,YAAMC,SAAS,GAAGhB,IAAI,CAACiB,KAAvB;AACA,YAAMC,gBAAgB,GAAG,EAAzB;AACCF,MAAAA,SAAS,CAACG,GAAV,CAAcJ,MAAM,IAAI;AACtBd,QAAAA,EAAE,CAACG,GAAH,CAAOW,MAAP,EAAeT,GAAf,GAAqBC,IAArB,CACMC,QAAQ,IAAI;AACVU,UAAAA,gBAAgB,CAACE,IAAjB,CAAsBZ,QAAQ,CAACE,IAAT,GAAgBC,IAAtC;AAEE;;;;AAID,SART;AASO,OAVT;AAYH,KAzBL,EAyBOU,KAzBP,CAyBaC,KAAK,IAAIC,OAAO,CAACC,GAAR,CAAYF,KAAZ,CAzBtB;AA2BD,GA7BD,MA6BO,CAEN;AAAC,CAhCP;AAiCA,eAAe;AAACb,EAAAA,QAAD;AAAUG,EAAAA,QAAV;AAAmBE,EAAAA,UAAnB;AAA8BE,EAAAA,SAA9B;AAAwCE,EAAAA;AAAxC,CAAf;AACA","sourcesContent":["import React, {Component} from 'react';\r\nimport firebase from '../firebase/base';\r\n\r\nfirebase.auth().onAuthStateChanged((user) => {\r\n     if (user) {\r\n       var db = firebase.firestore()\r\n       db.collection('user').doc(user.uid)\r\n           .get()\r\n           .then(snapshot => {\r\n               /*this.setState({userName: snapshot.data().name,\r\n                              userType: snapshot.data().type,\r\n                              userCourse: snapshot.data().course,\r\n                              userEmail: user.email\r\n                            })*/\r\n              const userName = snapshot.data().name\r\n              const userType = snapshot.data().type\r\n              const userCourse = snapshot.data().course\r\n              const userEmail = user.email\r\n              const registeredCourse = []\r\n               userEmail.map(course => {\r\n                 db.doc(course).get().then(\r\n                       snapshot => {\r\n                         registeredCourse.push(snapshot.data().name)\r\n\r\n                           /*this.setState({\r\n                               registeredCourse: [...this.state.registeredCourse,snapshot.data().name]\r\n                               })}\r\n                             )*/\r\n                         })\r\n                       })\r\n\r\n           }).catch(error => console.log(error))\r\n\r\n     } else {\r\n\r\n     }})\r\nexport default {userName,userType,userCourse,userEmail,registeredCourse}\r\n/*export default class UserInfo extends React.Component {\r\n  state = {\r\n     userName: null,\r\n     userType: null,\r\n     userEmail: null,\r\n     userCourse: [],\r\n     registeredCourse: []\r\n   }\r\n  componentDidMount(){\r\n    firebase.auth().onAuthStateChanged((user) => {\r\n      if (user) {\r\n        var db = firebase.firestore()\r\n        db.collection('user').doc(user.uid)\r\n            .get()\r\n            .then(snapshot => {\r\n                this.setState({userName: snapshot.data().name,\r\n                               userType: snapshot.data().type,\r\n                               userCourse: snapshot.data().course,\r\n                               userEmail: user.email\r\n                                })\r\n                this.state.userCourse.map(course => {\r\n                  db.doc(course).get().then(\r\n                        snapshot => {\r\n                            this.setState({\r\n                                registeredCourse: [...this.state.registeredCourse,snapshot.data().name]\r\n                                })}\r\n                              )\r\n                          })\r\n            }).catch(error => console.log(error))\r\n\r\n      } else {\r\n\r\n      }})\r\n  }\r\n  export const state = {\r\n    userName: this.state.userName,\r\n    userType: this.state.userType,\r\n    userEmail: this.state.userEmail,\r\n    userCourse: this.state.userCourse,\r\n    registeredCourse: this.state.registeredCourse\r\n  }\r\n}*/\r\n"]},"metadata":{},"sourceType":"module"}