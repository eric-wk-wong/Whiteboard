{"ast":null,"code":"var _jsxFileName = \"D:\\\\developing\\\\projects\\\\whiteboard2.0\\\\src\\\\components\\\\page\\\\Assignment.js\";\nimport React from \"react\";\nimport firebase from \"../firebase/base\";\nimport { SpellInput_assignment } from \"./add_assignment\";\nimport { Button } from 'react-bootstrap';\n\nclass Assignment extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      spells: null,\n      newSpellName: null\n    };\n\n    this.onCreate = () => {\n      const db = firebase.firestore();\n      db.collection(\"cis4160_assignments\").add({\n        name: this.state.newSpellName\n      });\n    };\n  }\n\n  componentDidMount() {\n    const db = firebase.firestore();\n    db.collection(\"cis4160_assignments\").onSnapshot(snapshot => {\n      const spellsData = [];\n      snapshot.forEach(doc => spellsData.push({ ...doc.data(),\n        id: doc.id\n      }));\n      this.setState({\n        spells: spellsData\n      });\n    });\n  }\n\n  render() {\n    console.log(this.props);\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, this.state.spells.map(spell => React.createElement(\"div\", {\n      key: spell.name,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, React.createElement(SpellInput_assignment, {\n      spell: spell,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nexport default Assignment;","map":{"version":3,"sources":["D:/developing/projects/whiteboard2.0/src/components/page/Assignment.js"],"names":["React","firebase","SpellInput_assignment","Button","Assignment","Component","state","spells","newSpellName","onCreate","db","firestore","collection","add","name","componentDidMount","onSnapshot","snapshot","spellsData","forEach","doc","push","data","id","setState","render","console","log","props","map","spell"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,kBAArB;AACA,SAASC,qBAAT,QAAsC,kBAAtC;AACA,SAAQC,MAAR,QAAqB,iBAArB;;AAEA,MAAMC,UAAN,SAAyBJ,KAAK,CAACK,SAA/B,CAAyC;AAAA;AAAA;AAAA,SAEvCC,KAFuC,GAE/B;AACNC,MAAAA,MAAM,EAAE,IADF;AAENC,MAAAA,YAAY,EAAE;AAFR,KAF+B;;AAAA,SAgBvCC,QAhBuC,GAgB5B,MAAM;AACf,YAAMC,EAAE,GAAGT,QAAQ,CAACU,SAAT,EAAX;AACAD,MAAAA,EAAE,CAACE,UAAH,CAAc,qBAAd,EAAqCC,GAArC,CAAyC;AAAEC,QAAAA,IAAI,EAAE,KAAKR,KAAL,CAAWE;AAAnB,OAAzC;AACD,KAnBsC;AAAA;;AAMvCO,EAAAA,iBAAiB,GAAE;AACf,UAAML,EAAE,GAAGT,QAAQ,CAACU,SAAT,EAAX;AACAD,IAAAA,EAAE,CAACE,UAAH,CAAc,qBAAd,EAAqCI,UAArC,CAAgDC,QAAQ,IAAI;AAC1D,YAAMC,UAAU,GAAG,EAAnB;AACAD,MAAAA,QAAQ,CAACE,OAAT,CAAiBC,GAAG,IAAIF,UAAU,CAACG,IAAX,CAAgB,EAAE,GAAGD,GAAG,CAACE,IAAJ,EAAL;AAAiBC,QAAAA,EAAE,EAAEH,GAAG,CAACG;AAAzB,OAAhB,CAAxB;AACA,WAAKC,QAAL,CAAc;AAACjB,QAAAA,MAAM,EAAEW;AAAT,OAAd;AACD,KAJD;AAKH;;AAQHO,EAAAA,MAAM,GAAE;AACNC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKC,KAAjB;AACA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAYG,KAAKtB,KAAL,CAAWC,MAAX,CAAkBsB,GAAlB,CAAsBC,KAAK,IAC1B;AAAK,MAAA,GAAG,EAAEA,KAAK,CAAChB,IAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,qBAAD;AAAuB,MAAA,KAAK,EAAEgB,KAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADD,CAZH,CADF;AAoBC;;AA3CsC;;AA8CzC,eAAe1B,UAAf","sourcesContent":["import React from \"react\";\nimport firebase from \"../firebase/base\";\nimport { SpellInput_assignment } from \"./add_assignment\";\nimport {Button} from 'react-bootstrap';\n\nclass Assignment extends React.Component {\n\n  state = {\n    spells: null,\n    newSpellName: null\n  }\n  componentDidMount(){\n      const db = firebase.firestore()\n      db.collection(\"cis4160_assignments\").onSnapshot(snapshot => {\n        const spellsData = [];\n        snapshot.forEach(doc => spellsData.push({ ...doc.data(), id: doc.id }));\n        this.setState({spells: spellsData})\n      });\n  }\n\n\n  onCreate = () => {\n    const db = firebase.firestore();\n    db.collection(\"cis4160_assignments\").add({ name: this.state.newSpellName });\n  }\n\nrender(){\n  console.log(this.props)\n  return (\n    <div>\n      {/*\n      <textarea\n        value={newSpellName}\n        onChange={e => setNewSpellName(e.target.value)}\n        className=\"inputwidth expand\"\n        placeholder=\"Desciprion here...\"\n      />\n\n      <Button variant=\"primary\" className=\"addwidth expand\" onClick={onCreate}><strong>+</strong></Button>\n      <hr/>*/}\n\n      {this.state.spells.map(spell => (\n        <div key={spell.name}>\n          <SpellInput_assignment spell={spell}/>\n        </div>\n      ))}\n    </div>\n    )\n  }\n}\n\nexport default Assignment;\n"]},"metadata":{},"sourceType":"module"}