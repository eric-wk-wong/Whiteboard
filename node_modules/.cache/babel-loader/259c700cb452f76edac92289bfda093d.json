{"ast":null,"code":"/**\n * FloatLable Moduel\n * Specifies whether to display the floating label above the input element.\n */\nimport { removeClass, addClass, detach } from '@syncfusion/ej2-base';\nimport { attributes, isNullOrUndefined, createElement } from '@syncfusion/ej2-base';\nvar FLOATLINE = 'e-float-line';\nvar FLOATTEXT = 'e-float-text';\nvar LABELTOP = 'e-label-top';\nvar LABELBOTTOM = 'e-label-bottom';\n/**\n * Function to create Float Label element.\n * @param overAllWrapper - overall wrapper of multiselect.\n * @param element - the given html element.\n * @param inputElement - specify the input wrapper.\n * @param value - Value of the MultiSelect.\n * @param floatLabelType - Specify the FloatLabel Type.\n * @param placeholder - Specify the PlaceHolder text.\n */\n\nexport function createFloatLabel(overAllWrapper, searchWrapper, element, inputElement, value, floatLabelType, placeholder) {\n  var floatLinelement;\n  var floatLabelElement;\n  floatLinelement = createElement('span', {\n    className: FLOATLINE\n  });\n  floatLabelElement = createElement('label', {\n    className: FLOATTEXT\n  });\n\n  if (!isNullOrUndefined(element.id) && element.id !== '') {\n    floatLabelElement.id = 'label_' + element.id.replace(/ /g, '_');\n    attributes(element, {\n      'aria-labelledby': floatLabelElement.id\n    });\n  }\n\n  if (!isNullOrUndefined(inputElement.placeholder) && inputElement.placeholder !== '') {\n    floatLabelElement.innerHTML = inputElement.placeholder;\n    inputElement.removeAttribute('placeholder');\n  }\n\n  floatLabelElement.innerHTML = placeholder;\n  searchWrapper.appendChild(floatLinelement);\n  searchWrapper.appendChild(floatLabelElement);\n  overAllWrapper.classList.add('e-float-input');\n  updateFloatLabelState(value, floatLabelElement);\n\n  if (floatLabelType === 'Always') {\n    if (floatLabelElement.classList.contains(LABELBOTTOM)) {\n      removeClass([floatLabelElement], LABELBOTTOM);\n    }\n\n    addClass([floatLabelElement], LABELTOP);\n  }\n}\n/**\n * Function to update status of the Float Label element.\n * @param value - Value of the MultiSelect.\n * @param label - float label element.\n */\n\nexport function updateFloatLabelState(value, label) {\n  if (value && value.length > 0) {\n    addClass([label], LABELTOP);\n    removeClass([label], LABELBOTTOM);\n  } else {\n    removeClass([label], LABELTOP);\n    addClass([label], LABELBOTTOM);\n  }\n}\n/**\n * Function to remove Float Label element.\n * @param overAllWrapper - overall wrapper of multiselect.\n * @param componentWrapper - wrapper element of multiselect.\n * @param searchWrapper - search wrapper of multiselect.\n * @param inputElement - specify the input wrapper.\n * @param value - Value of the MultiSelect.\n * @param floatLabelType - Specify the FloatLabel Type.\n * @param placeholder - Specify the PlaceHolder text.\n */\n\nexport function removeFloating(overAllWrapper, componentWrapper, searchWrapper, inputElement, value, floatLabelType, placeholder) {\n  var placeholderElement = componentWrapper.querySelector('.' + FLOATTEXT);\n  var floatLine = componentWrapper.querySelector('.' + FLOATLINE);\n  var placeholderText;\n\n  if (!isNullOrUndefined(placeholderElement)) {\n    placeholderText = placeholderElement.innerText;\n    detach(searchWrapper.querySelector('.' + FLOATTEXT));\n    setPlaceHolder(value, inputElement, placeholderText);\n\n    if (!isNullOrUndefined(floatLine)) {\n      detach(searchWrapper.querySelector('.' + FLOATLINE));\n    }\n  } else {\n    placeholderText = placeholder !== null ? placeholder : '';\n    setPlaceHolder(value, inputElement, placeholderText);\n  }\n\n  overAllWrapper.classList.remove('e-float-input');\n}\n/**\n * Function to set the placeholder to the element.\n * @param value - Value of the MultiSelect.\n * @param inputElement - specify the input wrapper.\n * @param placeholder - Specify the PlaceHolder text.\n */\n\nexport function setPlaceHolder(value, inputElement, placeholder) {\n  if (value && value.length) {\n    inputElement.placeholder = '';\n  } else {\n    inputElement.placeholder = placeholder;\n  }\n}\n/**\n * Function for focusing the Float Element.\n * @param overAllWrapper - overall wrapper of multiselect.\n * @param componentWrapper - wrapper element of multiselect.\n */\n\nexport function floatLabelFocus(overAllWrapper, componentWrapper) {\n  overAllWrapper.classList.add('e-input-focus');\n  var label = componentWrapper.querySelector('.' + FLOATTEXT);\n\n  if (!isNullOrUndefined(label)) {\n    addClass([label], LABELTOP);\n\n    if (label.classList.contains(LABELBOTTOM)) {\n      removeClass([label], LABELBOTTOM);\n    }\n  }\n}\n/**\n * Function to focus the Float Label element.\n * @param overAllWrapper - overall wrapper of multiselect.\n * @param componentWrapper - wrapper element of multiselect.\n * @param value - Value of the MultiSelect.\n * @param floatLabelType - Specify the FloatLabel Type.\n * @param placeholder - Specify the PlaceHolder text.\n */\n\nexport function floatLabelBlur(overAllWrapper, componentWrapper, value, floatLabelType, placeholder) {\n  overAllWrapper.classList.remove('e-input-focus');\n  var label = componentWrapper.querySelector('.' + FLOATTEXT);\n\n  if (value && value.length <= 0 && floatLabelType === 'Auto' && !isNullOrUndefined(label)) {\n    if (label.classList.contains(LABELTOP)) {\n      removeClass([label], LABELTOP);\n    }\n\n    addClass([label], LABELBOTTOM);\n  }\n}","map":{"version":3,"sources":["/Users/ewong/Development/Whiteboard/node_modules/@syncfusion/ej2-dropdowns/src/multi-select/float-label.js"],"names":["removeClass","addClass","detach","attributes","isNullOrUndefined","createElement","FLOATLINE","FLOATTEXT","LABELTOP","LABELBOTTOM","createFloatLabel","overAllWrapper","searchWrapper","element","inputElement","value","floatLabelType","placeholder","floatLinelement","floatLabelElement","className","id","replace","innerHTML","removeAttribute","appendChild","classList","add","updateFloatLabelState","contains","label","length","removeFloating","componentWrapper","placeholderElement","querySelector","floatLine","placeholderText","innerText","setPlaceHolder","remove","floatLabelFocus","floatLabelBlur"],"mappings":"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","sourcesContent":["/**\n * FloatLable Moduel\n * Specifies whether to display the floating label above the input element.\n */\nimport { removeClass, addClass, detach } from '@syncfusion/ej2-base';\nimport { attributes, isNullOrUndefined, createElement } from '@syncfusion/ej2-base';\nvar FLOATLINE = 'e-float-line';\nvar FLOATTEXT = 'e-float-text';\nvar LABELTOP = 'e-label-top';\nvar LABELBOTTOM = 'e-label-bottom';\n/**\n * Function to create Float Label element.\n * @param overAllWrapper - overall wrapper of multiselect.\n * @param element - the given html element.\n * @param inputElement - specify the input wrapper.\n * @param value - Value of the MultiSelect.\n * @param floatLabelType - Specify the FloatLabel Type.\n * @param placeholder - Specify the PlaceHolder text.\n */\nexport function createFloatLabel(overAllWrapper, searchWrapper, element, inputElement, value, floatLabelType, placeholder) {\n    var floatLinelement;\n    var floatLabelElement;\n    floatLinelement = createElement('span', { className: FLOATLINE });\n    floatLabelElement = createElement('label', { className: FLOATTEXT });\n    if (!isNullOrUndefined(element.id) && element.id !== '') {\n        floatLabelElement.id = 'label_' + element.id.replace(/ /g, '_');\n        attributes(element, { 'aria-labelledby': floatLabelElement.id });\n    }\n    if (!isNullOrUndefined(inputElement.placeholder) && inputElement.placeholder !== '') {\n        floatLabelElement.innerHTML = inputElement.placeholder;\n        inputElement.removeAttribute('placeholder');\n    }\n    floatLabelElement.innerHTML = placeholder;\n    searchWrapper.appendChild(floatLinelement);\n    searchWrapper.appendChild(floatLabelElement);\n    overAllWrapper.classList.add('e-float-input');\n    updateFloatLabelState(value, floatLabelElement);\n    if (floatLabelType === 'Always') {\n        if (floatLabelElement.classList.contains(LABELBOTTOM)) {\n            removeClass([floatLabelElement], LABELBOTTOM);\n        }\n        addClass([floatLabelElement], LABELTOP);\n    }\n}\n/**\n * Function to update status of the Float Label element.\n * @param value - Value of the MultiSelect.\n * @param label - float label element.\n */\nexport function updateFloatLabelState(value, label) {\n    if (value && value.length > 0) {\n        addClass([label], LABELTOP);\n        removeClass([label], LABELBOTTOM);\n    }\n    else {\n        removeClass([label], LABELTOP);\n        addClass([label], LABELBOTTOM);\n    }\n}\n/**\n * Function to remove Float Label element.\n * @param overAllWrapper - overall wrapper of multiselect.\n * @param componentWrapper - wrapper element of multiselect.\n * @param searchWrapper - search wrapper of multiselect.\n * @param inputElement - specify the input wrapper.\n * @param value - Value of the MultiSelect.\n * @param floatLabelType - Specify the FloatLabel Type.\n * @param placeholder - Specify the PlaceHolder text.\n */\nexport function removeFloating(overAllWrapper, componentWrapper, searchWrapper, inputElement, value, floatLabelType, placeholder) {\n    var placeholderElement = componentWrapper.querySelector('.' + FLOATTEXT);\n    var floatLine = componentWrapper.querySelector('.' + FLOATLINE);\n    var placeholderText;\n    if (!isNullOrUndefined(placeholderElement)) {\n        placeholderText = placeholderElement.innerText;\n        detach(searchWrapper.querySelector('.' + FLOATTEXT));\n        setPlaceHolder(value, inputElement, placeholderText);\n        if (!isNullOrUndefined(floatLine)) {\n            detach(searchWrapper.querySelector('.' + FLOATLINE));\n        }\n    }\n    else {\n        placeholderText = (placeholder !== null) ? placeholder : '';\n        setPlaceHolder(value, inputElement, placeholderText);\n    }\n    overAllWrapper.classList.remove('e-float-input');\n}\n/**\n * Function to set the placeholder to the element.\n * @param value - Value of the MultiSelect.\n * @param inputElement - specify the input wrapper.\n * @param placeholder - Specify the PlaceHolder text.\n */\nexport function setPlaceHolder(value, inputElement, placeholder) {\n    if (value && value.length) {\n        inputElement.placeholder = '';\n    }\n    else {\n        inputElement.placeholder = placeholder;\n    }\n}\n/**\n * Function for focusing the Float Element.\n * @param overAllWrapper - overall wrapper of multiselect.\n * @param componentWrapper - wrapper element of multiselect.\n */\nexport function floatLabelFocus(overAllWrapper, componentWrapper) {\n    overAllWrapper.classList.add('e-input-focus');\n    var label = componentWrapper.querySelector('.' + FLOATTEXT);\n    if (!isNullOrUndefined(label)) {\n        addClass([label], LABELTOP);\n        if (label.classList.contains(LABELBOTTOM)) {\n            removeClass([label], LABELBOTTOM);\n        }\n    }\n}\n/**\n * Function to focus the Float Label element.\n * @param overAllWrapper - overall wrapper of multiselect.\n * @param componentWrapper - wrapper element of multiselect.\n * @param value - Value of the MultiSelect.\n * @param floatLabelType - Specify the FloatLabel Type.\n * @param placeholder - Specify the PlaceHolder text.\n */\nexport function floatLabelBlur(overAllWrapper, componentWrapper, value, floatLabelType, placeholder) {\n    overAllWrapper.classList.remove('e-input-focus');\n    var label = componentWrapper.querySelector('.' + FLOATTEXT);\n    if (value && value.length <= 0 && floatLabelType === 'Auto' && !isNullOrUndefined(label)) {\n        if (label.classList.contains(LABELTOP)) {\n            removeClass([label], LABELTOP);\n        }\n        addClass([label], LABELBOTTOM);\n    }\n}\n"]},"metadata":{},"sourceType":"module"}