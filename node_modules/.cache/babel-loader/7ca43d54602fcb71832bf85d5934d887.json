{"ast":null,"code":"import { isNullOrUndefined, extend } from '@syncfusion/ej2-base';\nimport { DataManager, Query } from '@syncfusion/ej2-data';\nimport { getRecurrenceStringFromDate } from '../../recurrence-editor/date-generator';\n/**\n * ICalendar Import Module\n */\n\nvar ICalendarImport =\n/** @class */\nfunction () {\n  function ICalendarImport(parent) {\n    this.allDay = false;\n    this.parent = parent;\n  }\n\n  ICalendarImport.prototype.initializeCalendarImport = function (fileContent) {\n    var _this = this;\n\n    if (fileContent && fileContent instanceof Blob) {\n      var fileReader_1 = new FileReader();\n\n      fileReader_1.onload = function (event) {\n        var iCalString = fileReader_1.result;\n\n        _this.iCalendarParser(iCalString);\n      };\n\n      fileReader_1.readAsText(fileContent, 'ISO-8859-8');\n    } else if (fileContent && typeof fileContent === 'string') {\n      this.iCalendarParser(fileContent);\n    }\n  };\n\n  ICalendarImport.prototype.iCalendarParser = function (iCalString) {\n    var _this = this;\n\n    var fields = this.parent.eventFields;\n    var events = [];\n    var uId = 'UID';\n    var calArray = iCalString.replace(new RegExp('\\\\r', 'g'), '').split('\\n');\n    var isEvent = false;\n    var curEvent = null;\n    var id = this.parent.eventBase.getEventMaxID();\n    calArray.forEach(function (element) {\n      var index;\n      var type;\n      var value;\n\n      if (!isEvent && element === 'BEGIN:VEVENT') {\n        isEvent = true;\n        curEvent = {};\n      }\n\n      if (isEvent && element === 'END:VEVENT') {\n        isEvent = false;\n        events.push(curEvent);\n        curEvent = null;\n      }\n\n      if (isEvent) {\n        index = element.indexOf(':');\n        type = element.substr(0, index).replace(/^\\s\\s*/, '').replace(/\\s\\s*$/, '');\n        value = element.substr(index + 1, element.length - (index + 1)).replace(/^\\s\\s*/, '').replace(/\\s\\s*$/, '');\n\n        if (element.indexOf('SUMMARY') !== -1) {\n          type = 'SUMMARY';\n        }\n\n        if (element.indexOf('DTSTART') !== -1) {\n          curEvent[fields.startTime] = _this.dateParsing(element);\n          curEvent[fields.isAllDay] = _this.allDay;\n          _this.allDay = false;\n        } else if (element.indexOf('DTEND') !== -1) {\n          curEvent[fields.endTime] = _this.dateParsing(element);\n        } else if (element.indexOf('EXDATE') !== -1) {\n          value = getRecurrenceStringFromDate(_this.dateParsing(element));\n          curEvent[fields.recurrenceException] = isNullOrUndefined(curEvent[fields.recurrenceException]) ? value : curEvent[fields.recurrenceException] + ',' + value;\n        } else if (element.indexOf('RECURRENCE-ID') !== -1) {\n          value = getRecurrenceStringFromDate(_this.dateParsing(element));\n          curEvent[fields.recurrenceException] = value;\n          curEvent[fields.recurrenceID] = value;\n        } else {\n          switch (type) {\n            case 'BEGIN':\n              break;\n\n            case 'UID':\n              curEvent[uId] = value;\n              curEvent[fields.id] = id++;\n              break;\n\n            case 'SUMMARY':\n              curEvent[fields.subject] = value;\n              break;\n\n            case 'LOCATION':\n              curEvent[fields.location] = value;\n              break;\n\n            case 'DESCRIPTION':\n              curEvent[fields.description] = value;\n              break;\n\n            case 'RRULE':\n              curEvent[fields.recurrenceRule] = value;\n              break;\n\n            default:\n              curEvent[type] = value;\n          }\n        }\n      }\n    });\n    var app = extend([], events, null, true);\n    this.parent.addEvent(this.processOccurrence(app));\n  };\n\n  ICalendarImport.prototype.processOccurrence = function (app) {\n    var appoint = [];\n    var uId = 'UID';\n    var fields = this.parent.eventFields;\n    app.forEach(function (eventObj) {\n      var parentObj;\n      var id;\n\n      if (!eventObj.hasOwnProperty(fields.recurrenceID)) {\n        parentObj = eventObj;\n        id = eventObj[fields.id];\n      }\n\n      var data = new DataManager({\n        json: app\n      }).executeLocal(new Query().where('UID', 'equal', eventObj[uId]));\n\n      if (data.length > 1 && isNullOrUndefined(eventObj[fields.recurrenceID])) {\n        for (var i = 0; i < data.length; i++) {\n          if (data[i].hasOwnProperty(fields.recurrenceID)) {\n            var exdate = data[i][fields.recurrenceID];\n            data[i][fields.recurrenceID] = id;\n            data[i][fields.recurrenceException] = null;\n            parentObj[fields.recurrenceException] = isNullOrUndefined(parentObj[fields.recurrenceException]) ? exdate : parentObj[fields.recurrenceException] + ',' + exdate;\n            appoint.push(data[i]);\n          }\n        }\n\n        appoint.push(parentObj);\n      } else if (!eventObj.hasOwnProperty(fields.recurrenceID)) {\n        appoint.push(eventObj);\n      }\n    });\n    return appoint;\n  };\n\n  ICalendarImport.prototype.getDateString = function (value) {\n    value = value || '';\n    return value.replace(/\\\\\\,/g, ',').replace(/\\\\\\;/g, ';').replace(/\\\\[nN]/g, '\\n').replace(/\\\\\\\\/g, '\\\\');\n  };\n\n  ICalendarImport.prototype.dateParsing = function (element) {\n    var expression = /([^':;]+)((?:;(?:[^':;]+)(?:=(?:(?:'[^']*')|(?:[^':;]+))))*):(.*)/;\n    var split = element.match(expression).slice(1);\n    var value = split[split.length - 1];\n    var newDate = new Date(this.getDateString(value));\n\n    if (element && element.indexOf('VALUE=DATE') > -1) {\n      var data_1 = /^(\\d{4})(\\d{2})(\\d{2})$/.exec(value);\n\n      if (data_1 !== null) {\n        newDate = new Date(parseInt(data_1[1], 10), parseInt(data_1[2], 10) - 1, parseInt(data_1[3], 10));\n      }\n\n      if (element.indexOf('DTSTART') > -1) {\n        this.allDay = true;\n      }\n    }\n\n    var data = /^(\\d{4})(\\d{2})(\\d{2})T(\\d{2})(\\d{2})(\\d{2})(Z)?$/.exec(value);\n\n    if (data !== null) {\n      if (data[7] === 'Z') {\n        newDate = new Date(Date.UTC(parseInt(data[1], 10), parseInt(data[2], 10) - 1, parseInt(data[3], 10), parseInt(data[4], 10), parseInt(data[5], 10), parseInt(data[6], 10)));\n      } else {\n        newDate = new Date(parseInt(data[1], 10), parseInt(data[2], 10) - 1, parseInt(data[3], 10), parseInt(data[4], 10), parseInt(data[5], 10), parseInt(data[6], 10));\n      }\n    }\n\n    return newDate;\n  };\n  /**\n   * Get module name.\n   */\n\n\n  ICalendarImport.prototype.getModuleName = function () {\n    return 'iCalendarImport';\n  };\n  /**\n   * To destroy the ICalendarImport.\n   * @return {void}\n   * @private\n   */\n\n\n  ICalendarImport.prototype.destroy = function () {\n    if (this.parent.isDestroyed) {\n      return;\n    }\n  };\n\n  return ICalendarImport;\n}();\n\nexport { ICalendarImport };","map":{"version":3,"sources":["/Users/jay/node_modules/@syncfusion/ej2-schedule/src/schedule/exports/calendar-import.js"],"names":["isNullOrUndefined","extend","DataManager","Query","getRecurrenceStringFromDate","ICalendarImport","parent","allDay","prototype","initializeCalendarImport","fileContent","_this","Blob","fileReader_1","FileReader","onload","event","iCalString","result","iCalendarParser","readAsText","fields","eventFields","events","uId","calArray","replace","RegExp","split","isEvent","curEvent","id","eventBase","getEventMaxID","forEach","element","index","type","value","push","indexOf","substr","length","startTime","dateParsing","isAllDay","endTime","recurrenceException","recurrenceID","subject","location","description","recurrenceRule","app","addEvent","processOccurrence","appoint","eventObj","parentObj","hasOwnProperty","data","json","executeLocal","where","i","exdate","getDateString","expression","match","slice","newDate","Date","data_1","exec","parseInt","UTC","getModuleName","destroy","isDestroyed"],"mappings":"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","sourcesContent":["import { isNullOrUndefined, extend } from '@syncfusion/ej2-base';\nimport { DataManager, Query } from '@syncfusion/ej2-data';\nimport { getRecurrenceStringFromDate } from '../../recurrence-editor/date-generator';\n/**\n * ICalendar Import Module\n */\nvar ICalendarImport = /** @class */ (function () {\n    function ICalendarImport(parent) {\n        this.allDay = false;\n        this.parent = parent;\n    }\n    ICalendarImport.prototype.initializeCalendarImport = function (fileContent) {\n        var _this = this;\n        if (fileContent && fileContent instanceof Blob) {\n            var fileReader_1 = new FileReader();\n            fileReader_1.onload = function (event) {\n                var iCalString = fileReader_1.result;\n                _this.iCalendarParser(iCalString);\n            };\n            fileReader_1.readAsText(fileContent, 'ISO-8859-8');\n        }\n        else if (fileContent && typeof fileContent === 'string') {\n            this.iCalendarParser(fileContent);\n        }\n    };\n    ICalendarImport.prototype.iCalendarParser = function (iCalString) {\n        var _this = this;\n        var fields = this.parent.eventFields;\n        var events = [];\n        var uId = 'UID';\n        var calArray = iCalString.replace(new RegExp('\\\\r', 'g'), '').split('\\n');\n        var isEvent = false;\n        var curEvent = null;\n        var id = this.parent.eventBase.getEventMaxID();\n        calArray.forEach(function (element) {\n            var index;\n            var type;\n            var value;\n            if (!isEvent && element === 'BEGIN:VEVENT') {\n                isEvent = true;\n                curEvent = {};\n            }\n            if (isEvent && element === 'END:VEVENT') {\n                isEvent = false;\n                events.push(curEvent);\n                curEvent = null;\n            }\n            if (isEvent) {\n                index = element.indexOf(':');\n                type = element.substr(0, index).replace(/^\\s\\s*/, '').replace(/\\s\\s*$/, '');\n                value = element.substr(index + 1, element.length - (index + 1)).replace(/^\\s\\s*/, '').replace(/\\s\\s*$/, '');\n                if (element.indexOf('SUMMARY') !== -1) {\n                    type = 'SUMMARY';\n                }\n                if (element.indexOf('DTSTART') !== -1) {\n                    curEvent[fields.startTime] = _this.dateParsing(element);\n                    curEvent[fields.isAllDay] = _this.allDay;\n                    _this.allDay = false;\n                }\n                else if (element.indexOf('DTEND') !== -1) {\n                    curEvent[fields.endTime] = _this.dateParsing(element);\n                }\n                else if (element.indexOf('EXDATE') !== -1) {\n                    value = getRecurrenceStringFromDate(_this.dateParsing(element));\n                    curEvent[fields.recurrenceException] = (isNullOrUndefined(curEvent[fields.recurrenceException])) ?\n                        value : curEvent[fields.recurrenceException] + ',' + value;\n                }\n                else if (element.indexOf('RECURRENCE-ID') !== -1) {\n                    value = getRecurrenceStringFromDate(_this.dateParsing(element));\n                    curEvent[fields.recurrenceException] = value;\n                    curEvent[fields.recurrenceID] = value;\n                }\n                else {\n                    switch (type) {\n                        case 'BEGIN':\n                            break;\n                        case 'UID':\n                            curEvent[uId] = value;\n                            curEvent[fields.id] = id++;\n                            break;\n                        case 'SUMMARY':\n                            curEvent[fields.subject] = value;\n                            break;\n                        case 'LOCATION':\n                            curEvent[fields.location] = value;\n                            break;\n                        case 'DESCRIPTION':\n                            curEvent[fields.description] = value;\n                            break;\n                        case 'RRULE':\n                            curEvent[fields.recurrenceRule] = value;\n                            break;\n                        default:\n                            curEvent[type] = value;\n                    }\n                }\n            }\n        });\n        var app = extend([], events, null, true);\n        this.parent.addEvent(this.processOccurrence(app));\n    };\n    ICalendarImport.prototype.processOccurrence = function (app) {\n        var appoint = [];\n        var uId = 'UID';\n        var fields = this.parent.eventFields;\n        app.forEach(function (eventObj) {\n            var parentObj;\n            var id;\n            if (!eventObj.hasOwnProperty(fields.recurrenceID)) {\n                parentObj = eventObj;\n                id = eventObj[fields.id];\n            }\n            var data = (new DataManager({ json: app }).executeLocal(new Query().where('UID', 'equal', eventObj[uId])));\n            if (data.length > 1 && isNullOrUndefined(eventObj[fields.recurrenceID])) {\n                for (var i = 0; i < data.length; i++) {\n                    if (data[i].hasOwnProperty(fields.recurrenceID)) {\n                        var exdate = data[i][fields.recurrenceID];\n                        data[i][fields.recurrenceID] = id;\n                        data[i][fields.recurrenceException] = null;\n                        parentObj[fields.recurrenceException] = (isNullOrUndefined(parentObj[fields.recurrenceException])) ?\n                            exdate : parentObj[fields.recurrenceException] + ',' + exdate;\n                        appoint.push(data[i]);\n                    }\n                }\n                appoint.push(parentObj);\n            }\n            else if (!eventObj.hasOwnProperty(fields.recurrenceID)) {\n                appoint.push(eventObj);\n            }\n        });\n        return appoint;\n    };\n    ICalendarImport.prototype.getDateString = function (value) {\n        value = value || '';\n        return (value\n            .replace(/\\\\\\,/g, ',')\n            .replace(/\\\\\\;/g, ';')\n            .replace(/\\\\[nN]/g, '\\n')\n            .replace(/\\\\\\\\/g, '\\\\'));\n    };\n    ICalendarImport.prototype.dateParsing = function (element) {\n        var expression = /([^':;]+)((?:;(?:[^':;]+)(?:=(?:(?:'[^']*')|(?:[^':;]+))))*):(.*)/;\n        var split = (element.match(expression)).slice(1);\n        var value = split[split.length - 1];\n        var newDate = new Date(this.getDateString(value));\n        if (element && element.indexOf('VALUE=DATE') > -1) {\n            var data_1 = /^(\\d{4})(\\d{2})(\\d{2})$/.exec(value);\n            if (data_1 !== null) {\n                newDate = new Date(parseInt(data_1[1], 10), parseInt(data_1[2], 10) - 1, parseInt(data_1[3], 10));\n            }\n            if (element.indexOf('DTSTART') > -1) {\n                this.allDay = true;\n            }\n        }\n        var data = /^(\\d{4})(\\d{2})(\\d{2})T(\\d{2})(\\d{2})(\\d{2})(Z)?$/.exec(value);\n        if (data !== null) {\n            if (data[7] === 'Z') {\n                newDate = new Date(Date.UTC(parseInt(data[1], 10), parseInt(data[2], 10) - 1, parseInt(data[3], 10), parseInt(data[4], 10), parseInt(data[5], 10), parseInt(data[6], 10)));\n            }\n            else {\n                newDate = new Date(parseInt(data[1], 10), parseInt(data[2], 10) - 1, parseInt(data[3], 10), parseInt(data[4], 10), parseInt(data[5], 10), parseInt(data[6], 10));\n            }\n        }\n        return newDate;\n    };\n    /**\n     * Get module name.\n     */\n    ICalendarImport.prototype.getModuleName = function () {\n        return 'iCalendarImport';\n    };\n    /**\n     * To destroy the ICalendarImport.\n     * @return {void}\n     * @private\n     */\n    ICalendarImport.prototype.destroy = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n    };\n    return ICalendarImport;\n}());\nexport { ICalendarImport };\n"]},"metadata":{},"sourceType":"module"}