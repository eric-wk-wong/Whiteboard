{"ast":null,"code":"var _jsxFileName = \"D:\\\\developing\\\\projects\\\\whiteboard2.0\\\\src\\\\components\\\\firebase\\\\PrivateRoute.js\";\nimport React, { useContext } from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { AuthContext } from \"./Auth\";\n\nconst PrivateRoute = ({\n  component: RouteComponent,\n  ...rest\n}) => {\n  const {\n    currentUser\n  } = useContext(AuthContext);\n  return React.createElement(Route, Object.assign({}, rest, {\n    render: routeProps => !!currentUser ? React.createElement(RouteComponent, Object.assign({}, routeProps, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12\n      },\n      __self: this\n    })) : React.createElement(Redirect, {\n      to: \"/login\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }));\n};\n\nexport default PrivateRoute;","map":{"version":3,"sources":["D:/developing/projects/whiteboard2.0/src/components/firebase/PrivateRoute.js"],"names":["React","useContext","Route","Redirect","AuthContext","PrivateRoute","component","RouteComponent","rest","currentUser","routeProps"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,UAAf,QAAgC,OAAhC;AACA,SAAQC,KAAR,EAAeC,QAAf,QAA8B,kBAA9B;AACA,SAAQC,WAAR,QAA0B,QAA1B;;AAEA,MAAMC,YAAY,GAAE,CAAC;AAAEC,EAAAA,SAAS,EAAEC,cAAb;AAA6B,KAAGC;AAAhC,CAAD,KAA2C;AAC3D,QAAM;AAACC,IAAAA;AAAD,MAAgBR,UAAU,CAACG,WAAD,CAAhC;AACA,SACI,oBAAC,KAAD,oBACQI,IADR;AAEI,IAAA,MAAM,EAAEE,UAAU,IAClB,CAAC,CAACD,WAAF,GACI,oBAAC,cAAD,oBAAoBC,UAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADJ,GAII,oBAAC,QAAD;AAAU,MAAA,EAAE,EAAE,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAPR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADJ;AAaH,CAfD;;AAiBA,eAAeL,YAAf","sourcesContent":["import React, {useContext} from \"react\";\nimport {Route, Redirect} from \"react-router-dom\";\nimport {AuthContext} from \"./Auth\";\n\nconst PrivateRoute =({ component: RouteComponent, ...rest}) => {\n    const {currentUser} = useContext(AuthContext);\n    return(\n        <Route\n            {...rest}\n            render={routeProps =>\n            !!currentUser ?(\n                <RouteComponent {...routeProps} />\n                \n            ) : (\n                <Redirect to={\"/login\"} />\n            )\n        }\n        />\n    );\n};\n\nexport default PrivateRoute;"]},"metadata":{},"sourceType":"module"}