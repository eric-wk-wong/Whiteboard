{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nimport { Component, Property, Event, EventHandler, L10n, compile, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { NotifyPropertyChanges, detach, append, Animation } from '@syncfusion/ej2-base';\nimport { addClass, removeClass, KeyboardEvents, setValue, getValue, ChildProperty } from '@syncfusion/ej2-base';\nimport { Collection, Complex, Browser, Ajax, getUniqueID, closest } from '@syncfusion/ej2-base';\nimport { createSpinner, showSpinner, hideSpinner } from '@syncfusion/ej2-popups';\nimport { updateBlazorTemplate, resetBlazorTemplate, isBlazor } from '@syncfusion/ej2-base';\nvar ROOT = 'e-uploader';\nvar CONTROL_WRAPPER = 'e-upload e-control-wrapper';\nvar INPUT_WRAPPER = 'e-file-select';\nvar DROP_AREA = 'e-file-drop';\nvar DROP_WRAPPER = 'e-file-select-wrap';\nvar LIST_PARENT = 'e-upload-files';\nvar FILE = 'e-upload-file-list';\nvar STATUS = 'e-file-status';\nvar ACTION_BUTTONS = 'e-upload-actions';\nvar UPLOAD_BUTTONS = 'e-file-upload-btn e-css e-btn e-flat e-primary';\nvar CLEAR_BUTTONS = 'e-file-clear-btn e-css e-btn e-flat';\nvar FILE_NAME = 'e-file-name';\nvar FILE_TYPE = 'e-file-type';\nvar FILE_SIZE = 'e-file-size';\nvar REMOVE_ICON = 'e-file-remove-btn';\nvar DELETE_ICON = 'e-file-delete-btn';\nvar SPINNER_PANE = 'e-spinner-pane';\nvar ABORT_ICON = 'e-file-abort-btn';\nvar RETRY_ICON = 'e-file-reload-btn';\nvar DRAG_HOVER = 'e-upload-drag-hover';\nvar PROGRESS_WRAPPER = 'e-upload-progress-wrap';\nvar PROGRESSBAR = 'e-upload-progress-bar';\nvar PROGRESSBAR_TEXT = 'e-progress-bar-text';\nvar UPLOAD_INPROGRESS = 'e-upload-progress';\nvar UPLOAD_SUCCESS = 'e-upload-success';\nvar UPLOAD_FAILED = 'e-upload-fails';\nvar TEXT_CONTAINER = 'e-file-container';\nvar VALIDATION_FAILS = 'e-validation-fails';\nvar RTL = 'e-rtl';\nvar DISABLED = 'e-disabled';\nvar RTL_CONTAINER = 'e-rtl-container';\nvar ICON_FOCUSED = 'e-clear-icon-focus';\nvar PROGRESS_INNER_WRAPPER = 'e-progress-inner-wrap';\nvar PAUSE_UPLOAD = 'e-file-pause-btn';\nvar RESUME_UPLOAD = 'e-file-play-btn';\nvar RESTRICT_RETRY = 'e-restrict-retry';\nvar wrapperAttr = ['title', 'style', 'class'];\nvar FORM_UPLOAD = 'e-form-upload';\nvar HIDDEN_INPUT = 'e-hidden-file-input';\nvar INVALID_FILE = 'e-file-invalid';\nvar INFORMATION = 'e-file-information';\n\nvar FilesProp =\n/** @class */\nfunction (_super) {\n  __extends(FilesProp, _super);\n\n  function FilesProp() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  __decorate([Property('')], FilesProp.prototype, \"name\", void 0);\n\n  __decorate([Property(null)], FilesProp.prototype, \"size\", void 0);\n\n  __decorate([Property('')], FilesProp.prototype, \"type\", void 0);\n\n  return FilesProp;\n}(ChildProperty);\n\nexport { FilesProp };\n\nvar ButtonsProps =\n/** @class */\nfunction (_super) {\n  __extends(ButtonsProps, _super);\n\n  function ButtonsProps() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  __decorate([Property('Browse...')], ButtonsProps.prototype, \"browse\", void 0);\n\n  __decorate([Property('Upload')], ButtonsProps.prototype, \"upload\", void 0);\n\n  __decorate([Property('Clear')], ButtonsProps.prototype, \"clear\", void 0);\n\n  return ButtonsProps;\n}(ChildProperty);\n\nexport { ButtonsProps };\n\nvar AsyncSettings =\n/** @class */\nfunction (_super) {\n  __extends(AsyncSettings, _super);\n\n  function AsyncSettings() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  __decorate([Property('')], AsyncSettings.prototype, \"saveUrl\", void 0);\n\n  __decorate([Property('')], AsyncSettings.prototype, \"removeUrl\", void 0);\n\n  __decorate([Property(0)], AsyncSettings.prototype, \"chunkSize\", void 0);\n\n  __decorate([Property(3)], AsyncSettings.prototype, \"retryCount\", void 0);\n\n  __decorate([Property(500)], AsyncSettings.prototype, \"retryAfterDelay\", void 0);\n\n  return AsyncSettings;\n}(ChildProperty);\n\nexport { AsyncSettings };\n/**\n * The uploader component allows to upload images, documents, and other files from local to server.\n * ```html\n * <input type='file' name='images[]' id='upload'/>\n * ```\n * ```typescript\n * <script>\n *   var uploadObj = new Uploader();\n *   uploadObj.appendTo('#upload');\n * </script>\n * ```\n */\n\nvar Uploader =\n/** @class */\nfunction (_super) {\n  __extends(Uploader, _super);\n  /**\n   * Triggers when change the Uploader value.\n   */\n\n\n  function Uploader(options, element) {\n    var _this = _super.call(this, options, element) || this;\n\n    _this.initialAttr = {\n      accept: null,\n      multiple: false,\n      disabled: false\n    };\n    _this.uploadedFilesData = [];\n    _this.base64String = [];\n    _this.isForm = false;\n    _this.allTypes = false;\n    _this.pausedData = [];\n    _this.uploadMetaData = [];\n    _this.tabIndex = '0';\n    _this.btnTabIndex = '0';\n    _this.disableKeyboardNavigation = false;\n    _this.count = -1;\n    _this.actionCompleteCount = 0;\n    _this.flag = true;\n    _this.selectedFiles = [];\n    _this.uploaderName = 'UploadFiles';\n    /**\n     * Get the file item(li) which are shown in file list.\n     * @private\n     */\n\n    _this.fileList = [];\n    /**\n     * Get the data of files which are shown in file list.\n     * @private\n     */\n\n    _this.filesData = [];\n    _this.uploaderOptions = options;\n    return _this;\n  }\n  /**\n   * Calls internally if any of the property value is changed.\n   * @private\n   */\n\n\n  Uploader.prototype.onPropertyChanged = function (newProp, oldProp) {\n    for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n      var prop = _a[_i];\n\n      switch (prop) {\n        case 'allowedExtensions':\n          this.setExtensions(this.allowedExtensions);\n          this.clearAll();\n          break;\n\n        case 'enabled':\n          this.setControlStatus();\n          break;\n\n        case 'multiple':\n          this.setMultipleSelection();\n          break;\n\n        case 'enableRtl':\n          this.setRTL();\n          this.reRenderFileList();\n          break;\n\n        case 'buttons':\n          this.buttons.browse = isNullOrUndefined(this.buttons.browse) ? '' : this.buttons.browse;\n          this.buttons.clear = isNullOrUndefined(this.buttons.clear) ? '' : this.buttons.clear;\n          this.buttons.upload = isNullOrUndefined(this.buttons.upload) ? '' : this.buttons.upload;\n          this.renderButtonTemplates();\n          break;\n\n        case 'dropArea':\n          this.unBindDropEvents();\n          this.setDropArea();\n          break;\n\n        case 'htmlAttributes':\n          this.updateHTMLAttrToElement();\n          this.updateHTMLAttrToWrapper();\n          this.checkHTMLAttributes(true);\n          break;\n\n        case 'files':\n          this.renderPreLoadFiles();\n          break;\n\n        case 'directoryUpload':\n          this.updateDirectoryAttributes();\n          break;\n\n        case 'minFileSize':\n        case 'maxFileSize':\n        case 'template':\n        case 'autoUpload':\n          this.clearAll();\n          break;\n\n        case 'sequentialUpload':\n          this.clearAll();\n          break;\n\n        case 'locale':\n          this.l10n.setLocale(this.locale);\n          this.setLocalizedTexts();\n          this.preLocaleObj = getValue('currentLocale', this.l10n);\n          break;\n\n        case 'cssClass':\n          this.setCSSClass(oldProp.cssClass);\n          break;\n      }\n    }\n  };\n\n  Uploader.prototype.setLocalizedTexts = function () {\n    if (isNullOrUndefined(this.template)) {\n      if (typeof this.buttons.browse === 'string') {\n        this.browseButton.innerText = this.buttons.browse === 'Browse...' ? this.localizedTexts('Browse') : this.buttons.browse;\n        this.browseButton.setAttribute('title', this.browseButton.innerText);\n        this.uploadWrapper.querySelector('.' + DROP_AREA).innerHTML = this.localizedTexts('dropFilesHint');\n      }\n\n      this.updateFileList();\n    }\n  };\n\n  Uploader.prototype.getKeyValue = function (val) {\n    var keyValue;\n\n    for (var _i = 0, _a = Object.keys(this.preLocaleObj); _i < _a.length; _i++) {\n      var key = _a[_i];\n\n      if (this.preLocaleObj[key] === val) {\n        keyValue = key;\n      }\n    }\n\n    return keyValue;\n  };\n\n  Uploader.prototype.updateFileList = function () {\n    var element;\n    /* istanbul ignore next */\n\n    if (this.fileList.length > 0 && !isNullOrUndefined(this.uploadWrapper.querySelector('.' + LIST_PARENT))) {\n      for (var i = 0; i < this.fileList.length; i++) {\n        element = this.fileList[i].querySelector('.e-file-status');\n        element.innerHTML = this.localizedTexts(this.getKeyValue(this.filesData[i].status));\n        this.filesData[i].status = this.localizedTexts(this.getKeyValue(this.filesData[i].status));\n\n        if (this.fileList[i].classList.contains(UPLOAD_SUCCESS)) {\n          this.fileList[i].querySelector('.e-icons').setAttribute('title', this.localizedTexts('delete'));\n        }\n\n        if (this.fileList[i].querySelector('.e-file-play-btn')) {\n          this.fileList[i].querySelector('.e-icons').setAttribute('title', this.localizedTexts('resume'));\n        }\n\n        if (this.fileList[i].querySelector('.e-file-remove-btn')) {\n          this.fileList[i].querySelector('.e-icons').setAttribute('title', this.localizedTexts('remove'));\n        }\n\n        if (this.fileList[i].querySelector('.e-file-reload-btn')) {\n          this.fileList[i].querySelector('.e-icons').setAttribute('title', this.localizedTexts('retry'));\n        }\n\n        if (!this.autoUpload) {\n          this.uploadButton.innerText = this.buttons.upload === 'Upload' ? this.localizedTexts('Upload') : this.buttons.upload;\n          this.uploadButton.setAttribute('title', this.localizedTexts('Upload'));\n          this.clearButton.innerText = this.buttons.clear === 'Clear' ? this.localizedTexts('Clear') : this.buttons.clear;\n          this.clearButton.setAttribute('title', this.localizedTexts('Clear'));\n        }\n      }\n    }\n  };\n\n  Uploader.prototype.reRenderFileList = function () {\n    if (this.listParent) {\n      detach(this.listParent);\n      this.listParent = null;\n      this.fileList = [];\n      this.createFileList(this.filesData);\n\n      if (this.actionButtons) {\n        this.removeActionButtons();\n        this.renderActionButtons();\n        this.checkActionButtonStatus();\n      }\n    }\n  };\n\n  Uploader.prototype.preRender = function () {\n    this.localeText = {\n      Browse: 'Browse...',\n      Clear: 'Clear',\n      Upload: 'Upload',\n      dropFilesHint: 'Or drop files here',\n      invalidMaxFileSize: 'File size is too large',\n      invalidMinFileSize: 'File size is too small',\n      invalidFileType: 'File type is not allowed',\n      uploadFailedMessage: 'File failed to upload',\n      uploadSuccessMessage: 'File uploaded successfully',\n      removedSuccessMessage: 'File removed successfully',\n      removedFailedMessage: 'Unable to remove file',\n      inProgress: 'Uploading',\n      readyToUploadMessage: 'Ready to upload',\n      abort: 'Abort',\n      remove: 'Remove',\n      cancel: 'Cancel',\n      delete: 'Delete file',\n      pauseUpload: 'File upload paused',\n      pause: 'Pause',\n      resume: 'Resume',\n      retry: 'Retry',\n      fileUploadCancel: 'File upload canceled',\n      invalidFileSelection: 'Invalid files selected',\n      totalFiles: 'Total files',\n      size: 'Size'\n    };\n    this.l10n = new L10n('uploader', this.localeText, this.locale);\n    this.preLocaleObj = getValue('currentLocale', this.l10n);\n    this.updateHTMLAttrToElement();\n    this.checkHTMLAttributes(false);\n    var parentEle = closest(this.element, 'form');\n\n    if (!isNullOrUndefined(parentEle)) {\n      for (; parentEle && parentEle !== document.documentElement; parentEle = parentEle.parentElement) {\n        if (parentEle.tagName === 'FORM') {\n          this.isForm = true;\n          this.formElement = parentEle;\n          parentEle.setAttribute('enctype', 'multipart/form-data');\n          parentEle.setAttribute('encoding', 'multipart/form-data');\n        }\n      }\n    } // tslint:disable-next-line\n\n\n    var ejInstance = getValue('ej2_instances', this.element);\n    /* istanbul ignore next */\n\n    if (this.element.tagName === 'EJS-UPLOADER') {\n      var inputElement = this.createElement('input', {\n        attrs: {\n          type: 'file'\n        }\n      });\n      var index = 0;\n\n      for (index; index < this.element.attributes.length; index++) {\n        inputElement.setAttribute(this.element.attributes[index].nodeName, this.element.attributes[index].nodeValue);\n        inputElement.innerHTML = this.element.innerHTML;\n      }\n\n      if (!inputElement.hasAttribute('name')) {\n        inputElement.setAttribute('name', 'UploadFiles');\n      }\n\n      this.element.appendChild(inputElement);\n      this.element = inputElement;\n      setValue('ej2_instances', ejInstance, this.element);\n    }\n    /* istanbul ignore next */\n\n\n    if (ejInstance[0].isPureReactComponent) {\n      if (!isNullOrUndefined(ejInstance[0].props.name)) {\n        this.element.setAttribute('name', ejInstance[0].props.name);\n      } else if (!isNullOrUndefined(ejInstance[0].props.id) && isNullOrUndefined(ejInstance[0].props.name)) {\n        this.element.setAttribute('name', ejInstance[0].props.id);\n      } else {\n        this.element.setAttribute('name', 'UploadFiles');\n      }\n    }\n\n    if (isNullOrUndefined(this.element.getAttribute('name'))) {\n      this.element.setAttribute('name', this.element.getAttribute('id'));\n    }\n\n    if (!this.element.hasAttribute('type')) {\n      this.element.setAttribute('type', 'file');\n    }\n\n    this.updateDirectoryAttributes();\n    this.keyConfigs = {\n      enter: 'enter'\n    };\n\n    if (this.element.hasAttribute('tabindex')) {\n      this.tabIndex = this.element.getAttribute('tabindex');\n    }\n\n    this.browserName = Browser.info.name;\n    this.uploaderName = this.element.getAttribute('name');\n  };\n\n  Uploader.prototype.getPersistData = function () {\n    return this.addOnPersist([]);\n  };\n  /**\n   * Return the module name of the component.\n   */\n\n\n  Uploader.prototype.getModuleName = function () {\n    return 'uploader';\n  };\n\n  Uploader.prototype.updateDirectoryAttributes = function () {\n    if (this.directoryUpload) {\n      this.element.setAttribute('directory', 'true');\n      this.element.setAttribute('webkitdirectory', 'true');\n    } else {\n      this.element.removeAttribute('directory');\n      this.element.removeAttribute('webkitdirectory');\n    }\n  };\n  /**\n   * To Initialize the control rendering\n   * @private\n   */\n\n\n  Uploader.prototype.render = function () {\n    this.renderBrowseButton();\n    this.initializeUpload();\n    this.updateHTMLAttrToWrapper();\n    this.wireEvents();\n    this.setMultipleSelection();\n    this.setExtensions(this.allowedExtensions);\n    this.setRTL();\n    this.renderPreLoadFiles();\n    this.setControlStatus();\n    this.setCSSClass();\n    this.renderComplete();\n  };\n\n  Uploader.prototype.renderBrowseButton = function () {\n    this.browseButton = this.createElement('button', {\n      className: 'e-css e-btn',\n      attrs: {\n        'type': 'button'\n      }\n    });\n    this.browseButton.setAttribute('tabindex', this.tabIndex);\n\n    if (typeof this.buttons.browse === 'string') {\n      this.browseButton.textContent = this.buttons.browse === 'Browse...' ? this.localizedTexts('Browse') : this.buttons.browse;\n      this.browseButton.setAttribute('title', this.browseButton.innerText);\n    } else {\n      this.browseButton.appendChild(this.buttons.browse);\n    }\n\n    this.element.setAttribute('aria-label', 'Uploader');\n  };\n\n  Uploader.prototype.renderActionButtons = function () {\n    this.element.setAttribute('tabindex', '-1');\n    this.actionButtons = this.createElement('div', {\n      className: ACTION_BUTTONS\n    });\n    this.uploadButton = this.createElement('button', {\n      className: UPLOAD_BUTTONS,\n      attrs: {\n        'type': 'button',\n        'tabindex': this.btnTabIndex\n      }\n    });\n    this.clearButton = this.createElement('button', {\n      className: CLEAR_BUTTONS,\n      attrs: {\n        'type': 'button',\n        'tabindex': this.btnTabIndex\n      }\n    });\n    this.actionButtons.appendChild(this.clearButton);\n    this.actionButtons.appendChild(this.uploadButton);\n    this.renderButtonTemplates();\n    this.uploadWrapper.appendChild(this.actionButtons);\n    this.browseButton.blur();\n    this.uploadButton.focus();\n    this.wireActionButtonEvents();\n  };\n\n  Uploader.prototype.wireActionButtonEvents = function () {\n    EventHandler.add(this.uploadButton, 'click', this.uploadButtonClick, this);\n    EventHandler.add(this.clearButton, 'click', this.clearButtonClick, this);\n  };\n\n  Uploader.prototype.unwireActionButtonEvents = function () {\n    EventHandler.remove(this.uploadButton, 'click', this.uploadButtonClick);\n    EventHandler.remove(this.clearButton, 'click', this.clearButtonClick);\n  };\n\n  Uploader.prototype.removeActionButtons = function () {\n    if (this.actionButtons) {\n      this.unwireActionButtonEvents();\n      detach(this.actionButtons);\n      this.actionButtons = null;\n    }\n  };\n\n  Uploader.prototype.renderButtonTemplates = function () {\n    if (typeof this.buttons.browse === 'string') {\n      this.browseButton.textContent = this.buttons.browse === 'Browse...' ? this.localizedTexts('Browse') : this.buttons.browse;\n      this.browseButton.setAttribute('title', this.browseButton.textContent);\n    } else {\n      this.browseButton.innerHTML = '';\n      this.browseButton.appendChild(this.buttons.browse);\n    }\n\n    if (this.uploadButton) {\n      var uploadText = void 0;\n      uploadText = isNullOrUndefined(this.buttons.upload) ? 'Upload' : this.buttons.upload;\n      this.buttons.upload = uploadText;\n\n      if (typeof this.buttons.upload === 'string') {\n        this.uploadButton.textContent = this.buttons.upload === 'Upload' ? this.localizedTexts('Upload') : this.buttons.upload;\n        this.uploadButton.setAttribute('title', this.uploadButton.textContent);\n      } else {\n        this.uploadButton.innerHTML = '';\n        this.uploadButton.appendChild(this.buttons.upload);\n      }\n    }\n\n    if (this.clearButton) {\n      var clearText = void 0;\n      clearText = isNullOrUndefined(this.buttons.clear) ? 'Clear' : this.buttons.clear;\n      this.buttons.clear = clearText;\n\n      if (typeof this.buttons.clear === 'string') {\n        this.clearButton.textContent = this.buttons.clear === 'Clear' ? this.localizedTexts('Clear') : this.buttons.clear;\n        this.clearButton.setAttribute('title', this.clearButton.textContent);\n      } else {\n        this.clearButton.innerHTML = '';\n        this.clearButton.appendChild(this.buttons.clear);\n      }\n    }\n  };\n\n  Uploader.prototype.initializeUpload = function () {\n    this.element.setAttribute('tabindex', '-1');\n    var inputWrapper = this.createElement('span', {\n      className: INPUT_WRAPPER\n    });\n    this.element.parentElement.insertBefore(inputWrapper, this.element);\n    this.dropAreaWrapper = this.createElement('div', {\n      className: DROP_WRAPPER\n    });\n    this.element.parentElement.insertBefore(this.dropAreaWrapper, this.element);\n    inputWrapper.appendChild(this.element);\n    this.dropAreaWrapper.appendChild(this.browseButton);\n    this.dropAreaWrapper.appendChild(inputWrapper);\n    var fileDropArea = this.createElement('span', {\n      className: DROP_AREA\n    });\n    fileDropArea.innerHTML = this.localizedTexts('dropFilesHint');\n    this.dropAreaWrapper.appendChild(fileDropArea);\n    this.uploadWrapper = this.createElement('div', {\n      className: CONTROL_WRAPPER\n    });\n    this.dropAreaWrapper.parentElement.insertBefore(this.uploadWrapper, this.dropAreaWrapper);\n    this.uploadWrapper.appendChild(this.dropAreaWrapper);\n    this.setDropArea();\n  };\n\n  Uploader.prototype.renderPreLoadFiles = function () {\n    if (this.files.length) {\n      if (isNullOrUndefined(this.files[0].size)) {\n        return;\n      }\n\n      var files = [].slice.call(this.files);\n      var filesData = [];\n\n      if (!this.multiple) {\n        this.clearData();\n        files = [files[0]];\n      }\n\n      for (var _i = 0, files_1 = files; _i < files_1.length; _i++) {\n        var data = files_1[_i];\n        var fileData = {\n          name: data.name + '.' + data.type.split('.')[data.type.split('.').length - 1],\n          rawFile: '',\n          size: data.size,\n          status: this.localizedTexts('uploadSuccessMessage'),\n          type: data.type,\n          validationMessages: {\n            minSize: '',\n            maxSize: ''\n          },\n          statusCode: '2'\n        };\n        filesData.push(fileData);\n        this.filesData.push(fileData);\n      }\n\n      this.createFileList(filesData);\n\n      if (!this.autoUpload && this.listParent && !this.actionButtons && (!this.isForm || this.allowUpload()) && this.showFileList) {\n        this.renderActionButtons();\n      }\n\n      this.checkActionButtonStatus();\n    }\n  };\n\n  Uploader.prototype.checkActionButtonStatus = function () {\n    if (this.actionButtons) {\n      var length_1 = this.uploadWrapper.querySelectorAll('.' + VALIDATION_FAILS).length + this.uploadWrapper.querySelectorAll('.e-upload-fails:not(.e-upload-progress)').length + this.uploadWrapper.querySelectorAll('span.' + UPLOAD_SUCCESS).length + this.uploadWrapper.querySelectorAll('span.' + UPLOAD_INPROGRESS).length;\n\n      if (length_1 > 0 && length_1 === this.uploadWrapper.querySelectorAll('li').length) {\n        this.uploadButton.setAttribute('disabled', 'disabled');\n      } else {\n        this.uploadButton.removeAttribute('disabled');\n      }\n    }\n  };\n\n  Uploader.prototype.setDropArea = function () {\n    var dropTextArea = this.dropAreaWrapper.querySelector('.e-file-drop');\n\n    if (this.dropArea) {\n      this.dropZoneElement = typeof this.dropArea !== 'string' ? this.dropArea : document.querySelector(this.dropArea);\n      var element = this.element;\n      var enableDropText = false;\n\n      while (element.parentNode) {\n        element = element.parentNode;\n\n        if (element === this.dropZoneElement) {\n          enableDropText = true;\n          dropTextArea.textContent = this.localizedTexts('dropFilesHint');\n        }\n      }\n\n      if (!enableDropText) {\n        dropTextArea.textContent = '';\n      }\n    } else {\n      this.dropZoneElement = this.uploadWrapper;\n      dropTextArea.textContent = this.localizedTexts('dropFilesHint');\n    }\n\n    this.bindDropEvents();\n  };\n\n  Uploader.prototype.updateHTMLAttrToElement = function () {\n    if (!isNullOrUndefined(this.htmlAttributes)) {\n      for (var _i = 0, _a = Object.keys(this.htmlAttributes); _i < _a.length; _i++) {\n        var pro = _a[_i];\n\n        if (wrapperAttr.indexOf(pro) < 0) {\n          this.element.setAttribute(pro, this.htmlAttributes[pro]);\n        }\n      }\n    }\n  };\n\n  Uploader.prototype.updateHTMLAttrToWrapper = function () {\n    if (!isNullOrUndefined(this.htmlAttributes)) {\n      for (var _i = 0, _a = Object.keys(this.htmlAttributes); _i < _a.length; _i++) {\n        var pro = _a[_i];\n\n        if (wrapperAttr.indexOf(pro) > -1) {\n          if (pro === 'class') {\n            addClass([this.uploadWrapper], this.htmlAttributes[pro].split(' '));\n          } else if (pro === 'style') {\n            var uploadStyle = this.uploadWrapper.getAttribute(pro);\n            uploadStyle = !isNullOrUndefined(uploadStyle) ? uploadStyle + this.htmlAttributes[pro] : this.htmlAttributes[pro];\n            this.uploadWrapper.setAttribute(pro, uploadStyle);\n          } else {\n            this.uploadWrapper.setAttribute(pro, this.htmlAttributes[pro]);\n          }\n        }\n      }\n    }\n  };\n\n  Uploader.prototype.setMultipleSelection = function () {\n    if (this.multiple && !this.element.hasAttribute('multiple')) {\n      var newAttr = document.createAttribute('multiple');\n      newAttr.value = 'multiple';\n      this.element.setAttributeNode(newAttr);\n    } else if (!this.multiple) {\n      this.element.removeAttribute('multiple');\n    }\n  };\n\n  Uploader.prototype.checkAutoUpload = function (fileData) {\n    if (this.autoUpload) {\n      if (this.sequentialUpload) {\n        /* istanbul ignore next */\n        this.sequenceUpload(fileData);\n      } else {\n        this.upload(fileData);\n      }\n\n      this.removeActionButtons();\n    } else if (!this.actionButtons) {\n      this.renderActionButtons();\n    }\n\n    this.checkActionButtonStatus();\n  };\n\n  Uploader.prototype.sequenceUpload = function (fileData) {\n    if (this.filesData.length - fileData.length === 0 || this.filesData[this.filesData.length - fileData.length - 1].statusCode !== '1') {\n      ++this.count;\n      var isFileListCreated = this.showFileList ? false : true;\n\n      if (typeof this.filesData[this.count] === 'object') {\n        this.upload(this.filesData[this.count], isFileListCreated);\n\n        if (this.filesData[this.count].statusCode === '0') {\n          this.sequenceUpload(fileData);\n        }\n      } else {\n        --this.count;\n      }\n    }\n  };\n\n  Uploader.prototype.setCSSClass = function (oldCSSClass) {\n    if (this.cssClass) {\n      addClass([this.uploadWrapper], this.cssClass.split(this.cssClass.indexOf(',') > -1 ? ',' : ' '));\n    }\n\n    if (oldCSSClass) {\n      removeClass([this.uploadWrapper], oldCSSClass.split(' '));\n    }\n  };\n\n  Uploader.prototype.wireEvents = function () {\n    EventHandler.add(this.browseButton, 'click', this.browseButtonClick, this);\n    EventHandler.add(this.element, 'change', this.onSelectFiles, this);\n    EventHandler.add(document, 'click', this.removeFocus, this);\n    this.keyboardModule = new KeyboardEvents(this.uploadWrapper, {\n      keyAction: this.keyActionHandler.bind(this),\n      keyConfigs: this.keyConfigs,\n      eventName: 'keydown'\n    });\n\n    if (this.isForm) {\n      EventHandler.add(this.formElement, 'reset', this.resetForm, this);\n    }\n  };\n\n  Uploader.prototype.unWireEvents = function () {\n    EventHandler.remove(this.browseButton, 'click', this.browseButtonClick);\n    EventHandler.remove(this.element, 'change', this.onSelectFiles);\n    EventHandler.remove(document, 'click', this.removeFocus);\n\n    if (this.isForm) {\n      EventHandler.remove(this.formElement, 'reset', this.resetForm);\n    }\n\n    this.keyboardModule.destroy();\n  };\n\n  Uploader.prototype.resetForm = function () {\n    this.clearAll();\n  };\n\n  Uploader.prototype.keyActionHandler = function (e) {\n    var targetElement = e.target;\n\n    switch (e.action) {\n      case 'enter':\n        if (e.target === this.clearButton) {\n          this.clearButtonClick();\n        } else if (e.target === this.uploadButton) {\n          this.uploadButtonClick();\n        } else if (e.target === this.browseButton) {\n          this.browseButtonClick();\n        } else if (targetElement.classList.contains(PAUSE_UPLOAD)) {\n          var metaData = this.getCurrentMetaData(null, e);\n          metaData.file.statusCode = '4';\n          metaData.file.status = this.localizedTexts('pauseUpload');\n          this.abortUpload(metaData, false);\n        } else if (targetElement.classList.contains(RESUME_UPLOAD)) {\n          this.resumeUpload(this.getCurrentMetaData(null, e), e);\n        } else if (targetElement.classList.contains(RETRY_ICON)) {\n          var metaData = this.getCurrentMetaData(null, e);\n\n          if (!isNullOrUndefined(metaData)) {\n            metaData.file.statusCode = '1';\n            metaData.file.status = this.localizedTexts('readyToUploadMessage');\n            this.chunkUpload(metaData.file);\n          } else {\n            var target = e.target.parentElement;\n            var fileData = this.filesData[this.fileList.indexOf(target)];\n            this.retry(fileData);\n          }\n        } else {\n          this.removeFiles(e);\n\n          if (!targetElement.classList.contains(ABORT_ICON)) {\n            this.browseButton.focus();\n          }\n        }\n\n        e.preventDefault();\n        e.stopPropagation();\n        break;\n    }\n  };\n\n  Uploader.prototype.getCurrentMetaData = function (fileInfo, e) {\n    var fileData;\n    var targetMetaData;\n\n    if (isNullOrUndefined(fileInfo)) {\n      var target = e.target.parentElement;\n      fileData = this.filesData[this.fileList.indexOf(target)];\n    } else {\n      fileData = fileInfo;\n    }\n\n    for (var i = 0; i < this.uploadMetaData.length; i++) {\n      if (this.uploadMetaData[i].file.name === fileData.name) {\n        targetMetaData = this.uploadMetaData[i];\n      }\n    }\n\n    return targetMetaData;\n  };\n\n  Uploader.prototype.removeFocus = function () {\n    if (this.uploadWrapper && this.listParent && this.listParent.querySelector('.' + ICON_FOCUSED)) {\n      document.activeElement.blur();\n      this.listParent.querySelector('.' + ICON_FOCUSED).classList.remove(ICON_FOCUSED);\n    }\n  };\n\n  Uploader.prototype.browseButtonClick = function () {\n    this.element.click();\n  };\n\n  Uploader.prototype.uploadButtonClick = function () {\n    if (this.sequentialUpload) {\n      this.sequenceUpload(this.filesData);\n    } else {\n      this.upload(this.filesData);\n    }\n  };\n\n  Uploader.prototype.clearButtonClick = function () {\n    this.clearAll();\n    /* istanbul ignore next */\n\n    if (this.sequentialUpload) {\n      this.count = -1;\n    }\n\n    this.actionCompleteCount = 0;\n  };\n\n  Uploader.prototype.bindDropEvents = function () {\n    if (this.dropZoneElement) {\n      EventHandler.add(this.dropZoneElement, 'drop', this.dropElement, this);\n      EventHandler.add(this.dropZoneElement, 'dragover', this.dragHover, this);\n      EventHandler.add(this.dropZoneElement, 'dragleave', this.onDragLeave, this);\n      EventHandler.add(this.dropZoneElement, 'paste', this.onPasteFile, this);\n    }\n  };\n\n  Uploader.prototype.unBindDropEvents = function () {\n    if (this.dropZoneElement) {\n      EventHandler.remove(this.dropZoneElement, 'drop', this.dropElement);\n      EventHandler.remove(this.dropZoneElement, 'dragover', this.dragHover);\n      EventHandler.remove(this.dropZoneElement, 'dragleave', this.onDragLeave);\n    }\n  };\n\n  Uploader.prototype.onDragLeave = function (e) {\n    this.dropZoneElement.classList.remove(DRAG_HOVER);\n  };\n\n  Uploader.prototype.dragHover = function (e) {\n    if (!this.enabled) {\n      return;\n    }\n\n    this.dropZoneElement.classList.add(DRAG_HOVER);\n    e.preventDefault();\n    e.stopPropagation();\n  };\n  /* istanbul ignore next */\n\n\n  Uploader.prototype.dropElement = function (e) {\n    this.dropZoneElement.classList.remove(DRAG_HOVER);\n    this.onSelectFiles(e);\n    e.preventDefault();\n    e.stopPropagation();\n  };\n  /* istanbul ignore next */\n\n\n  Uploader.prototype.onPasteFile = function (event) {\n    var item = event.clipboardData.items;\n\n    if (item.length !== 1) {\n      return;\n    }\n\n    var pasteFile = [].slice.call(item)[0];\n\n    if (pasteFile.kind === 'file' && pasteFile.type.match('^image/')) {\n      this.renderSelectedFiles(event, [pasteFile.getAsFile()], false, true);\n    }\n  };\n\n  Uploader.prototype.getSelectedFiles = function (index) {\n    var data = [];\n    var liElement = this.fileList[index];\n    var allFiles = this.getFilesData();\n    var nameElements = +liElement.getAttribute('data-files-count');\n    var startIndex = 0;\n\n    for (var i = 0; i < index; i++) {\n      startIndex += +this.fileList[i].getAttribute('data-files-count');\n    }\n\n    for (var j = startIndex; j < startIndex + nameElements; j++) {\n      data.push(allFiles[j]);\n    }\n\n    return data;\n  };\n\n  Uploader.prototype.removeFiles = function (args) {\n    if (!this.enabled) {\n      return;\n    }\n\n    var selectedElement = args.target.parentElement;\n    var index = this.fileList.indexOf(selectedElement);\n    var liElement = this.fileList[index];\n    var formUpload = this.isFormUpload();\n    var fileData = formUpload ? this.getSelectedFiles(index) : this.getFilesInArray(this.filesData[index]);\n\n    if (isNullOrUndefined(fileData)) {\n      return;\n    }\n\n    if (args.target.classList.contains(ABORT_ICON) && !formUpload) {\n      fileData[0].statusCode = '5';\n\n      if (!isNullOrUndefined(liElement)) {\n        var spinnerTarget = liElement.querySelector('.' + ABORT_ICON);\n        createSpinner({\n          target: spinnerTarget,\n          width: '20px'\n        });\n        showSpinner(spinnerTarget);\n      }\n\n      if (this.sequentialUpload) {\n        /* istanbul ignore next */\n        this.uploadSequential();\n      }\n\n      if (!liElement.classList.contains(RESTRICT_RETRY)) {\n        this.checkActionComplete(true);\n      }\n    } else {\n      this.remove(fileData, false, false, true, args);\n    }\n\n    this.element.value = '';\n    this.checkActionButtonStatus();\n  };\n\n  Uploader.prototype.removeFilesData = function (file, customTemplate) {\n    var index;\n\n    if (customTemplate) {\n      if (!this.showFileList) {\n        index = this.filesData.indexOf(file);\n        this.filesData.splice(index, 1);\n      }\n\n      return;\n    }\n\n    var selectedElement = this.getLiElement(file);\n\n    if (isNullOrUndefined(selectedElement)) {\n      return;\n    }\n\n    detach(selectedElement);\n    index = this.fileList.indexOf(selectedElement);\n    this.fileList.splice(index, 1);\n    this.filesData.splice(index, 1);\n\n    if (this.fileList.length === 0 && !isNullOrUndefined(this.listParent)) {\n      detach(this.listParent);\n      this.listParent = null;\n      this.removeActionButtons();\n    }\n\n    if (this.sequentialUpload) {\n      /* istanbul ignore next */\n      if (index <= this.count) {\n        --this.count;\n      }\n    }\n  };\n\n  Uploader.prototype.removeUploadedFile = function (file, eventArgs, removeDirectly, custom) {\n    var _this = this;\n\n    var selectedFiles = file;\n    var ajax = new Ajax(this.asyncSettings.removeUrl, 'POST', true, null);\n    ajax.emitError = false;\n    var formData = new FormData();\n\n    ajax.beforeSend = function (e) {\n      eventArgs.currentRequest = ajax.httpRequest;\n\n      if (isBlazor()) {\n        if (_this.currentRequestHeader) {\n          _this.updateCustomheader(ajax.httpRequest, _this.currentRequestHeader);\n        }\n\n        if (_this.customFormDatas) {\n          _this.updateFormData(formData, _this.customFormDatas);\n        }\n      }\n\n      if (!removeDirectly) {\n        _this.trigger('removing', eventArgs, function (eventArgs) {\n          if (eventArgs.cancel) {\n            e.cancel = true;\n          } else {\n            _this.removingEventCallback(eventArgs, formData, selectedFiles, file);\n          }\n        });\n      } else {\n        _this.removingEventCallback(eventArgs, formData, selectedFiles, file);\n      }\n    };\n\n    ajax.onLoad = function (e) {\n      _this.removeCompleted(e, selectedFiles, custom);\n\n      return {};\n    };\n    /* istanbul ignore next */\n\n\n    ajax.onError = function (e) {\n      _this.removeFailed(e, selectedFiles, custom);\n\n      return {};\n    };\n\n    ajax.send(formData);\n  };\n\n  Uploader.prototype.removingEventCallback = function (eventArgs, formData, selectedFiles, file) {\n    /* istanbul ignore next */\n    var name = this.element.getAttribute('name');\n    var liElement = this.getLiElement(file);\n\n    if (!isNullOrUndefined(liElement) && (!isNullOrUndefined(liElement.querySelector('.' + DELETE_ICON)) || !isNullOrUndefined(liElement.querySelector('.' + REMOVE_ICON)))) {\n      var spinnerTarget = void 0;\n      spinnerTarget = liElement.querySelector('.' + DELETE_ICON) ? liElement.querySelector('.' + DELETE_ICON) : liElement.querySelector('.' + REMOVE_ICON);\n      createSpinner({\n        target: spinnerTarget,\n        width: '20px'\n      });\n      showSpinner(spinnerTarget);\n    }\n\n    if (eventArgs.postRawFile && !isNullOrUndefined(selectedFiles.rawFile) && selectedFiles.rawFile !== '') {\n      formData.append(name, selectedFiles.rawFile, selectedFiles.name);\n    } else {\n      formData.append(name, selectedFiles.name);\n    }\n\n    this.updateFormData(formData, eventArgs.customFormData);\n  };\n  /* istanbul ignore next */\n\n\n  Uploader.prototype.updateFormData = function (formData, customData) {\n    if (customData.length > 0 && customData[0]) {\n      var _loop_1 = function (i) {\n        var data = customData[i]; // tslint:disable-next-line\n\n        var value = Object.keys(data).map(function (e) {\n          return data[e];\n        });\n        formData.append(Object.keys(data)[0], value);\n      };\n\n      for (var i = 0; i < customData.length; i++) {\n        _loop_1(i);\n      }\n    }\n  };\n  /* istanbul ignore next */\n\n\n  Uploader.prototype.updateCustomheader = function (request, currentRequest) {\n    if (currentRequest.length > 0 && currentRequest[0]) {\n      var _loop_2 = function (i) {\n        var data = currentRequest[i]; // tslint:disable-next-line\n\n        var value = Object.keys(data).map(function (e) {\n          return data[e];\n        });\n        request.setRequestHeader(Object.keys(data)[0], value);\n      };\n\n      for (var i = 0; i < currentRequest.length; i++) {\n        _loop_2(i);\n      }\n    }\n  };\n\n  Uploader.prototype.removeCompleted = function (e, files, customTemplate) {\n    var response = e && e.currentTarget ? this.getResponse(e) : null;\n    var args = {\n      e: e,\n      response: response,\n      operation: 'remove',\n      file: this.updateStatus(files, this.localizedTexts('removedSuccessMessage'), '2')\n    };\n    this.trigger('success', args);\n    this.removeFilesData(files, customTemplate);\n    var index = this.uploadedFilesData.indexOf(files);\n    this.uploadedFilesData.splice(index, 1);\n    this.trigger('change', {\n      files: this.uploadedFilesData\n    });\n  };\n\n  Uploader.prototype.removeFailed = function (e, files, customTemplate) {\n    var response = e && e.currentTarget ? this.getResponse(e) : null;\n    var args = {\n      e: e,\n      response: response,\n      operation: 'remove',\n      file: this.updateStatus(files, this.localizedTexts('removedFailedMessage'), '0')\n    };\n\n    if (!customTemplate) {\n      var index = this.filesData.indexOf(files);\n      var rootElement = this.fileList[index];\n\n      if (rootElement) {\n        var statusElement = rootElement.querySelector('.' + STATUS);\n        rootElement.classList.remove(UPLOAD_SUCCESS);\n        statusElement.classList.remove(UPLOAD_SUCCESS);\n        rootElement.classList.add(UPLOAD_FAILED);\n        statusElement.classList.add(UPLOAD_FAILED);\n      }\n\n      this.checkActionButtonStatus();\n    }\n\n    this.trigger('failure', args);\n    var liElement = this.getLiElement(files);\n    /* istanbul ignore next */\n\n    if (!isNullOrUndefined(liElement) && !isNullOrUndefined(liElement.querySelector('.' + DELETE_ICON))) {\n      var spinnerTarget = liElement.querySelector('.' + DELETE_ICON);\n      hideSpinner(spinnerTarget);\n      detach(liElement.querySelector('.e-spinner-pane'));\n    }\n  };\n  /* istanbul ignore next */\n\n\n  Uploader.prototype.getFilesFromFolder = function (event) {\n    this.filesEntries = [];\n    var items;\n    items = this.multiple ? event.dataTransfer.items : [event.dataTransfer.items[0]];\n    var validDirectoryUpload = this.checkDirectoryUpload(items);\n\n    if (!validDirectoryUpload) {\n      return;\n    }\n\n    var _loop_3 = function (i) {\n      // tslint:disable-next-line\n      var item = items[i].webkitGetAsEntry();\n\n      if (item.isFile) {\n        var files_2 = []; // tslint:disable-next-line\n\n        item.file(function (fileObj) {\n          var path = item.fullPath;\n          files_2.push({\n            'path': path,\n            'file': fileObj\n          });\n        });\n        this_1.renderSelectedFiles(event, files_2, true);\n      } else if (item.isDirectory) {\n        this_1.traverseFileTree(item, event);\n      }\n    };\n\n    var this_1 = this;\n\n    for (var i = 0; i < items.length; i++) {\n      _loop_3(i);\n    }\n  };\n  /* istanbul ignore next */\n\n\n  Uploader.prototype.checkDirectoryUpload = function (items) {\n    for (var i = 0; i < items.length; i++) {\n      // tslint:disable-next-line\n      var item = items[i].webkitGetAsEntry();\n\n      if (item.isDirectory) {\n        return true;\n      }\n    }\n\n    return false;\n  }; // tslint:disable\n\n  /* istanbul ignore next */\n\n\n  Uploader.prototype.traverseFileTree = function (item, event) {\n    var _this = this;\n\n    if (item.isFile) {\n      this.filesEntries.push(item);\n    } else if (item.isDirectory) {\n      // tslint:disable-next-line\n      var directoryReader = item.createReader(); // tslint:disable-next-line\n\n      directoryReader.readEntries(function (entries) {\n        for (var i = 0; i < entries.length; i++) {\n          _this.traverseFileTree(entries[i]); // tslint:disable-next-line\n\n        }\n\n        ;\n\n        _this.pushFilesEntries(event);\n      });\n    }\n  };\n\n  Uploader.prototype.pushFilesEntries = function (event) {\n    var _this = this;\n\n    var files = [];\n\n    var _loop_4 = function (i) {\n      // tslint:disable-next-line\n      this_2.filesEntries[i].file(function (fileObj) {\n        var path = _this.filesEntries[i].fullPath;\n        files.push({\n          'path': path,\n          'file': fileObj\n        });\n\n        if (i === _this.filesEntries.length - 1) {\n          _this.filesEntries = [];\n\n          _this.renderSelectedFiles(event, files, true);\n        }\n      });\n    };\n\n    var this_2 = this;\n\n    for (var i = 0; i < this.filesEntries.length; i++) {\n      _loop_4(i);\n    }\n  }; // tslint:enable\n\n\n  Uploader.prototype.onSelectFiles = function (args) {\n    if (!this.enabled) {\n      return;\n    }\n\n    var targetFiles;\n    /* istanbul ignore next */\n\n    if (args.type === 'drop') {\n      if (this.directoryUpload) {\n        this.getFilesFromFolder(args);\n      } else {\n        var files = this.sortFilesList = args.dataTransfer.files;\n\n        if (this.browserName !== 'msie' && this.browserName !== 'edge') {\n          this.element.files = files;\n        }\n\n        targetFiles = this.multiple ? this.sortFileList(files) : [files[0]];\n        this.renderSelectedFiles(args, targetFiles);\n      }\n    } else {\n      targetFiles = [].slice.call(args.target.files);\n      this.renderSelectedFiles(args, targetFiles);\n    }\n  };\n  /* istanbul ignore next */\n\n\n  Uploader.prototype.getBase64 = function (file) {\n    return new Promise(function (resolve, reject) {\n      var fileReader = new FileReader();\n      fileReader.readAsDataURL(file);\n\n      fileReader.onload = function () {\n        return resolve(fileReader.result);\n      };\n\n      fileReader.onerror = function (error) {\n        return reject(error);\n      };\n    });\n  };\n  /* istanbul ignore next */\n\n  /* tslint:ignore */\n\n\n  Uploader.prototype.renderSelectedFiles = function (args, // tslint:disable-next-line\n  targetFiles, directory, paste) {\n    var _this = this;\n\n    this.base64String = []; // tslint:disable-next-line\n\n    var eventArgs = {\n      event: args,\n      cancel: false,\n      filesData: [],\n      isModified: false,\n      modifiedFilesData: [],\n      progressInterval: '',\n      isCanceled: false,\n      currentRequest: null,\n      customFormData: null\n    };\n    /* istanbul ignore next */\n\n    if (targetFiles.length < 1) {\n      eventArgs.isCanceled = true;\n      this.trigger('selected', eventArgs);\n      return;\n    }\n\n    this.flag = true;\n    var fileData = [];\n\n    if (!this.multiple) {\n      this.clearData(true);\n      targetFiles = [targetFiles[0]];\n    }\n\n    for (var i = 0; i < targetFiles.length; i++) {\n      var file = directory ? targetFiles[i].file : targetFiles[i];\n      this.updateInitialFileDetails(args, targetFiles, file, i, fileData, directory, paste);\n    }\n\n    eventArgs.filesData = fileData;\n\n    if (this.allowedExtensions.indexOf('*') > -1) {\n      this.allTypes = true;\n    }\n\n    if (!this.allTypes) {\n      fileData = this.checkExtension(fileData);\n    }\n\n    this.trigger('selected', eventArgs, function (eventArgs) {\n      _this._internalRenderSelect(eventArgs, fileData);\n    });\n  };\n\n  Uploader.prototype.updateInitialFileDetails = function (args, // tslint:disable-next-line\n  targetFiles, file, i, fileData, directory, paste) {\n    var fileName = directory ? targetFiles[i].path.substring(1, targetFiles[i].path.length) : paste ? getUniqueID(file.name.substring(0, file.name.lastIndexOf('.'))) + '.' + this.getFileType(file.name) : this.directoryUpload ? targetFiles[i].webkitRelativePath : file.name;\n    var fileDetails = {\n      name: fileName,\n      rawFile: file,\n      size: file.size,\n      status: this.localizedTexts('readyToUploadMessage'),\n      type: this.getFileType(file.name),\n      validationMessages: this.validatedFileSize(file.size),\n      statusCode: '1'\n    };\n    /* istanbul ignore next */\n\n    if (paste) {\n      fileDetails.fileSource = 'paste';\n    }\n\n    fileDetails.status = fileDetails.validationMessages.minSize !== '' ? this.localizedTexts('invalidMinFileSize') : fileDetails.validationMessages.maxSize !== '' ? this.localizedTexts('invalidMaxFileSize') : fileDetails.status;\n\n    if (fileDetails.validationMessages.minSize !== '' || fileDetails.validationMessages.maxSize !== '') {\n      fileDetails.statusCode = '0';\n      this.checkActionComplete(true);\n    }\n\n    fileData.push(fileDetails);\n  };\n\n  Uploader.prototype._internalRenderSelect = function (eventArgs, fileData) {\n    if (!eventArgs.cancel) {\n      /* istanbul ignore next */\n      if (isBlazor()) {\n        this.currentRequestHeader = eventArgs.currentRequest;\n        this.customFormDatas = eventArgs.customFormData;\n      }\n\n      this.selectedFiles = fileData;\n      this.btnTabIndex = this.disableKeyboardNavigation ? '-1' : '0';\n\n      if (this.showFileList) {\n        if (eventArgs.isModified && eventArgs.modifiedFilesData.length > 0) {\n          var dataFiles = this.allTypes ? eventArgs.modifiedFilesData : this.checkExtension(eventArgs.modifiedFilesData);\n          this.updateSortedFileList(dataFiles);\n          this.filesData = dataFiles;\n\n          if (!this.isForm || this.allowUpload()) {\n            this.checkAutoUpload(dataFiles);\n          }\n        } else {\n          this.createFileList(fileData);\n          this.filesData = this.filesData.concat(fileData);\n\n          if (!this.isForm || this.allowUpload()) {\n            this.checkAutoUpload(fileData);\n          }\n        }\n\n        if (!isNullOrUndefined(eventArgs.progressInterval) && eventArgs.progressInterval !== '') {\n          this.progressInterval = eventArgs.progressInterval;\n        }\n      } else {\n        this.filesData = this.filesData.concat(fileData);\n\n        if (this.autoUpload) {\n          this.upload(this.filesData, true);\n        }\n      }\n\n      this.raiseActionComplete();\n    }\n  };\n\n  Uploader.prototype.allowUpload = function () {\n    var allowFormUpload = false;\n\n    if (this.isForm && !isNullOrUndefined(this.asyncSettings.saveUrl) && this.asyncSettings.saveUrl !== '') {\n      allowFormUpload = true;\n    }\n\n    return allowFormUpload;\n  };\n\n  Uploader.prototype.isFormUpload = function () {\n    var isFormUpload = false;\n\n    if (this.isForm && (isNullOrUndefined(this.asyncSettings.saveUrl) || this.asyncSettings.saveUrl === '') && (isNullOrUndefined(this.asyncSettings.removeUrl) || this.asyncSettings.removeUrl === '')) {\n      isFormUpload = true;\n    }\n\n    return isFormUpload;\n  };\n\n  Uploader.prototype.clearData = function (singleUpload) {\n    if (!isNullOrUndefined(this.listParent)) {\n      detach(this.listParent);\n      this.listParent = null;\n    }\n\n    if (this.browserName !== 'msie' && !singleUpload) {\n      this.element.value = '';\n    }\n\n    this.fileList = [];\n    this.filesData = [];\n    this.removeActionButtons();\n  };\n\n  Uploader.prototype.updateSortedFileList = function (filesData) {\n    var previousListClone = this.createElement('div', {\n      id: 'clonewrapper'\n    });\n    var added = -1;\n    var removedList;\n\n    if (this.listParent) {\n      for (var i = 0; i < this.listParent.querySelectorAll('li').length; i++) {\n        var liElement = this.listParent.querySelectorAll('li')[i];\n        previousListClone.appendChild(liElement.cloneNode(true));\n      }\n\n      removedList = this.listParent.querySelectorAll('li');\n\n      for (var _i = 0, removedList_1 = removedList; _i < removedList_1.length; _i++) {\n        var item = removedList_1[_i];\n        detach(item);\n      }\n\n      this.removeActionButtons();\n      var oldList = [].slice.call(previousListClone.childNodes);\n      detach(this.listParent);\n      this.listParent = null;\n      this.fileList = [];\n      this.createParentUL();\n\n      for (var index = 0; index < filesData.length; index++) {\n        for (var j = 0; j < this.filesData.length; j++) {\n          if (this.filesData[j].name === filesData[index].name) {\n            this.listParent.appendChild(oldList[j]);\n            EventHandler.add(oldList[j].querySelector('.e-icons'), 'click', this.removeFiles, this);\n            this.fileList.push(oldList[j]);\n            added = index;\n          }\n        }\n\n        if (added !== index) {\n          this.createFileList([filesData[index]]);\n        }\n      }\n    } else {\n      this.createFileList(filesData);\n    }\n  };\n\n  Uploader.prototype.isBlank = function (str) {\n    return !str || /^\\s*$/.test(str);\n  };\n\n  Uploader.prototype.checkExtension = function (files) {\n    var dropFiles = files;\n\n    if (!this.isBlank(this.allowedExtensions)) {\n      var allowedExtensions = [];\n      var extensions = this.allowedExtensions.split(',');\n\n      for (var _i = 0, extensions_1 = extensions; _i < extensions_1.length; _i++) {\n        var extension = extensions_1[_i];\n        allowedExtensions.push(extension.trim().toLocaleLowerCase());\n      }\n\n      for (var i = 0; i < files.length; i++) {\n        if (allowedExtensions.indexOf(('.' + files[i].type).toLocaleLowerCase()) === -1) {\n          files[i].status = this.localizedTexts('invalidFileType');\n          files[i].statusCode = '0';\n        }\n      }\n    }\n\n    return dropFiles;\n  };\n\n  Uploader.prototype.validatedFileSize = function (fileSize) {\n    var minSizeError = '';\n    var maxSizeError = '';\n\n    if (fileSize < this.minFileSize) {\n      minSizeError = this.localizedTexts('invalidMinFileSize');\n    } else if (fileSize > this.maxFileSize) {\n      maxSizeError = this.localizedTexts('invalidMaxFileSize');\n    } else {\n      minSizeError = '';\n      maxSizeError = '';\n    }\n\n    var errorMessage = {\n      minSize: minSizeError,\n      maxSize: maxSizeError\n    };\n    return errorMessage;\n  };\n\n  Uploader.prototype.isPreLoadFile = function (fileData) {\n    var isPreload = false;\n\n    for (var i = 0; i < this.files.length; i++) {\n      if (this.files[i].name === fileData.name.slice(0, fileData.name.lastIndexOf('.')) && this.files[i].type === fileData.type) {\n        isPreload = true;\n      }\n    }\n\n    return isPreload;\n  };\n\n  Uploader.prototype.createCustomfileList = function (fileData) {\n    this.createParentUL();\n    resetBlazorTemplate(this.element.id + 'Template', 'Template');\n\n    for (var _i = 0, fileData_1 = fileData; _i < fileData_1.length; _i++) {\n      var listItem = fileData_1[_i];\n      var liElement = this.createElement('li', {\n        className: FILE,\n        attrs: {\n          'data-file-name': listItem.name\n        }\n      });\n      this.uploadTemplateFn = this.templateComplier(this.template);\n      var fromElements = [].slice.call(this.uploadTemplateFn(listItem, null, null, this.element.id + 'Template', this.isStringTemplate));\n      var index = fileData.indexOf(listItem);\n      append(fromElements, liElement);\n      var eventArgs = {\n        element: liElement,\n        fileInfo: listItem,\n        index: index,\n        isPreload: this.isPreLoadFile(listItem)\n      };\n      var eventsArgs = {\n        element: liElement,\n        fileInfo: listItem,\n        index: index,\n        isPreload: this.isPreLoadFile(listItem)\n      };\n      this.trigger('rendering', eventArgs);\n      this.trigger('fileListRendering', eventsArgs);\n      this.listParent.appendChild(liElement);\n      this.fileList.push(liElement);\n    }\n\n    updateBlazorTemplate(this.element.id + 'Template', 'Template', this, false);\n  };\n\n  Uploader.prototype.createParentUL = function () {\n    if (isNullOrUndefined(this.listParent)) {\n      this.listParent = this.createElement('ul', {\n        className: LIST_PARENT\n      });\n      this.uploadWrapper.appendChild(this.listParent);\n    }\n  };\n\n  Uploader.prototype.formFileList = function (fileData, files) {\n    var fileList = this.createElement('li', {\n      className: FILE\n    });\n    fileList.setAttribute('data-files-count', fileData.length + '');\n    var fileContainer = this.createElement('span', {\n      className: TEXT_CONTAINER\n    });\n    var statusMessage;\n\n    for (var _i = 0, fileData_2 = fileData; _i < fileData_2.length; _i++) {\n      var listItem = fileData_2[_i];\n      var fileNameEle = this.createElement('span', {\n        className: FILE_NAME\n      });\n      fileNameEle.innerHTML = this.getFileNameOnly(listItem.name);\n      var fileTypeEle = this.createElement('span', {\n        className: FILE_TYPE\n      });\n      fileTypeEle.innerHTML = '.' + this.getFileType(listItem.name);\n\n      if (!this.enableRtl) {\n        fileContainer.appendChild(fileNameEle);\n        fileContainer.appendChild(fileTypeEle);\n      } else {\n        var rtlContainer = this.createElement('span', {\n          className: RTL_CONTAINER\n        });\n        rtlContainer.appendChild(fileTypeEle);\n        rtlContainer.appendChild(fileNameEle);\n        fileContainer.appendChild(rtlContainer);\n      }\n\n      this.truncateName(fileNameEle);\n      statusMessage = this.formValidateFileInfo(listItem, fileList);\n    }\n\n    fileList.appendChild(fileContainer);\n    this.setListToFileInfo(fileData, fileList);\n    var index = this.listParent.querySelectorAll('li').length;\n    var infoEle = this.createElement('span');\n\n    if (fileList.classList.contains(INVALID_FILE)) {\n      infoEle.classList.add(STATUS);\n      infoEle.classList.add(INVALID_FILE);\n      infoEle.innerText = fileData.length > 1 ? this.localizedTexts('invalidFileSelection') : statusMessage;\n    } else {\n      infoEle.classList.add(fileData.length > 1 ? INFORMATION : FILE_SIZE);\n      infoEle.innerText = fileData.length > 1 ? this.localizedTexts('totalFiles') + ': ' + fileData.length + ' , ' + this.localizedTexts('size') + ': ' + this.bytesToSize(this.getFileSize(fileData)) : this.bytesToSize(fileData[0].size);\n      this.createFormInput(fileData);\n    }\n\n    fileContainer.appendChild(infoEle);\n\n    if (isNullOrUndefined(fileList.querySelector('.e-icons'))) {\n      var iconElement = this.createElement('span', {\n        className: 'e-icons',\n        attrs: {\n          'tabindex': this.btnTabIndex\n        }\n      });\n      /* istanbul ignore next */\n\n      if (this.browserName === 'msie') {\n        iconElement.classList.add('e-msie');\n      }\n\n      iconElement.setAttribute('title', this.localizedTexts('remove'));\n      fileList.appendChild(fileContainer);\n      fileList.appendChild(iconElement);\n      EventHandler.add(iconElement, 'click', this.removeFiles, this);\n      iconElement.classList.add(REMOVE_ICON);\n    }\n\n    var eventArgs = {\n      element: fileList,\n      fileInfo: this.mergeFileInfo(fileData, fileList),\n      index: index,\n      isPreload: this.isPreLoadFile(this.mergeFileInfo(fileData, fileList))\n    };\n    var eventsArgs = {\n      element: fileList,\n      fileInfo: this.mergeFileInfo(fileData, fileList),\n      index: index,\n      isPreload: this.isPreLoadFile(this.mergeFileInfo(fileData, fileList))\n    };\n    this.trigger('rendering', eventArgs);\n    this.trigger('fileListRendering', eventsArgs);\n    this.listParent.appendChild(fileList);\n    this.fileList.push(fileList);\n  };\n\n  Uploader.prototype.formValidateFileInfo = function (listItem, fileList) {\n    var statusMessage = listItem.status;\n    var validationMessages = this.validatedFileSize(listItem.size);\n\n    if (validationMessages.minSize !== '' || validationMessages.maxSize !== '') {\n      this.addInvalidClass(fileList);\n      statusMessage = validationMessages.minSize !== '' ? this.localizedTexts('invalidMinFileSize') : validationMessages.maxSize !== '' ? this.localizedTexts('invalidMaxFileSize') : statusMessage;\n    }\n\n    var typeValidationMessage = this.checkExtension(this.getFilesInArray(listItem))[0].status;\n\n    if (typeValidationMessage === this.localizedTexts('invalidFileType')) {\n      this.addInvalidClass(fileList);\n      statusMessage = typeValidationMessage;\n    }\n\n    return statusMessage;\n  };\n\n  Uploader.prototype.addInvalidClass = function (fileList) {\n    fileList.classList.add(INVALID_FILE);\n  };\n\n  Uploader.prototype.createFormInput = function (fileData) {\n    var inputElement = this.element.cloneNode(true);\n    inputElement.classList.add(HIDDEN_INPUT);\n\n    for (var _i = 0, fileData_3 = fileData; _i < fileData_3.length; _i++) {\n      var listItem = fileData_3[_i];\n      listItem.input = inputElement;\n    }\n\n    inputElement.setAttribute('name', this.uploaderName);\n    this.uploadWrapper.querySelector('.' + INPUT_WRAPPER).appendChild(inputElement);\n\n    if (this.browserName !== 'msie' && this.browserName !== 'edge') {\n      this.element.value = '';\n    }\n  };\n\n  Uploader.prototype.getFileSize = function (fileData) {\n    var fileSize = 0;\n\n    for (var _i = 0, fileData_4 = fileData; _i < fileData_4.length; _i++) {\n      var file = fileData_4[_i];\n      fileSize += file.size;\n    }\n\n    return fileSize;\n  };\n\n  Uploader.prototype.mergeFileInfo = function (fileData, fileList) {\n    var result = {\n      name: '',\n      rawFile: '',\n      size: 0,\n      status: '',\n      type: '',\n      validationMessages: {\n        minSize: '',\n        maxSize: ''\n      },\n      statusCode: '1',\n      list: fileList\n    };\n    var fileNames = [];\n    var type = '';\n\n    for (var _i = 0, fileData_5 = fileData; _i < fileData_5.length; _i++) {\n      var listItem = fileData_5[_i];\n      fileNames.push(listItem.name);\n      type = listItem.type;\n    }\n\n    result.name = fileNames.join(', ');\n    result.size = this.getFileSize(fileData);\n    result.type = type;\n    result.status = this.statusForFormUpload(fileData, fileList);\n    return result;\n  };\n\n  Uploader.prototype.statusForFormUpload = function (fileData, fileList) {\n    var isValid = true;\n    var statusMessage;\n\n    for (var _i = 0, fileData_6 = fileData; _i < fileData_6.length; _i++) {\n      var listItem = fileData_6[_i];\n      statusMessage = listItem.status;\n      var validationMessages = this.validatedFileSize(listItem.size);\n\n      if (validationMessages.minSize !== '' || validationMessages.maxSize !== '') {\n        isValid = false;\n        statusMessage = validationMessages.minSize !== '' ? this.localizedTexts('invalidMinFileSize') : validationMessages.maxSize !== '' ? this.localizedTexts('invalidMaxFileSize') : statusMessage;\n      }\n\n      var typeValidationMessage = this.checkExtension(this.getFilesInArray(listItem))[0].status;\n\n      if (typeValidationMessage === this.localizedTexts('invalidFileType')) {\n        isValid = false;\n        statusMessage = typeValidationMessage;\n      }\n    }\n\n    if (!isValid) {\n      fileList.classList.add(INVALID_FILE);\n      statusMessage = fileData.length > 1 ? this.localizedTexts('invalidFileSelection') : statusMessage;\n    } else {\n      statusMessage = this.localizedTexts('totalFiles') + ': ' + fileData.length + ' , ' + this.localizedTexts('size') + ': ' + this.bytesToSize(this.getFileSize(fileData));\n    }\n\n    return statusMessage;\n  };\n\n  Uploader.prototype.formCustomFileList = function (fileData, files) {\n    this.createParentUL();\n    resetBlazorTemplate(this.element.id + 'Template', 'Template');\n    var fileList = this.createElement('li', {\n      className: FILE\n    });\n    fileList.setAttribute('data-files-count', fileData.length + '');\n    this.setListToFileInfo(fileData, fileList);\n    var result = this.mergeFileInfo(fileData, fileList);\n    fileList.setAttribute('data-file-name', result.name);\n    this.uploadTemplateFn = this.templateComplier(this.template);\n    var fromElements = [].slice.call(this.uploadTemplateFn(result, null, null, this.element.id + 'Template', this.isStringTemplate));\n    var index = this.listParent.querySelectorAll('li').length;\n    append(fromElements, fileList);\n\n    if (!fileList.classList.contains(INVALID_FILE)) {\n      this.createFormInput(fileData);\n    }\n\n    var eventArgs = {\n      element: fileList,\n      fileInfo: result,\n      index: index,\n      isPreload: this.isPreLoadFile(result)\n    };\n    var eventsArgs = {\n      element: fileList,\n      fileInfo: result,\n      index: index,\n      isPreload: this.isPreLoadFile(result)\n    };\n    this.trigger('rendering', eventArgs);\n    this.trigger('fileListRendering', eventsArgs);\n    this.listParent.appendChild(fileList);\n    this.fileList.push(fileList);\n    updateBlazorTemplate(this.element.id + 'Template', 'Template', this, false);\n  };\n  /**\n   * Create the file list for specified files data.\n   * @param { FileInfo[] } fileData - specifies the files data for file list creation.\n   * @returns void\n   */\n\n\n  Uploader.prototype.createFileList = function (fileData) {\n    this.createParentUL();\n\n    if (this.template !== '' && !isNullOrUndefined(this.template)) {\n      if (this.isFormUpload()) {\n        this.uploadWrapper.classList.add(FORM_UPLOAD);\n        this.formCustomFileList(fileData, this.element.files);\n      } else {\n        this.createCustomfileList(fileData);\n      }\n    } else if (this.isFormUpload()) {\n      this.uploadWrapper.classList.add(FORM_UPLOAD);\n      this.formFileList(fileData, this.element.files);\n    } else {\n      for (var _i = 0, fileData_7 = fileData; _i < fileData_7.length; _i++) {\n        var listItem = fileData_7[_i];\n        var liElement = this.createElement('li', {\n          className: FILE,\n          attrs: {\n            'data-file-name': listItem.name,\n            'data-files-count': '1'\n          }\n        });\n        var textContainer = this.createElement('span', {\n          className: TEXT_CONTAINER\n        });\n        var textElement = this.createElement('span', {\n          className: FILE_NAME,\n          attrs: {\n            'title': listItem.name\n          }\n        });\n        textElement.innerHTML = this.getFileNameOnly(listItem.name);\n        var fileExtension = this.createElement('span', {\n          className: FILE_TYPE\n        });\n        fileExtension.innerHTML = '.' + this.getFileType(listItem.name);\n\n        if (!this.enableRtl) {\n          textContainer.appendChild(textElement);\n          textContainer.appendChild(fileExtension);\n        } else {\n          var rtlContainer = this.createElement('span', {\n            className: RTL_CONTAINER\n          });\n          rtlContainer.appendChild(fileExtension);\n          rtlContainer.appendChild(textElement);\n          textContainer.appendChild(rtlContainer);\n        }\n\n        var fileSize = this.createElement('span', {\n          className: FILE_SIZE\n        });\n        fileSize.innerHTML = this.bytesToSize(listItem.size);\n        textContainer.appendChild(fileSize);\n        var statusElement = this.createElement('span', {\n          className: STATUS\n        });\n        textContainer.appendChild(statusElement);\n        statusElement.innerHTML = listItem.status;\n        liElement.appendChild(textContainer);\n        var iconElement = this.createElement('span', {\n          className: ' e-icons',\n          attrs: {\n            'tabindex': this.btnTabIndex\n          }\n        });\n        /* istanbul ignore next */\n\n        if (this.browserName === 'msie') {\n          iconElement.classList.add('e-msie');\n        }\n\n        iconElement.setAttribute('title', this.localizedTexts('remove'));\n        liElement.appendChild(iconElement);\n        EventHandler.add(iconElement, 'click', this.removeFiles, this);\n\n        if (listItem.statusCode === '2') {\n          statusElement.classList.add(UPLOAD_SUCCESS);\n          iconElement.classList.add(DELETE_ICON);\n          iconElement.setAttribute('title', this.localizedTexts('delete'));\n        } else if (listItem.statusCode !== '1') {\n          statusElement.classList.remove(UPLOAD_SUCCESS);\n          statusElement.classList.add(VALIDATION_FAILS);\n        }\n\n        if (this.autoUpload && listItem.statusCode === '1' && this.asyncSettings.saveUrl !== '') {\n          statusElement.innerHTML = '';\n        }\n\n        if (!iconElement.classList.contains(DELETE_ICON)) {\n          iconElement.classList.add(REMOVE_ICON);\n        }\n\n        var index = fileData.indexOf(listItem);\n        var eventArgs = {\n          element: liElement,\n          fileInfo: listItem,\n          index: index,\n          isPreload: this.isPreLoadFile(listItem)\n        };\n        var eventsArgs = {\n          element: liElement,\n          fileInfo: listItem,\n          index: index,\n          isPreload: this.isPreLoadFile(listItem)\n        };\n        this.trigger('rendering', eventArgs);\n        this.trigger('fileListRendering', eventsArgs);\n        this.listParent.appendChild(liElement);\n        this.fileList.push(liElement);\n        this.truncateName(textElement);\n      }\n    }\n  };\n\n  Uploader.prototype.getSlicedName = function (nameElement) {\n    var text;\n    text = nameElement.textContent;\n    nameElement.dataset.tail = text.slice(text.length - 10);\n  };\n\n  Uploader.prototype.setListToFileInfo = function (fileData, fileList) {\n    for (var _i = 0, fileData_8 = fileData; _i < fileData_8.length; _i++) {\n      var listItem = fileData_8[_i];\n      listItem.list = fileList;\n    }\n  };\n\n  Uploader.prototype.truncateName = function (name) {\n    var nameElement = name;\n\n    if (this.browserName !== 'edge' && nameElement.offsetWidth < nameElement.scrollWidth) {\n      this.getSlicedName(nameElement);\n      /* istanbul ignore next */\n    } else if (nameElement.offsetWidth + 1 < nameElement.scrollWidth) {\n      this.getSlicedName(nameElement);\n    }\n  };\n\n  Uploader.prototype.getFileType = function (name) {\n    var extension;\n    var index = name.lastIndexOf('.');\n\n    if (index >= 0) {\n      extension = name.substring(index + 1);\n    }\n\n    return extension ? extension : '';\n  };\n\n  Uploader.prototype.getFileNameOnly = function (name) {\n    var type = this.getFileType(name);\n    var names = name.split('.' + type);\n    return type = names[0];\n  };\n\n  Uploader.prototype.setInitialAttributes = function () {\n    if (this.initialAttr.accept) {\n      this.element.setAttribute('accept', this.initialAttr.accept);\n    }\n\n    if (this.initialAttr.disabled) {\n      this.element.setAttribute('disabled', 'disabled');\n    }\n\n    if (this.initialAttr.multiple) {\n      var newAttr = document.createAttribute('multiple');\n      this.element.setAttributeNode(newAttr);\n    }\n  };\n\n  Uploader.prototype.filterfileList = function (files) {\n    var filterFiles = [];\n    var li;\n\n    for (var i = 0; i < files.length; i++) {\n      li = this.getLiElement(files[i]);\n\n      if (!li.classList.contains(UPLOAD_SUCCESS)) {\n        filterFiles.push(files[i]);\n      }\n    }\n\n    return filterFiles;\n  };\n\n  Uploader.prototype.updateStatus = function (files, status, statusCode, updateLiStatus) {\n    if (updateLiStatus === void 0) {\n      updateLiStatus = true;\n    }\n\n    if (!(status === '' || isNullOrUndefined(status)) && !(statusCode === '' || isNullOrUndefined(statusCode))) {\n      files.status = status;\n      files.statusCode = statusCode;\n    }\n\n    if (updateLiStatus) {\n      var li = this.getLiElement(files);\n\n      if (!isNullOrUndefined(li)) {\n        if (!isNullOrUndefined(li.querySelector('.' + STATUS)) && !(status === '' || isNullOrUndefined(status))) {\n          li.querySelector('.' + STATUS).textContent = status;\n        }\n      }\n    }\n\n    return files;\n  };\n\n  Uploader.prototype.getLiElement = function (files) {\n    var index;\n\n    for (var i = 0; i < this.filesData.length; i++) {\n      if (this.filesData[i].name === files.name) {\n        index = i;\n      }\n    }\n\n    return this.fileList[index];\n  };\n\n  Uploader.prototype.createProgressBar = function (liElement) {\n    var progressbarWrapper = this.createElement('span', {\n      className: PROGRESS_WRAPPER\n    });\n    var progressBar = this.createElement('progressbar', {\n      className: PROGRESSBAR,\n      attrs: {\n        value: '0',\n        max: '100'\n      }\n    });\n    var progressbarInnerWrapper = this.createElement('span', {\n      className: PROGRESS_INNER_WRAPPER\n    });\n    progressBar.setAttribute('style', 'width: 0%');\n    var progressbarText = this.createElement('span', {\n      className: PROGRESSBAR_TEXT\n    });\n    progressbarText.textContent = '0%';\n    progressbarInnerWrapper.appendChild(progressBar);\n    progressbarWrapper.appendChild(progressbarInnerWrapper);\n    progressbarWrapper.appendChild(progressbarText);\n    liElement.querySelector('.' + TEXT_CONTAINER).appendChild(progressbarWrapper);\n  };\n  /* istanbul ignore next */\n\n\n  Uploader.prototype.updateProgressbar = function (e, li) {\n    if (!isNaN(Math.round(e.loaded / e.total * 100)) && !isNullOrUndefined(li.querySelector('.' + PROGRESSBAR))) {\n      if (!isNullOrUndefined(this.progressInterval) && this.progressInterval !== '') {\n        var value = Math.round(e.loaded / e.total * 100) % parseInt(this.progressInterval, 10);\n\n        if (value === 0 || value === 100) {\n          this.changeProgressValue(li, Math.round(e.loaded / e.total * 100).toString() + '%');\n        }\n      } else {\n        this.changeProgressValue(li, Math.round(e.loaded / e.total * 100).toString() + '%');\n      }\n    }\n  };\n\n  Uploader.prototype.changeProgressValue = function (li, progressValue) {\n    li.querySelector('.' + PROGRESSBAR).setAttribute('style', 'width:' + progressValue);\n    li.querySelector('.' + PROGRESSBAR_TEXT).textContent = progressValue;\n  };\n\n  Uploader.prototype.uploadInProgress = function (e, files, customUI, request) {\n    var li = this.getLiElement(files);\n\n    if (isNullOrUndefined(li) && !customUI) {\n      return;\n    }\n\n    if (!isNullOrUndefined(li)) {\n      /* istanbul ignore next */\n      if (files.statusCode === '5') {\n        this.cancelUploadingFile(files, e, request, li);\n      }\n\n      if (!(li.querySelectorAll('.' + PROGRESS_WRAPPER).length > 0) && li.querySelector('.' + STATUS)) {\n        li.querySelector('.' + STATUS).classList.add(UPLOAD_INPROGRESS);\n        this.createProgressBar(li);\n        this.updateProgressBarClasses(li, UPLOAD_INPROGRESS);\n        li.querySelector('.' + STATUS).classList.remove(UPLOAD_FAILED);\n      }\n\n      this.updateProgressbar(e, li);\n      var iconEle = li.querySelector('.' + REMOVE_ICON);\n\n      if (!isNullOrUndefined(iconEle)) {\n        iconEle.classList.add(ABORT_ICON, UPLOAD_INPROGRESS);\n        iconEle.setAttribute('title', this.localizedTexts('abort'));\n        iconEle.classList.remove(REMOVE_ICON);\n      }\n    } else {\n      this.cancelUploadingFile(files, e, request);\n    }\n\n    var args = {\n      e: e,\n      operation: 'upload',\n      file: this.updateStatus(files, this.localizedTexts('inProgress'), '3')\n    };\n    this.trigger('progress', args);\n  };\n  /* istanbul ignore next */\n\n\n  Uploader.prototype.cancelUploadingFile = function (files, e, request, li) {\n    var _this = this;\n\n    if (files.statusCode === '5') {\n      var eventArgs = {\n        event: e,\n        fileData: files,\n        cancel: false\n      };\n      this.trigger('canceling', eventArgs, function (eventArgs) {\n        if (eventArgs.cancel) {\n          files.statusCode = '3';\n\n          if (!isNullOrUndefined(li)) {\n            var spinnerTarget = li.querySelector('.' + ABORT_ICON);\n\n            if (!isNullOrUndefined(spinnerTarget)) {\n              hideSpinner(spinnerTarget);\n              detach(li.querySelector('.e-spinner-pane'));\n            }\n          }\n        } else {\n          request.emitError = false;\n          request.httpRequest.abort();\n          var formData = new FormData();\n\n          if (files.statusCode === '5') {\n            var name_1 = _this.element.getAttribute('name');\n\n            formData.append(name_1, files.name);\n            formData.append('cancel-uploading', files.name);\n            var ajax = new Ajax(_this.asyncSettings.removeUrl, 'POST', true, null);\n            ajax.emitError = false;\n\n            ajax.onLoad = function (e) {\n              _this.removecanceledFile(e, files);\n\n              return {};\n            };\n\n            ajax.send(formData);\n          }\n        }\n      });\n    }\n  };\n\n  Uploader.prototype.removecanceledFile = function (e, file) {\n    var liElement = this.getLiElement(file);\n\n    if (liElement.querySelector('.' + RETRY_ICON) || isNullOrUndefined(liElement.querySelector('.' + ABORT_ICON))) {\n      return;\n    }\n\n    this.updateStatus(file, this.localizedTexts('fileUploadCancel'), '5');\n    this.renderFailureState(e, file, liElement);\n    var spinnerTarget = liElement.querySelector('.' + REMOVE_ICON);\n\n    if (!isNullOrUndefined(liElement)) {\n      hideSpinner(spinnerTarget);\n      detach(liElement.querySelector('.e-spinner-pane'));\n    }\n\n    var requestResponse = e && e.currentTarget ? this.getResponse(e) : null;\n    var args = {\n      event: e,\n      response: requestResponse,\n      operation: 'cancel',\n      file: file\n    };\n    this.trigger('success', args);\n  };\n\n  Uploader.prototype.renderFailureState = function (e, file, liElement) {\n    var _this = this;\n\n    this.updateProgressBarClasses(liElement, UPLOAD_FAILED);\n    this.removeProgressbar(liElement, 'failure');\n\n    if (!isNullOrUndefined(liElement.querySelector('.e-file-status'))) {\n      liElement.querySelector('.e-file-status').classList.add(UPLOAD_FAILED);\n    }\n\n    var deleteIcon = liElement.querySelector('.' + ABORT_ICON);\n\n    if (isNullOrUndefined(deleteIcon)) {\n      return;\n    }\n\n    deleteIcon.classList.remove(ABORT_ICON, UPLOAD_INPROGRESS);\n    deleteIcon.classList.add(REMOVE_ICON);\n    deleteIcon.setAttribute('title', this.localizedTexts('remove'));\n    this.pauseButton = this.createElement('span', {\n      className: 'e-icons e-file-reload-btn',\n      attrs: {\n        'tabindex': this.btnTabIndex\n      }\n    });\n    deleteIcon.parentElement.insertBefore(this.pauseButton, deleteIcon);\n    this.pauseButton.setAttribute('title', this.localizedTexts('retry'));\n    var retryElement = liElement.querySelector('.' + RETRY_ICON);\n    /* istanbul ignore next */\n\n    retryElement.addEventListener('click', function (e) {\n      _this.reloadcanceledFile(e, file, liElement, false);\n    }, false);\n  };\n\n  Uploader.prototype.reloadcanceledFile = function (e, file, liElement, custom) {\n    file.statusCode = '1';\n    file.status = this.localizedTexts('readyToUploadMessage');\n\n    if (!custom) {\n      liElement.querySelector('.' + STATUS).classList.remove(UPLOAD_FAILED);\n\n      if (!isNullOrUndefined(liElement.querySelector('.' + RETRY_ICON))) {\n        detach(liElement.querySelector('.' + RETRY_ICON));\n      }\n\n      this.pauseButton = null;\n    }\n    /* istanbul ignore next */\n\n\n    liElement.classList.add(RESTRICT_RETRY);\n    this.upload([file]);\n  };\n  /* istanbul ignore next */\n\n\n  Uploader.prototype.uploadComplete = function (e, file, customUI) {\n    var status = e.target;\n\n    if (status.readyState === 4 && status.status >= 200 && status.status <= 299) {\n      var li = this.getLiElement(file);\n\n      if (isNullOrUndefined(li) && (!customUI || isNullOrUndefined(customUI))) {\n        return;\n      }\n\n      if (!isNullOrUndefined(li)) {\n        this.updateProgressBarClasses(li, UPLOAD_SUCCESS);\n        this.removeProgressbar(li, 'success');\n        var iconEle = li.querySelector('.' + ABORT_ICON);\n\n        if (!isNullOrUndefined(iconEle)) {\n          iconEle.classList.add(DELETE_ICON);\n          iconEle.setAttribute('title', this.localizedTexts('delete'));\n          iconEle.classList.remove(ABORT_ICON);\n          iconEle.classList.remove(UPLOAD_INPROGRESS);\n        }\n      }\n\n      this.raiseSuccessEvent(e, file);\n    } else {\n      this.uploadFailed(e, file);\n    }\n  };\n\n  Uploader.prototype.getResponse = function (e) {\n    // tslint:disable-next-line\n    var target = e.currentTarget;\n    var response = {\n      readyState: target.readyState,\n      statusCode: target.status,\n      statusText: target.statusText,\n      headers: target.getAllResponseHeaders(),\n      withCredentials: target.withCredentials\n    };\n    return response;\n  };\n\n  Uploader.prototype.raiseSuccessEvent = function (e, file) {\n    var _this = this;\n\n    var response = e && e.currentTarget ? this.getResponse(e) : null;\n    var statusMessage = this.localizedTexts('uploadSuccessMessage');\n    var args = {\n      e: e,\n      response: response,\n      operation: 'upload',\n      file: this.updateStatus(file, statusMessage, '2', false),\n      statusText: statusMessage\n    };\n    var liElement = this.getLiElement(file);\n\n    if (!isNullOrUndefined(liElement)) {\n      var spinnerEle = liElement.querySelector('.' + SPINNER_PANE);\n\n      if (!isNullOrUndefined(spinnerEle)) {\n        hideSpinner(liElement);\n        detach(spinnerEle);\n      }\n    }\n\n    this.trigger('success', args, function (args) {\n      // tslint:disable-next-line\n      _this.updateStatus(file, args.statusText, '2');\n\n      _this.uploadedFilesData.push(file);\n\n      _this.trigger('change', {\n        file: _this.uploadedFilesData\n      });\n\n      _this.checkActionButtonStatus();\n\n      if (_this.fileList.length > 0) {\n        if (!_this.getLiElement(file).classList.contains(RESTRICT_RETRY)) {\n          _this.uploadSequential();\n\n          _this.checkActionComplete(true);\n        } else {\n          /* istanbul ignore next */\n          _this.getLiElement(file).classList.remove(RESTRICT_RETRY);\n        }\n      }\n    });\n  };\n\n  Uploader.prototype.uploadFailed = function (e, file) {\n    var _this = this;\n\n    var li = this.getLiElement(file);\n    var response = e && e.currentTarget ? this.getResponse(e) : null;\n    var statusMessage = this.localizedTexts('uploadFailedMessage');\n    var args = {\n      e: e,\n      response: response,\n      operation: 'upload',\n      file: this.updateStatus(file, statusMessage, '0', false),\n      statusText: statusMessage\n    };\n\n    if (!isNullOrUndefined(li)) {\n      this.renderFailureState(e, file, li);\n    }\n\n    this.trigger('failure', args, function (args) {\n      // tslint:disable-next-line\n      _this.updateStatus(file, args.statusText, '0');\n\n      _this.checkActionButtonStatus();\n\n      _this.uploadSequential();\n\n      _this.checkActionComplete(true);\n    });\n  };\n\n  Uploader.prototype.uploadSequential = function () {\n    if (this.sequentialUpload) {\n      if (this.autoUpload) {\n        /* istanbul ignore next */\n        this.checkAutoUpload(this.filesData);\n      } else {\n        this.uploadButtonClick();\n      }\n    }\n  };\n\n  Uploader.prototype.checkActionComplete = function (increment) {\n    increment ? ++this.actionCompleteCount : --this.actionCompleteCount;\n    this.raiseActionComplete();\n  };\n\n  Uploader.prototype.raiseActionComplete = function () {\n    if (this.filesData.length === this.actionCompleteCount && this.flag) {\n      this.flag = false;\n      var eventArgs = {\n        fileData: []\n      };\n      eventArgs.fileData = this.getSelectedFileStatus(this.selectedFiles);\n      this.trigger('actionComplete', eventArgs);\n    }\n  };\n\n  Uploader.prototype.getSelectedFileStatus = function (selectedFiles) {\n    var matchFiles = [];\n    var matchFilesIndex = 0;\n\n    for (var selectFileIndex = 0; selectFileIndex < selectedFiles.length; selectFileIndex++) {\n      var selectedFileData = selectedFiles[selectFileIndex];\n\n      for (var fileDataIndex = 0; fileDataIndex < this.filesData.length; fileDataIndex++) {\n        if (this.filesData[fileDataIndex].name === selectedFileData.name) {\n          matchFiles[matchFilesIndex] = this.filesData[fileDataIndex];\n          ++matchFilesIndex;\n        }\n      }\n    }\n\n    return matchFiles;\n  };\n\n  Uploader.prototype.updateProgressBarClasses = function (li, className) {\n    var progressBar = li.querySelector('.' + PROGRESSBAR);\n\n    if (!isNullOrUndefined(progressBar)) {\n      progressBar.classList.add(className);\n    }\n  };\n\n  Uploader.prototype.removeProgressbar = function (li, callType) {\n    var _this = this;\n\n    if (!isNullOrUndefined(li.querySelector('.' + PROGRESS_WRAPPER))) {\n      this.progressAnimation = new Animation({\n        duration: 1250\n      });\n      this.progressAnimation.animate(li.querySelector('.' + PROGRESS_WRAPPER), {\n        name: 'FadeOut'\n      });\n      this.progressAnimation.animate(li.querySelector('.' + PROGRESSBAR_TEXT), {\n        name: 'FadeOut'\n      });\n      setTimeout(function () {\n        _this.animateProgressBar(li, callType);\n      }, 750);\n    }\n  };\n  /* istanbul ignore next */\n\n\n  Uploader.prototype.animateProgressBar = function (li, callType) {\n    if (callType === 'success') {\n      li.classList.add(UPLOAD_SUCCESS);\n\n      if (!isNullOrUndefined(li.querySelector('.' + STATUS))) {\n        li.querySelector('.' + STATUS).classList.remove(UPLOAD_INPROGRESS);\n        this.progressAnimation.animate(li.querySelector('.' + STATUS), {\n          name: 'FadeIn'\n        });\n        li.querySelector('.' + STATUS).classList.add(UPLOAD_SUCCESS);\n      }\n    } else {\n      if (!isNullOrUndefined(li.querySelector('.' + STATUS))) {\n        li.querySelector('.' + STATUS).classList.remove(UPLOAD_INPROGRESS);\n        this.progressAnimation.animate(li.querySelector('.' + STATUS), {\n          name: 'FadeIn'\n        });\n        li.querySelector('.' + STATUS).classList.add(UPLOAD_FAILED);\n      }\n    }\n\n    if (li.querySelector('.' + PROGRESS_WRAPPER)) {\n      detach(li.querySelector('.' + PROGRESS_WRAPPER));\n    }\n  };\n\n  Uploader.prototype.setExtensions = function (extensions) {\n    if (extensions !== '' && !isNullOrUndefined(extensions)) {\n      this.element.setAttribute('accept', extensions);\n    } else {\n      this.element.removeAttribute('accept');\n    }\n  };\n\n  Uploader.prototype.templateComplier = function (uploadTemplate) {\n    if (uploadTemplate) {\n      var exception = void 0;\n\n      try {\n        if (document.querySelectorAll(uploadTemplate).length) {\n          return compile(document.querySelector(uploadTemplate).innerHTML.trim());\n        }\n      } catch (exception) {\n        return compile(uploadTemplate);\n      }\n    }\n\n    return undefined;\n  };\n\n  Uploader.prototype.setRTL = function () {\n    this.enableRtl ? addClass([this.uploadWrapper], RTL) : removeClass([this.uploadWrapper], RTL);\n  };\n\n  Uploader.prototype.localizedTexts = function (localeText) {\n    this.l10n.setLocale(this.locale);\n    return this.l10n.getConstant(localeText);\n  };\n\n  Uploader.prototype.setControlStatus = function () {\n    if (!this.enabled) {\n      this.uploadWrapper.classList.add(DISABLED);\n      this.element.setAttribute('disabled', 'disabled');\n      this.browseButton.setAttribute('disabled', 'disabled');\n\n      if (!isNullOrUndefined(this.clearButton)) {\n        this.clearButton.setAttribute('disabled', 'disabled');\n      }\n\n      if (!isNullOrUndefined(this.uploadButton)) {\n        this.uploadButton.setAttribute('disabled', 'disabled');\n      }\n    } else {\n      if (this.uploadWrapper.classList.contains(DISABLED)) {\n        this.uploadWrapper.classList.remove(DISABLED);\n      }\n\n      if (!isNullOrUndefined(this.browseButton) && this.element.hasAttribute('disabled')) {\n        this.element.removeAttribute('disabled');\n        this.browseButton.removeAttribute('disabled');\n      }\n\n      if (!isNullOrUndefined(this.clearButton) && this.clearButton.hasAttribute('disabled')) {\n        this.clearButton.removeAttribute('disabled');\n      }\n\n      if (!isNullOrUndefined(this.uploadButton) && this.uploadButton.hasAttribute('disabled')) {\n        this.uploadButton.hasAttribute('disabled');\n      }\n    }\n  };\n\n  Uploader.prototype.checkHTMLAttributes = function (isDynamic) {\n    var attributes = isDynamic ? isNullOrUndefined(this.htmlAttributes) ? [] : Object.keys(this.htmlAttributes) : ['accept', 'multiple', 'disabled'];\n\n    for (var _i = 0, attributes_1 = attributes; _i < attributes_1.length; _i++) {\n      var prop = attributes_1[_i];\n\n      if (!isNullOrUndefined(this.element.getAttribute(prop))) {\n        switch (prop) {\n          case 'accept':\n            // tslint:disable-next-line\n            if (isNullOrUndefined(this.uploaderOptions) || this.uploaderOptions['allowedExtensions'] === undefined || isDynamic) {\n              this.setProperties({\n                allowedExtensions: this.element.getAttribute('accept')\n              }, !isDynamic);\n              this.initialAttr.accept = this.allowedExtensions;\n            }\n\n            break;\n\n          case 'multiple':\n            // tslint:disable-next-line\n            if (isNullOrUndefined(this.uploaderOptions) || this.uploaderOptions['multiple'] === undefined || isDynamic) {\n              var isMutiple = this.element.getAttribute(prop) === 'multiple' || this.element.getAttribute(prop) === '' || this.element.getAttribute(prop) === 'true' ? true : false;\n              this.setProperties({\n                multiple: isMutiple\n              }, !isDynamic);\n              this.initialAttr.multiple = true;\n            }\n\n            break;\n\n          case 'disabled':\n            // tslint:disable-next-line\n            if (isNullOrUndefined(this.uploaderOptions) || this.uploaderOptions['enabled'] === undefined || isDynamic) {\n              var isDisabled = this.element.getAttribute(prop) === 'disabled' || this.element.getAttribute(prop) === '' || this.element.getAttribute(prop) === 'true' ? false : true;\n              this.setProperties({\n                enabled: isDisabled\n              }, !isDynamic);\n              this.initialAttr.disabled = true;\n            }\n\n        }\n      }\n    }\n  };\n\n  Uploader.prototype.chunkUpload = function (file, custom, fileIndex) {\n    var start = 0;\n    var end = Math.min(this.asyncSettings.chunkSize, file.size);\n    var index = 0;\n    var blob = file.rawFile.slice(start, end);\n    var metaData = {\n      chunkIndex: index,\n      blob: blob,\n      file: file,\n      start: start,\n      end: end,\n      retryCount: 0,\n      request: null\n    };\n    this.sendRequest(file, metaData, custom, fileIndex);\n  };\n\n  Uploader.prototype.sendRequest = function (file, metaData, custom, fileIndex) {\n    var _this = this;\n\n    var formData = new FormData();\n    var cloneFile;\n    var blob = file.rawFile.slice(metaData.start, metaData.end);\n    formData.append('chunkFile', blob, file.name);\n    formData.append('chunk-index', metaData.chunkIndex.toString());\n    formData.append('chunkIndex', metaData.chunkIndex.toString());\n    var totalChunk = Math.max(Math.ceil(file.size / this.asyncSettings.chunkSize), 1);\n    formData.append('total-chunk', totalChunk.toString());\n    formData.append('totalChunk', totalChunk.toString());\n    var ajax = new Ajax({\n      url: this.asyncSettings.saveUrl,\n      type: 'POST',\n      async: true,\n      contentType: null\n    });\n    ajax.emitError = false;\n\n    ajax.onLoad = function (e) {\n      _this.chunkUploadComplete(e, metaData, custom);\n\n      return {};\n    };\n\n    ajax.onUploadProgress = function (e) {\n      _this.chunkUploadInProgress(e, metaData, custom);\n\n      return {};\n    };\n\n    var eventArgs = {\n      fileData: file,\n      customFormData: [],\n      cancel: false,\n      chunkSize: this.asyncSettings.chunkSize === 0 ? null : this.asyncSettings.chunkSize\n    };\n\n    ajax.beforeSend = function (e) {\n      eventArgs.currentRequest = ajax.httpRequest;\n      eventArgs.currentChunkIndex = metaData.chunkIndex;\n      /* istanbul ignore next */\n\n      if (isBlazor()) {\n        if (_this.currentRequestHeader) {\n          _this.updateCustomheader(ajax.httpRequest, _this.currentRequestHeader);\n        }\n\n        if (_this.customFormDatas) {\n          _this.updateFormData(formData, _this.customFormDatas);\n        }\n      }\n\n      if (eventArgs.currentChunkIndex === 0) {\n        // This event is currently not required but to avoid breaking changes for previous customer, we have included.\n        _this.trigger('uploading', eventArgs, function (eventArgs) {\n          _this.uploadingEventCallback(formData, eventArgs, e, file);\n        });\n      } else {\n        _this.trigger('chunkUploading', eventArgs, function (eventArgs) {\n          _this.uploadingEventCallback(formData, eventArgs, e, file);\n        });\n      }\n    };\n    /* istanbul ignore next */\n\n\n    ajax.onError = function (e) {\n      _this.chunkUploadFailed(e, metaData, custom);\n\n      return {};\n    };\n\n    ajax.send(formData);\n    metaData.request = ajax;\n  };\n\n  Uploader.prototype.uploadingEventCallback = function (formData, eventArgs, e, file) {\n    if (eventArgs.cancel) {\n      this.eventCancelByArgs(e, eventArgs, file);\n    } else {\n      this.updateFormData(formData, eventArgs.customFormData);\n    }\n  };\n\n  Uploader.prototype.eventCancelByArgs = function (e, eventArgs, file) {\n    var _this = this;\n\n    e.cancel = true;\n\n    if (eventArgs.fileData.statusCode === '5') {\n      return;\n    }\n\n    var liElement = this.getLiElement(eventArgs.fileData);\n    liElement.querySelector('.' + STATUS).innerHTML = this.localizedTexts('fileUploadCancel');\n    liElement.querySelector('.' + STATUS).classList.add(UPLOAD_FAILED);\n    eventArgs.fileData.statusCode = '5';\n    eventArgs.fileData.status = this.localizedTexts('fileUploadCancel');\n    this.pauseButton = this.createElement('span', {\n      className: 'e-icons e-file-reload-btn',\n      attrs: {\n        'tabindex': this.btnTabIndex\n      }\n    });\n    var removeIcon = liElement.querySelector('.' + REMOVE_ICON);\n    removeIcon.parentElement.insertBefore(this.pauseButton, removeIcon);\n    this.pauseButton.setAttribute('title', this.localizedTexts('retry'));\n    /* istanbul ignore next */\n\n    this.pauseButton.addEventListener('click', function (e) {\n      _this.reloadcanceledFile(e, file, liElement);\n    }, false);\n    this.checkActionButtonStatus();\n  };\n\n  Uploader.prototype.checkChunkUpload = function () {\n    return this.asyncSettings.chunkSize <= 0 || isNullOrUndefined(this.asyncSettings.chunkSize) ? false : true;\n  };\n\n  Uploader.prototype.chunkUploadComplete = function (e, metaData, custom) {\n    var _this = this;\n\n    var response = e.target;\n    var liElement;\n\n    if (response.readyState === 4 && response.status >= 200 && response.status < 300) {\n      var requestResponse = e && e.currentTarget ? this.getResponse(e) : null;\n      var totalChunk = Math.max(Math.ceil(metaData.file.size / this.asyncSettings.chunkSize), 1);\n      var eventArgs = {\n        event: e,\n        file: metaData.file,\n        chunkIndex: metaData.chunkIndex,\n        totalChunk: totalChunk,\n        chunkSize: this.asyncSettings.chunkSize,\n        response: requestResponse\n      };\n      this.trigger('chunkSuccess', eventArgs);\n\n      if (isNullOrUndefined(custom) || !custom) {\n        liElement = this.getLiElement(metaData.file);\n      }\n\n      this.updateMetaData(metaData);\n\n      if (metaData.end === metaData.file.size) {\n        metaData.file.statusCode = '3';\n      }\n\n      if (metaData.file.statusCode === '5') {\n        var eventArgs_1 = {\n          event: e,\n          fileData: metaData.file,\n          cancel: false\n        };\n        this.trigger('canceling', eventArgs_1, function (eventArgs) {\n          /* istanbul ignore next */\n          if (eventArgs.cancel) {\n            metaData.file.statusCode = '3';\n            var spinnerTarget = liElement.querySelector('.' + ABORT_ICON);\n\n            if (!isNullOrUndefined(liElement) && !isNullOrUndefined(spinnerTarget)) {\n              hideSpinner(spinnerTarget);\n              detach(liElement.querySelector('.e-spinner-pane'));\n            }\n\n            _this.sendNextRequest(metaData);\n          } else {\n            metaData.request.emitError = false;\n            response.abort();\n            var formData = new FormData();\n\n            var name_2 = _this.element.getAttribute('name');\n\n            formData.append(name_2, metaData.file.name);\n            formData.append('cancel-uploading', metaData.file.name);\n            formData.append('cancelUploading', metaData.file.name);\n            var ajax = new Ajax(_this.asyncSettings.removeUrl, 'POST', true, null);\n            ajax.emitError = false;\n\n            ajax.onLoad = function (e) {\n              _this.removeChunkFile(e, metaData, custom);\n\n              return {};\n            };\n\n            ajax.send(formData);\n          }\n        });\n      } else {\n        if (totalChunk - 1 === metaData.chunkIndex && totalChunk > metaData.chunkIndex) {\n          var index = this.pausedData.indexOf(metaData);\n\n          if (index >= 0) {\n            this.pausedData.splice(index, 1);\n          }\n\n          if (isNullOrUndefined(this.template) && (isNullOrUndefined(custom) || !custom) && liElement) {\n            if (liElement) {\n              detach(liElement.querySelector('.' + PAUSE_UPLOAD));\n            }\n\n            this.removeChunkProgressBar(metaData);\n          }\n\n          this.raiseSuccessEvent(e, metaData.file);\n          return;\n        }\n\n        this.sendNextRequest(metaData);\n      }\n    } else {\n      this.chunkUploadFailed(e, metaData);\n    }\n  };\n\n  Uploader.prototype.sendNextRequest = function (metaData) {\n    metaData.start = metaData.end;\n    metaData.end += this.asyncSettings.chunkSize;\n    metaData.end = Math.min(metaData.end, metaData.file.size);\n    metaData.chunkIndex += 1;\n    this.sendRequest(metaData.file, metaData);\n  };\n\n  Uploader.prototype.removeChunkFile = function (e, metaData, custom) {\n    if (isNullOrUndefined(this.template) && isNullOrUndefined(custom) && !custom) {\n      var liElement = this.getLiElement(metaData.file);\n      var deleteIcon = liElement.querySelector('.' + ABORT_ICON);\n      var spinnerTarget = deleteIcon;\n      this.updateStatus(metaData.file, this.localizedTexts('fileUploadCancel'), '5');\n      this.updateProgressBarClasses(liElement, UPLOAD_FAILED);\n      this.removeProgressbar(liElement, 'failure');\n      deleteIcon.classList.remove(ABORT_ICON);\n      deleteIcon.classList.add(REMOVE_ICON);\n      deleteIcon.setAttribute('title', this.localizedTexts('remove'));\n      var pauseIcon = liElement.querySelector('.' + PAUSE_UPLOAD);\n      pauseIcon.classList.add(RETRY_ICON);\n      pauseIcon.classList.remove(PAUSE_UPLOAD);\n      pauseIcon.setAttribute('title', this.localizedTexts('retry'));\n\n      if (!isNullOrUndefined(liElement) && !isNullOrUndefined(deleteIcon)) {\n        hideSpinner(spinnerTarget);\n        detach(liElement.querySelector('.e-spinner-pane'));\n      }\n    }\n  };\n\n  Uploader.prototype.pauseUpload = function (metaData, e, custom) {\n    metaData.file.statusCode = '4';\n    metaData.file.status = this.localizedTexts('pause');\n    this.updateMetaData(metaData);\n    var eventArgs = {\n      event: e ? e : null,\n      file: metaData.file,\n      chunkIndex: metaData.chunkIndex,\n      chunkCount: Math.round(metaData.file.size / this.asyncSettings.chunkSize),\n      chunkSize: this.asyncSettings.chunkSize\n    };\n    this.abortUpload(metaData, custom, eventArgs);\n  };\n\n  Uploader.prototype.abortUpload = function (metaData, custom, eventArgs) {\n    metaData.request.emitError = false;\n    metaData.request.httpRequest.abort();\n    var liElement = this.getLiElement(metaData.file);\n\n    if (isNullOrUndefined(this.template) && (isNullOrUndefined(custom) || !custom)) {\n      var targetElement = liElement.querySelector('.' + PAUSE_UPLOAD);\n      targetElement.classList.remove(PAUSE_UPLOAD);\n      targetElement.classList.add(RESUME_UPLOAD);\n      targetElement.setAttribute('title', this.localizedTexts('resume'));\n      targetElement.nextElementSibling.classList.add(REMOVE_ICON);\n      targetElement.nextElementSibling.classList.remove(ABORT_ICON);\n      targetElement.nextElementSibling.setAttribute('title', this.localizedTexts('remove'));\n    }\n\n    for (var i = 0; i < this.pausedData.length; i++) {\n      if (this.pausedData[i].file.name === metaData.file.name) {\n        this.pausedData.splice(i, 1);\n      }\n    }\n\n    this.pausedData.push(metaData);\n    this.trigger('pausing', eventArgs);\n  };\n\n  Uploader.prototype.resumeUpload = function (metaData, e, custom) {\n    var liElement = this.getLiElement(metaData.file);\n    var targetElement;\n\n    if (!isNullOrUndefined(liElement)) {\n      targetElement = liElement.querySelector('.' + RESUME_UPLOAD);\n    }\n\n    if (!isNullOrUndefined(targetElement) && (isNullOrUndefined(custom) || !custom)) {\n      targetElement.classList.remove(RESUME_UPLOAD);\n      targetElement.classList.add(PAUSE_UPLOAD);\n      targetElement.setAttribute('title', this.localizedTexts('pause'));\n      targetElement.nextElementSibling.classList.remove(REMOVE_ICON);\n      targetElement.nextElementSibling.classList.add(ABORT_ICON);\n      targetElement.nextElementSibling.setAttribute('title', this.localizedTexts('abort'));\n    }\n\n    metaData.file.status = this.localizedTexts('inProgress');\n    metaData.file.statusCode = '3';\n    this.updateMetaData(metaData);\n    var eventArgs = {\n      event: e ? e : null,\n      file: metaData.file,\n      chunkIndex: metaData.chunkIndex,\n      chunkCount: Math.round(metaData.file.size / this.asyncSettings.chunkSize),\n      chunkSize: this.asyncSettings.chunkSize\n    };\n    this.trigger('resuming', eventArgs);\n\n    for (var i = 0; i < this.pausedData.length; i++) {\n      if (this.pausedData[i].end === this.pausedData[i].file.size) {\n        this.chunkUploadComplete(e, metaData, custom);\n      } else {\n        if (this.pausedData[i].file.name === metaData.file.name) {\n          this.pausedData[i].start = this.pausedData[i].end;\n          this.pausedData[i].end = this.pausedData[i].end + this.asyncSettings.chunkSize;\n          this.pausedData[i].end = Math.min(this.pausedData[i].end, this.pausedData[i].file.size);\n          this.pausedData[i].chunkIndex = this.pausedData[i].chunkIndex + 1;\n          this.sendRequest(this.pausedData[i].file, this.pausedData[i], custom);\n        }\n      }\n    }\n  };\n\n  Uploader.prototype.updateMetaData = function (metaData) {\n    if (this.uploadMetaData.indexOf(metaData) === -1) {\n      this.uploadMetaData.push(metaData);\n    } else {\n      this.uploadMetaData.splice(this.uploadMetaData.indexOf(metaData), 1);\n      this.uploadMetaData.push(metaData);\n    }\n  };\n\n  Uploader.prototype.removeChunkProgressBar = function (metaData) {\n    var liElement = this.getLiElement(metaData.file);\n\n    if (!isNullOrUndefined(liElement)) {\n      this.updateProgressBarClasses(liElement, UPLOAD_SUCCESS);\n      this.removeProgressbar(liElement, 'success');\n      var cancelButton = liElement.querySelector('.' + ABORT_ICON);\n\n      if (!isNullOrUndefined(cancelButton)) {\n        cancelButton.classList.add(DELETE_ICON);\n        cancelButton.setAttribute('title', this.localizedTexts('delete'));\n        cancelButton.classList.remove(ABORT_ICON, UPLOAD_INPROGRESS);\n      }\n    }\n  };\n\n  Uploader.prototype.chunkUploadFailed = function (e, metaData, custom) {\n    var _this = this;\n\n    var chunkCount = Math.max(Math.ceil(metaData.file.size / this.asyncSettings.chunkSize), 1);\n    var liElement;\n\n    if (isNullOrUndefined(this.template) && (isNullOrUndefined(custom) || !custom)) {\n      liElement = this.getLiElement(metaData.file);\n    }\n\n    var requestResponse = e && e.currentTarget ? this.getResponse(e) : null;\n    var eventArgs = {\n      event: e,\n      file: metaData.file,\n      chunkIndex: metaData.chunkIndex,\n      totalChunk: chunkCount,\n      chunkSize: this.asyncSettings.chunkSize,\n      cancel: false,\n      response: requestResponse\n    };\n    this.trigger('chunkFailure', eventArgs, function (eventArgs) {\n      // To prevent triggering of failure event\n      // tslint:disable-next-line\n      if (!eventArgs.cancel) {\n        if (metaData.retryCount < _this.asyncSettings.retryCount) {\n          setTimeout(function () {\n            _this.retryRequest(liElement, metaData, custom);\n          }, _this.asyncSettings.retryAfterDelay);\n        } else {\n          if (!isNullOrUndefined(liElement)) {\n            var pauseButton = liElement.querySelector('.' + PAUSE_UPLOAD) ? liElement.querySelector('.' + PAUSE_UPLOAD) : liElement.querySelector('.' + RESUME_UPLOAD);\n\n            if (!isNullOrUndefined(pauseButton)) {\n              pauseButton.classList.add(RETRY_ICON);\n              pauseButton.classList.remove(PAUSE_UPLOAD, RESUME_UPLOAD);\n            }\n\n            _this.updateProgressBarClasses(liElement, UPLOAD_FAILED);\n\n            _this.removeProgressbar(liElement, 'failure');\n\n            liElement.querySelector('.e-icons').classList.remove(UPLOAD_INPROGRESS);\n            var iconElement = liElement.querySelector('.' + ABORT_ICON) ? liElement.querySelector('.' + ABORT_ICON) : liElement.querySelector('.' + REMOVE_ICON);\n            iconElement.classList.remove(ABORT_ICON);\n\n            if (!isNullOrUndefined(liElement.querySelector('.' + PAUSE_UPLOAD))) {\n              detach(liElement.querySelector('.' + PAUSE_UPLOAD));\n            }\n\n            if (metaData.start > 0) {\n              iconElement.classList.add(DELETE_ICON);\n              iconElement.setAttribute('title', _this.localizedTexts('delete'));\n            } else {\n              iconElement.classList.add(REMOVE_ICON);\n              iconElement.setAttribute('title', _this.localizedTexts('remove'));\n            }\n          }\n\n          metaData.retryCount = 0;\n          var file_1 = metaData.file;\n\n          var failureMessage = _this.localizedTexts('uploadFailedMessage');\n\n          var args = {\n            e: e,\n            response: requestResponse,\n            operation: 'upload',\n            file: _this.updateStatus(file_1, failureMessage, '0', false),\n            statusText: failureMessage\n          };\n\n          _this.trigger('failure', args, function (args) {\n            // tslint:disable-next-line\n            _this.updateStatus(file_1, args.statusText, '0');\n\n            _this.uploadSequential();\n\n            _this.checkActionComplete(true);\n          });\n        }\n      }\n    });\n  };\n\n  Uploader.prototype.retryRequest = function (liElement, metaData, custom) {\n    if (isNullOrUndefined(this.template) && (isNullOrUndefined(custom) || !custom) && liElement) {\n      this.updateProgressBarClasses(liElement, UPLOAD_FAILED);\n    }\n\n    metaData.retryCount += 1;\n    this.sendRequest(metaData.file, metaData);\n  };\n\n  Uploader.prototype.checkPausePlayAction = function (e) {\n    var targetElement = e.target;\n    var selectedElement = e.target.parentElement;\n    var index = this.fileList.indexOf(selectedElement);\n    var fileData = this.filesData[index];\n    var metaData = this.getCurrentMetaData(fileData);\n\n    if (targetElement.classList.contains(PAUSE_UPLOAD)) {\n      /* istanbul ignore next */\n      this.pauseUpload(metaData, e);\n    } else if (targetElement.classList.contains(RESUME_UPLOAD)) {\n      /* istanbul ignore next */\n      this.resumeUpload(metaData, e);\n    } else if (targetElement.classList.contains(RETRY_ICON)) {\n      if (metaData.file.status === this.localizedTexts('fileUploadCancel')) {\n        this.retryUpload(metaData, false);\n      } else {\n        this.retryUpload(metaData, true);\n      }\n    }\n  };\n\n  Uploader.prototype.retryUpload = function (metaData, fromcanceledStage) {\n    if (fromcanceledStage) {\n      metaData.end = metaData.end + this.asyncSettings.chunkSize;\n      metaData.start = metaData.start + this.asyncSettings.chunkSize;\n      this.sendRequest(metaData.file, metaData);\n    } else {\n      metaData.file.statusCode = '1';\n      metaData.file.status = this.localizedTexts('readyToUploadMessage');\n      this.chunkUpload(metaData.file);\n    }\n    /* istanbul ignore next */\n\n\n    this.getLiElement(metaData.file).classList.add(RESTRICT_RETRY);\n  };\n\n  Uploader.prototype.chunkUploadInProgress = function (e, metaData, custom) {\n    var _this = this;\n\n    if (metaData.file.statusCode === '4') {\n      return;\n    }\n\n    if (metaData.file.statusCode !== '4' && metaData.file.statusCode !== '5') {\n      metaData.file.statusCode = '3';\n      metaData.file.status = this.localizedTexts('inProgress');\n    }\n\n    this.updateMetaData(metaData);\n    var liElement = this.getLiElement(metaData.file);\n\n    if (isNullOrUndefined(liElement)) {\n      return;\n    }\n\n    var target;\n    var retryElement = liElement.querySelector('.' + RETRY_ICON);\n\n    if (!isNullOrUndefined(retryElement)) {\n      retryElement.classList.add(PAUSE_UPLOAD);\n      retryElement.setAttribute('title', this.localizedTexts('pause'));\n      retryElement.classList.remove(RETRY_ICON);\n    }\n\n    if (!isNullOrUndefined(liElement)) {\n      if (!(liElement.querySelectorAll('.' + PROGRESS_WRAPPER).length > 0)) {\n        var statusElement = liElement.querySelector('.' + STATUS);\n\n        if (isNullOrUndefined(this.template)) {\n          statusElement.classList.add(UPLOAD_INPROGRESS);\n          statusElement.classList.remove(UPLOAD_FAILED);\n          this.createProgressBar(liElement);\n          this.updateProgressBarClasses(liElement, UPLOAD_INPROGRESS);\n        }\n\n        var clearIcon = liElement.querySelector('.' + REMOVE_ICON) ? liElement.querySelector('.' + REMOVE_ICON) : liElement.querySelector('.' + DELETE_ICON);\n\n        if (!isNullOrUndefined(clearIcon)) {\n          clearIcon.classList.add(ABORT_ICON);\n          clearIcon.setAttribute('title', this.localizedTexts('abort'));\n          clearIcon.classList.remove(REMOVE_ICON);\n        }\n      }\n\n      if (!isNaN(Math.round(e.loaded / e.total * 100)) && isNullOrUndefined(this.template) && metaData.file.statusCode !== '4') {\n        var loadedSize = metaData.chunkIndex * this.asyncSettings.chunkSize;\n        var value = Math.min((loadedSize + e.loaded) / metaData.file.size * 100, 100);\n        this.changeProgressValue(liElement, Math.round(value).toString() + '%');\n      }\n\n      if (metaData.chunkIndex === 0) {\n        this.checkActionButtonStatus();\n      }\n    }\n\n    if (isNullOrUndefined(liElement.querySelector('.' + PAUSE_UPLOAD)) && isNullOrUndefined(this.template)) {\n      this.pauseButton = this.createElement('span', {\n        className: 'e-icons e-file-pause-btn',\n        attrs: {\n          'tabindex': this.btnTabIndex\n        }\n      });\n\n      if (this.browserName === 'msie') {\n        this.pauseButton.classList.add('e-msie');\n      }\n\n      var abortIcon = liElement.querySelector('.' + ABORT_ICON);\n      abortIcon.parentElement.insertBefore(this.pauseButton, abortIcon);\n      this.pauseButton.setAttribute('title', this.localizedTexts('pause'));\n      this.pauseButton.addEventListener('click', function (e) {\n        _this.checkPausePlayAction(e);\n      }, false);\n    }\n  };\n  /**\n   * It is used to convert bytes value into kilobytes or megabytes depending on the size based\n   * on [binary prefix](https://en.wikipedia.org/wiki/Binary_prefix).\n   * @param { number } bytes - specifies the file size in bytes.\n   * @returns string\n   */\n\n\n  Uploader.prototype.bytesToSize = function (bytes) {\n    var i = -1;\n    var size;\n\n    if (!bytes) {\n      return '0.0 KB';\n    }\n\n    do {\n      bytes = bytes / 1024;\n      i++;\n    } while (bytes > 99);\n\n    if (i >= 2) {\n      bytes = bytes * 1024;\n      i = 1;\n    }\n\n    return Math.max(bytes, 0).toFixed(1) + ' ' + ['KB', 'MB'][i];\n  };\n  /**\n   * Allows you to sort the file data alphabetically based on its file name clearly.\n   * @param { FileList } filesData - specifies the files data for upload.\n   * @returns File[]\n   */\n\n  /* istanbul ignore next */\n\n\n  Uploader.prototype.sortFileList = function (filesData) {\n    filesData = filesData ? filesData : this.sortFilesList;\n    var files = filesData;\n    var fileNames = [];\n\n    for (var i = 0; i < files.length; i++) {\n      fileNames.push(files[i].name);\n    }\n\n    var sortedFileNames = fileNames.sort();\n    var sortedFilesData = [];\n    var index = 0;\n\n    for (var _i = 0, sortedFileNames_1 = sortedFileNames; _i < sortedFileNames_1.length; _i++) {\n      var name_3 = sortedFileNames_1[_i];\n\n      for (var i = 0; i < files.length; i++) {\n        if (name_3 === files[i].name) {\n          sortedFilesData.push(files[i]);\n        }\n      }\n    }\n\n    return sortedFilesData;\n  };\n  /**\n   * Removes the component from the DOM and detaches all its related event handlers. Also it removes the attributes and classes.\n   * @method destroy\n   * @return {void}.\n   */\n\n\n  Uploader.prototype.destroy = function () {\n    this.element.value = null;\n    this.clearAll();\n    this.unWireEvents();\n    this.unBindDropEvents();\n\n    if (this.multiple) {\n      this.element.removeAttribute('multiple');\n    }\n\n    if (!this.enabled) {\n      this.element.removeAttribute('disabled');\n    }\n\n    this.element.removeAttribute('accept');\n    this.setInitialAttributes();\n    var attributes = ['aria-label', 'directory', 'webkitdirectory', 'tabindex'];\n\n    for (var _i = 0, attributes_2 = attributes; _i < attributes_2.length; _i++) {\n      var key = attributes_2[_i];\n      this.element.removeAttribute(key);\n    }\n\n    if (!isNullOrUndefined(this.uploadWrapper)) {\n      this.uploadWrapper.parentElement.appendChild(this.element);\n      detach(this.uploadWrapper);\n    }\n\n    this.uploadWrapper = null;\n\n    _super.prototype.destroy.call(this);\n  };\n  /**\n   * Allows you to call the upload process manually by calling save URL action.\n   * To process the selected files (added in upload queue), pass an empty argument otherwise\n   * upload the specific file based on its argument.\n   * @param { FileInfo | FileInfo[] } files - specifies the files data for upload.\n   * @returns void\n   */\n\n\n  Uploader.prototype.upload = function (files, custom) {\n    var _this = this;\n\n    files = files ? files : this.filesData;\n    var uploadFiles = this.getFilesInArray(files);\n    var eventArgs = {\n      customFormData: [],\n      currentRequest: null\n    };\n    this.trigger('beforeUpload', eventArgs, function (eventArgs) {\n      if (isBlazor()) {\n        _this.currentRequestHeader = eventArgs.currentRequest ? eventArgs.currentRequest : _this.currentRequestHeader;\n        _this.customFormDatas = eventArgs.customFormData && eventArgs.customFormData.length > 0 ? eventArgs.customFormData : _this.customFormDatas;\n      }\n\n      _this.uploadFiles(uploadFiles, custom);\n    });\n  };\n\n  Uploader.prototype.getFilesInArray = function (files) {\n    var uploadFiles = [];\n\n    if (files instanceof Array) {\n      uploadFiles = files;\n    } else {\n      uploadFiles.push(files);\n    }\n\n    return uploadFiles;\n  };\n\n  Uploader.prototype.uploadFiles = function (files, custom) {\n    var _this = this;\n\n    var selectedFiles = [];\n\n    if (this.asyncSettings.saveUrl === '' || isNullOrUndefined(this.asyncSettings.saveUrl)) {\n      return;\n    }\n\n    if (!custom || isNullOrUndefined(custom)) {\n      if (!this.multiple) {\n        var file = [];\n        file.push(files[0]);\n        selectedFiles = this.filterfileList(file);\n      } else {\n        selectedFiles = this.filterfileList(files);\n      }\n    } else {\n      selectedFiles = files;\n    }\n\n    var _loop_5 = function (i) {\n      if (isBlazor() && !this_3.checkChunkUpload()) {\n        /* istanbul ignore next */\n\n        /* tslint:disable */\n        this_3.getBase64(selectedFiles[i].rawFile).then(function (data) {\n          _this.base64String.push(data);\n\n          _this.uploadFilesRequest(selectedFiles, i, custom);\n        });\n        /* tslint:disable */\n      } else {\n        this_3.uploadFilesRequest(selectedFiles, i, custom);\n      }\n    };\n\n    var this_3 = this;\n\n    for (var i = 0; i < selectedFiles.length; i++) {\n      _loop_5(i);\n    }\n  };\n\n  Uploader.prototype.uploadFilesRequest = function (selectedFiles, i, custom) {\n    var _this = this;\n\n    var cloneFiles = [];\n    var chunkEnabled = this.checkChunkUpload();\n    var ajax = new Ajax(this.asyncSettings.saveUrl, 'POST', true, null);\n    ajax.emitError = false;\n    var getFileData;\n    /* istanbul ignore next */\n\n    if (isBlazor()) {\n      getFileData = selectedFiles.slice(0);\n      cloneFiles.push(getFileData[i].rawFile);\n    }\n\n    var eventArgs = {\n      fileData: isBlazor() ? getFileData[i] : selectedFiles[i],\n      customFormData: [],\n      cancel: false\n    };\n    var formData = new FormData();\n\n    ajax.beforeSend = function (e) {\n      eventArgs.currentRequest = ajax.httpRequest;\n      /* istanbul ignore next */\n\n      if (isBlazor()) {\n        eventArgs.fileData.rawFile = !chunkEnabled ? _this.base64String[i] : eventArgs.fileData.rawFile;\n\n        if (_this.currentRequestHeader) {\n          _this.updateCustomheader(ajax.httpRequest, _this.currentRequestHeader);\n        }\n\n        if (_this.customFormDatas) {\n          _this.updateFormData(formData, _this.customFormDatas);\n        }\n      }\n\n      _this.trigger('uploading', eventArgs, function (eventArgs) {\n        /* istanbul ignore next */\n        if (isBlazor() && !chunkEnabled) {\n          selectedFiles[i].rawFile = eventArgs.fileData.rawFile = cloneFiles[i];\n        }\n\n        if (eventArgs.cancel) {\n          _this.eventCancelByArgs(e, eventArgs, selectedFiles[i]);\n        }\n\n        _this.updateFormData(formData, eventArgs.customFormData);\n      });\n    };\n\n    if (selectedFiles[i].statusCode === '1') {\n      var name_4 = this.element.getAttribute('name');\n      formData.append(name_4, selectedFiles[i].rawFile, selectedFiles[i].name);\n\n      if (chunkEnabled && selectedFiles[i].size > this.asyncSettings.chunkSize) {\n        this.chunkUpload(selectedFiles[i], custom, i);\n      } else {\n        ajax.onLoad = function (e) {\n          if (eventArgs.cancel && isBlazor()) {\n            return {};\n          } else {\n            _this.uploadComplete(e, selectedFiles[i], custom);\n\n            return {};\n          }\n        };\n\n        ajax.onUploadProgress = function (e) {\n          if (eventArgs.cancel && isBlazor()) {\n            return {};\n          } else {\n            _this.uploadInProgress(e, selectedFiles[i], custom, ajax);\n\n            return {};\n          }\n        };\n        /* istanbul ignore next */\n\n\n        ajax.onError = function (e) {\n          _this.uploadFailed(e, selectedFiles[i]);\n\n          return {};\n        };\n\n        ajax.send(formData);\n      }\n    }\n  };\n\n  Uploader.prototype.spliceFiles = function (liIndex) {\n    var liElement = this.fileList[liIndex];\n    var allFiles = this.getFilesData();\n    var nameElements = +liElement.getAttribute('data-files-count');\n    var startIndex = 0;\n\n    for (var i = 0; i < liIndex; i++) {\n      startIndex += +this.fileList[i].getAttribute('data-files-count');\n    }\n\n    var endIndex = startIndex + nameElements - 1;\n\n    for (var j = endIndex; j >= startIndex; j--) {\n      allFiles.splice(j, 1);\n    }\n  };\n  /**\n   * Remove the uploaded file from server manually by calling the remove URL action.\n   * If you pass an empty argument to this method, the complete file list can be cleared,\n   * otherwise remove the specific file based on its argument (“file_data”).\n   * @param { FileInfo | FileInfo[] } fileData - specifies the files data to remove from file list/server.\n   * @param { boolean } customTemplate - Set true if the component rendering with customize template.\n   * @param { boolean } removeDirectly - Set true if files remove without removing event.\n   * @param { boolean } postRawFile - Set false, to post file name only to the remove action.\n   * @returns void\n   */\n\n\n  Uploader.prototype.remove = function (fileData, customTemplate, removeDirectly, postRawFile, args) {\n    var _this = this;\n\n    if (isNullOrUndefined(postRawFile)) {\n      postRawFile = true;\n    }\n\n    var eventArgs = {\n      event: args,\n      cancel: false,\n      filesData: [],\n      customFormData: [],\n      postRawFile: postRawFile,\n      currentRequest: null\n    };\n    var beforeEventArgs = {\n      cancel: false,\n      customFormData: [],\n      currentRequest: null\n    };\n    this.trigger('beforeRemove', beforeEventArgs, function (beforeEventArgs) {\n      if (!beforeEventArgs.cancel) {\n        if (isBlazor()) {\n          _this.currentRequestHeader = beforeEventArgs.currentRequest;\n          _this.customFormDatas = beforeEventArgs.customFormData;\n        }\n\n        var index = void 0;\n\n        if (_this.isFormUpload()) {\n          eventArgs.filesData = fileData;\n\n          _this.trigger('removing', eventArgs, function (eventArgs) {\n            if (!eventArgs.cancel) {\n              var removingFiles = _this.getFilesInArray(fileData);\n\n              var isLiRemoved = false;\n              var liIndex = void 0;\n\n              for (var _i = 0, removingFiles_1 = removingFiles; _i < removingFiles_1.length; _i++) {\n                var data = removingFiles_1[_i];\n\n                if (!isLiRemoved) {\n                  liIndex = _this.fileList.indexOf(data.list);\n                }\n\n                if (liIndex > -1) {\n                  var inputElement = !isNullOrUndefined(data.input) ? data.input : null;\n\n                  if (inputElement) {\n                    detach(inputElement);\n                  }\n\n                  _this.spliceFiles(liIndex);\n\n                  detach(_this.fileList[liIndex]);\n\n                  _this.fileList.splice(liIndex, 1);\n\n                  isLiRemoved = true;\n                  liIndex = -1;\n                }\n              }\n            }\n          });\n        } else if (_this.isForm && (isNullOrUndefined(_this.asyncSettings.removeUrl) || _this.asyncSettings.removeUrl === '')) {\n          eventArgs.filesData = _this.getFilesData();\n\n          _this.trigger('removing', eventArgs, function (eventArgs) {\n            if (!eventArgs.cancel) {\n              _this.clearAll();\n            }\n          });\n        } else {\n          var removeFiles = [];\n          fileData = !isNullOrUndefined(fileData) ? fileData : _this.filesData;\n\n          if (fileData instanceof Array) {\n            removeFiles = fileData;\n          } else {\n            removeFiles.push(fileData);\n          }\n\n          eventArgs.filesData = removeFiles;\n          var removeUrl = _this.asyncSettings.removeUrl;\n          var validUrl = removeUrl === '' || isNullOrUndefined(removeUrl) ? false : true;\n\n          var _loop_6 = function (files) {\n            index = _this.filesData.indexOf(files);\n\n            if ((files.statusCode === '2' || files.statusCode === '4') && validUrl) {\n              _this.removeUploadedFile(files, eventArgs, removeDirectly, customTemplate);\n            } else {\n              if (!removeDirectly) {\n                _this.trigger('removing', eventArgs, function (eventArgs) {\n                  if (!eventArgs.cancel) {\n                    _this.removeFilesData(files, customTemplate);\n                  }\n                });\n              } else {\n                _this.removeFilesData(files, customTemplate);\n              }\n            }\n\n            if (_this.sequentialUpload) {\n              /* istanbul ignore next */\n              if (index <= _this.actionCompleteCount) {\n                _this.checkActionComplete(false);\n              }\n            } else {\n              _this.checkActionComplete(false);\n            }\n          };\n\n          for (var _i = 0, removeFiles_1 = removeFiles; _i < removeFiles_1.length; _i++) {\n            var files = removeFiles_1[_i];\n\n            _loop_6(files);\n          }\n        }\n      }\n    });\n  };\n  /**\n   * Clear all the file entries from list that can be uploaded files or added in upload queue.\n   * @returns void\n   */\n\n\n  Uploader.prototype.clearAll = function () {\n    var _this = this;\n\n    if (isNullOrUndefined(this.listParent)) {\n      if (this.browserName !== 'msie') {\n        this.element.value = '';\n      }\n\n      this.filesData = [];\n      return;\n    }\n\n    var eventArgs = {\n      cancel: false,\n      filesData: this.filesData\n    };\n    this.trigger('clearing', eventArgs, function (eventArgs) {\n      if (!eventArgs.cancel) {\n        _this.clearData();\n\n        _this.actionCompleteCount = 0;\n        _this.count = -1;\n      }\n    });\n  };\n  /**\n   * Get the data of files which are shown in file list.\n   * @param { number } index - specifies the file list item(li) index.\n   * @returns FileInfo[]\n   */\n\n\n  Uploader.prototype.getFilesData = function (index) {\n    if (!isBlazor()) {\n      if (isNullOrUndefined(index)) {\n        return this.filesData;\n      } else {\n        return this.getSelectedFiles(index);\n      }\n    } else {\n      for (var i = 0; i < this.filesData.length; i++) {\n        this.filesData[i].rawFile = this.base64String[i];\n      }\n\n      return this.filesData;\n    }\n  };\n  /**\n   * Pauses the in-progress chunked upload based on the file data.\n   * @param { FileInfo | FileInfo[] } fileData - specifies the files data to pause from uploading.\n   * @param { boolean } custom - Set true if used custom UI.\n   * @returns void\n   */\n\n\n  Uploader.prototype.pause = function (fileData, custom) {\n    fileData = fileData ? fileData : this.filesData;\n    var fileDataFiles = this.getFilesInArray(fileData);\n    this.pauseUploading(fileDataFiles, custom);\n  };\n\n  Uploader.prototype.pauseUploading = function (fileData, custom) {\n    var files = this.getFiles(fileData);\n\n    for (var i = 0; i < files.length; i++) {\n      if (files[i].statusCode === '3') {\n        this.pauseUpload(this.getCurrentMetaData(files[i], null), null, custom);\n      }\n    }\n  };\n\n  Uploader.prototype.getFiles = function (fileData) {\n    var files = [];\n\n    if (!isNullOrUndefined(fileData) && !(fileData instanceof Array)) {\n      files.push(fileData);\n    } else {\n      files = fileData;\n    }\n\n    return files;\n  };\n  /**\n   * Resumes the chunked upload that is previously paused based on the file data.\n   * @param { FileInfo | FileInfo[] } fileData - specifies the files data to resume the paused file.\n   * @param { boolean } custom - Set true if used custom UI.\n   * @returns void\n   */\n\n\n  Uploader.prototype.resume = function (fileData, custom) {\n    fileData = fileData ? fileData : this.filesData;\n    var fileDataFiles = this.getFilesInArray(fileData);\n    this.resumeFiles(fileDataFiles, custom);\n  };\n\n  Uploader.prototype.resumeFiles = function (fileData, custom) {\n    var files = this.getFiles(fileData);\n\n    for (var i = 0; i < files.length; i++) {\n      if (files[i].statusCode === '4') {\n        this.resumeUpload(this.getCurrentMetaData(files[i], null), null, custom);\n      }\n    }\n  };\n  /**\n   * Retries the canceled or failed file upload based on the file data.\n   * @param { FileInfo | FileInfo[] } fileData - specifies the files data to retry the canceled or failed file.\n   * @param { boolean } fromcanceledStage - Set true to retry from canceled stage and set false to retry from initial stage.\n   * @returns void\n   */\n\n\n  Uploader.prototype.retry = function (fileData, fromcanceledStage, custom) {\n    fileData = fileData ? fileData : this.filesData;\n    var fileDataFiles = this.getFilesInArray(fileData);\n    this.retryFailedFiles(fileDataFiles, fromcanceledStage, custom);\n  };\n\n  Uploader.prototype.retryFailedFiles = function (fileData, fromcanceledStage, custom) {\n    var files = this.getFiles(fileData);\n\n    for (var i = 0; i < files.length; i++) {\n      if (files[i].statusCode === '5' || files[i].statusCode === '0') {\n        if (this.asyncSettings.chunkSize > 0) {\n          this.retryUpload(this.getCurrentMetaData(files[i], null), fromcanceledStage);\n        } else {\n          var liElement = void 0;\n\n          if (!custom) {\n            liElement = this.fileList[this.filesData.indexOf(files[i])];\n          }\n\n          this.reloadcanceledFile(null, files[i], liElement, custom);\n        }\n      }\n    }\n  };\n  /**\n   * Stops the in-progress chunked upload based on the file data.\n   * When the file upload is canceled, the partially uploaded file is removed from server.\n   * @param { FileInfo | FileInfo[] } fileData - specifies the files data to cancel the progressing file.\n   * @returns void\n   */\n\n\n  Uploader.prototype.cancel = function (fileData) {\n    fileData = fileData ? fileData : this.filesData;\n    var cancelingFiles = this.getFilesInArray(fileData);\n    this.cancelUpload(cancelingFiles);\n  };\n\n  Uploader.prototype.cancelUpload = function (fileData) {\n    var files = this.getFiles(fileData);\n\n    if (this.asyncSettings.chunkSize > 0) {\n      for (var i = 0; i < files.length; i++) {\n        if (files[i].statusCode === '3') {\n          var metaData = this.getCurrentMetaData(files[i], null);\n          metaData.file.statusCode = '5';\n          metaData.file.status = this.localizedTexts('fileUploadCancel');\n          this.updateMetaData(metaData);\n          this.showHideUploadSpinner(files[i]);\n        }\n      }\n    } else {\n      for (var i = 0; i < files.length; i++) {\n        if (files[i].statusCode === '3') {\n          files[i].statusCode = '5';\n          files[i].status = this.localizedTexts('fileUploadCancel');\n          this.showHideUploadSpinner(files[i]);\n        }\n      }\n    }\n  };\n\n  Uploader.prototype.showHideUploadSpinner = function (files) {\n    var liElement = this.getLiElement(files);\n\n    if (!isNullOrUndefined(liElement) && isNullOrUndefined(this.template)) {\n      var spinnerTarget = liElement.querySelector('.' + ABORT_ICON);\n      createSpinner({\n        target: spinnerTarget,\n        width: '20px'\n      });\n      showSpinner(spinnerTarget);\n    }\n  };\n\n  __decorate([Complex({\n    saveUrl: '',\n    removeUrl: ''\n  }, AsyncSettings)], Uploader.prototype, \"asyncSettings\", void 0);\n\n  __decorate([Property(false)], Uploader.prototype, \"sequentialUpload\", void 0);\n\n  __decorate([Property({})], Uploader.prototype, \"htmlAttributes\", void 0);\n\n  __decorate([Property('')], Uploader.prototype, \"cssClass\", void 0);\n\n  __decorate([Property(true)], Uploader.prototype, \"enabled\", void 0);\n\n  __decorate([Property(null)], Uploader.prototype, \"template\", void 0);\n\n  __decorate([Property(true)], Uploader.prototype, \"multiple\", void 0);\n\n  __decorate([Property(true)], Uploader.prototype, \"autoUpload\", void 0);\n\n  __decorate([Complex({}, ButtonsProps)], Uploader.prototype, \"buttons\", void 0);\n\n  __decorate([Property('')], Uploader.prototype, \"allowedExtensions\", void 0);\n\n  __decorate([Property(0)], Uploader.prototype, \"minFileSize\", void 0);\n\n  __decorate([Property(30000000)], Uploader.prototype, \"maxFileSize\", void 0);\n\n  __decorate([Property(null)], Uploader.prototype, \"dropArea\", void 0);\n\n  __decorate([Collection([{}], FilesProp)], Uploader.prototype, \"files\", void 0);\n\n  __decorate([Property(true)], Uploader.prototype, \"showFileList\", void 0);\n\n  __decorate([Property(false)], Uploader.prototype, \"directoryUpload\", void 0);\n\n  __decorate([Event()], Uploader.prototype, \"created\", void 0);\n\n  __decorate([Event()], Uploader.prototype, \"actionComplete\", void 0);\n\n  __decorate([Event()], Uploader.prototype, \"rendering\", void 0);\n\n  __decorate([Event()], Uploader.prototype, \"beforeUpload\", void 0);\n\n  __decorate([Event()], Uploader.prototype, \"fileListRendering\", void 0);\n\n  __decorate([Event()], Uploader.prototype, \"selected\", void 0);\n\n  __decorate([Event()], Uploader.prototype, \"uploading\", void 0);\n\n  __decorate([Event()], Uploader.prototype, \"success\", void 0);\n\n  __decorate([Event()], Uploader.prototype, \"failure\", void 0);\n\n  __decorate([Event()], Uploader.prototype, \"removing\", void 0);\n\n  __decorate([Event()], Uploader.prototype, \"beforeRemove\", void 0);\n\n  __decorate([Event()], Uploader.prototype, \"clearing\", void 0);\n\n  __decorate([Event()], Uploader.prototype, \"progress\", void 0);\n\n  __decorate([Event()], Uploader.prototype, \"change\", void 0);\n\n  __decorate([Event()], Uploader.prototype, \"chunkSuccess\", void 0);\n\n  __decorate([Event()], Uploader.prototype, \"chunkFailure\", void 0);\n\n  __decorate([Event()], Uploader.prototype, \"chunkUploading\", void 0);\n\n  __decorate([Event()], Uploader.prototype, \"canceling\", void 0);\n\n  __decorate([Event()], Uploader.prototype, \"pausing\", void 0);\n\n  __decorate([Event()], Uploader.prototype, \"resuming\", void 0);\n\n  Uploader = __decorate([NotifyPropertyChanges], Uploader);\n  return Uploader;\n}(Component);\n\nexport { Uploader };","map":{"version":3,"sources":["/Users/jay/node_modules/@syncfusion/ej2-inputs/src/uploader/uploader.js"],"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","__decorate","decorators","target","key","desc","c","arguments","length","r","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","Component","Property","Event","EventHandler","L10n","compile","isNullOrUndefined","NotifyPropertyChanges","detach","append","Animation","addClass","removeClass","KeyboardEvents","setValue","getValue","ChildProperty","Collection","Complex","Browser","Ajax","getUniqueID","closest","createSpinner","showSpinner","hideSpinner","updateBlazorTemplate","resetBlazorTemplate","isBlazor","ROOT","CONTROL_WRAPPER","INPUT_WRAPPER","DROP_AREA","DROP_WRAPPER","LIST_PARENT","FILE","STATUS","ACTION_BUTTONS","UPLOAD_BUTTONS","CLEAR_BUTTONS","FILE_NAME","FILE_TYPE","FILE_SIZE","REMOVE_ICON","DELETE_ICON","SPINNER_PANE","ABORT_ICON","RETRY_ICON","DRAG_HOVER","PROGRESS_WRAPPER","PROGRESSBAR","PROGRESSBAR_TEXT","UPLOAD_INPROGRESS","UPLOAD_SUCCESS","UPLOAD_FAILED","TEXT_CONTAINER","VALIDATION_FAILS","RTL","DISABLED","RTL_CONTAINER","ICON_FOCUSED","PROGRESS_INNER_WRAPPER","PAUSE_UPLOAD","RESUME_UPLOAD","RESTRICT_RETRY","wrapperAttr","FORM_UPLOAD","HIDDEN_INPUT","INVALID_FILE","INFORMATION","FilesProp","_super","apply","ButtonsProps","AsyncSettings","Uploader","options","element","_this","call","initialAttr","accept","multiple","disabled","uploadedFilesData","base64String","isForm","allTypes","pausedData","uploadMetaData","tabIndex","btnTabIndex","disableKeyboardNavigation","count","actionCompleteCount","flag","selectedFiles","uploaderName","fileList","filesData","uploaderOptions","onPropertyChanged","newProp","oldProp","_i","_a","keys","prop","setExtensions","allowedExtensions","clearAll","setControlStatus","setMultipleSelection","setRTL","reRenderFileList","buttons","browse","clear","upload","renderButtonTemplates","unBindDropEvents","setDropArea","updateHTMLAttrToElement","updateHTMLAttrToWrapper","checkHTMLAttributes","renderPreLoadFiles","updateDirectoryAttributes","l10n","setLocale","locale","setLocalizedTexts","preLocaleObj","setCSSClass","cssClass","template","browseButton","innerText","localizedTexts","setAttribute","uploadWrapper","querySelector","innerHTML","updateFileList","getKeyValue","val","keyValue","status","classList","contains","autoUpload","uploadButton","clearButton","listParent","createFileList","actionButtons","removeActionButtons","renderActionButtons","checkActionButtonStatus","preRender","localeText","Browse","Clear","Upload","dropFilesHint","invalidMaxFileSize","invalidMinFileSize","invalidFileType","uploadFailedMessage","uploadSuccessMessage","removedSuccessMessage","removedFailedMessage","inProgress","readyToUploadMessage","abort","remove","cancel","delete","pauseUpload","pause","resume","retry","fileUploadCancel","invalidFileSelection","totalFiles","size","parentEle","document","documentElement","parentElement","tagName","formElement","ejInstance","inputElement","createElement","attrs","type","index","attributes","nodeName","nodeValue","hasAttribute","appendChild","isPureReactComponent","props","name","id","getAttribute","keyConfigs","enter","browserName","info","getPersistData","addOnPersist","getModuleName","directoryUpload","removeAttribute","render","renderBrowseButton","initializeUpload","wireEvents","renderComplete","className","textContent","blur","focus","wireActionButtonEvents","add","uploadButtonClick","clearButtonClick","unwireActionButtonEvents","uploadText","clearText","inputWrapper","insertBefore","dropAreaWrapper","fileDropArea","files","slice","clearData","files_1","data","fileData","split","rawFile","validationMessages","minSize","maxSize","statusCode","push","allowUpload","showFileList","length_1","querySelectorAll","dropTextArea","dropArea","dropZoneElement","enableDropText","parentNode","bindDropEvents","htmlAttributes","pro","indexOf","uploadStyle","newAttr","createAttribute","value","setAttributeNode","checkAutoUpload","sequentialUpload","sequenceUpload","isFileListCreated","oldCSSClass","browseButtonClick","onSelectFiles","removeFocus","keyboardModule","keyAction","keyActionHandler","bind","eventName","resetForm","unWireEvents","destroy","e","targetElement","action","metaData","getCurrentMetaData","file","abortUpload","resumeUpload","chunkUpload","removeFiles","preventDefault","stopPropagation","fileInfo","targetMetaData","activeElement","click","dropElement","dragHover","onDragLeave","onPasteFile","enabled","event","item","clipboardData","items","pasteFile","kind","match","renderSelectedFiles","getAsFile","getSelectedFiles","liElement","allFiles","getFilesData","nameElements","startIndex","j","args","selectedElement","formUpload","isFormUpload","getFilesInArray","spinnerTarget","width","uploadSequential","checkActionComplete","removeFilesData","customTemplate","splice","getLiElement","removeUploadedFile","eventArgs","removeDirectly","custom","ajax","asyncSettings","removeUrl","emitError","formData","FormData","beforeSend","currentRequest","httpRequest","currentRequestHeader","updateCustomheader","customFormDatas","updateFormData","trigger","removingEventCallback","onLoad","removeCompleted","onError","removeFailed","send","postRawFile","customFormData","customData","_loop_1","map","request","_loop_2","setRequestHeader","response","currentTarget","getResponse","operation","updateStatus","rootElement","statusElement","getFilesFromFolder","filesEntries","dataTransfer","validDirectoryUpload","checkDirectoryUpload","_loop_3","webkitGetAsEntry","isFile","files_2","fileObj","path","fullPath","this_1","isDirectory","traverseFileTree","directoryReader","createReader","readEntries","entries","pushFilesEntries","_loop_4","this_2","targetFiles","sortFilesList","sortFileList","getBase64","Promise","resolve","reject","fileReader","FileReader","readAsDataURL","onload","result","onerror","error","directory","paste","isModified","modifiedFilesData","progressInterval","isCanceled","updateInitialFileDetails","checkExtension","_internalRenderSelect","fileName","substring","lastIndexOf","getFileType","webkitRelativePath","fileDetails","validatedFileSize","fileSource","dataFiles","updateSortedFileList","concat","raiseActionComplete","allowFormUpload","saveUrl","singleUpload","previousListClone","added","removedList","cloneNode","removedList_1","oldList","childNodes","createParentUL","isBlank","str","test","dropFiles","extensions","extensions_1","extension","trim","toLocaleLowerCase","fileSize","minSizeError","maxSizeError","minFileSize","maxFileSize","errorMessage","isPreLoadFile","isPreload","createCustomfileList","fileData_1","listItem","uploadTemplateFn","templateComplier","fromElements","isStringTemplate","eventsArgs","formFileList","fileContainer","statusMessage","fileData_2","fileNameEle","getFileNameOnly","fileTypeEle","enableRtl","rtlContainer","truncateName","formValidateFileInfo","setListToFileInfo","infoEle","bytesToSize","getFileSize","createFormInput","iconElement","mergeFileInfo","addInvalidClass","typeValidationMessage","fileData_3","input","fileData_4","list","fileNames","fileData_5","join","statusForFormUpload","isValid","fileData_6","formCustomFileList","fileData_7","textContainer","textElement","fileExtension","getSlicedName","nameElement","text","dataset","tail","fileData_8","offsetWidth","scrollWidth","names","setInitialAttributes","filterfileList","filterFiles","li","updateLiStatus","createProgressBar","progressbarWrapper","progressBar","max","progressbarInnerWrapper","progressbarText","updateProgressbar","isNaN","Math","round","loaded","total","parseInt","changeProgressValue","toString","progressValue","uploadInProgress","customUI","cancelUploadingFile","updateProgressBarClasses","iconEle","name_1","removecanceledFile","renderFailureState","requestResponse","removeProgressbar","deleteIcon","pauseButton","retryElement","addEventListener","reloadcanceledFile","uploadComplete","readyState","raiseSuccessEvent","uploadFailed","statusText","headers","getAllResponseHeaders","withCredentials","spinnerEle","increment","getSelectedFileStatus","matchFiles","matchFilesIndex","selectFileIndex","selectedFileData","fileDataIndex","callType","progressAnimation","duration","animate","setTimeout","animateProgressBar","uploadTemplate","exception","undefined","getConstant","isDynamic","attributes_1","setProperties","isMutiple","isDisabled","fileIndex","start","end","min","chunkSize","blob","chunkIndex","retryCount","sendRequest","cloneFile","totalChunk","ceil","url","async","contentType","chunkUploadComplete","onUploadProgress","chunkUploadInProgress","currentChunkIndex","uploadingEventCallback","chunkUploadFailed","eventCancelByArgs","removeIcon","checkChunkUpload","updateMetaData","eventArgs_1","sendNextRequest","name_2","removeChunkFile","removeChunkProgressBar","pauseIcon","chunkCount","nextElementSibling","cancelButton","retryRequest","retryAfterDelay","file_1","failureMessage","checkPausePlayAction","retryUpload","fromcanceledStage","clearIcon","loadedSize","abortIcon","bytes","toFixed","sortedFileNames","sort","sortedFilesData","sortedFileNames_1","name_3","attributes_2","uploadFiles","_loop_5","this_3","then","uploadFilesRequest","cloneFiles","chunkEnabled","getFileData","name_4","spliceFiles","liIndex","endIndex","beforeEventArgs","removingFiles","isLiRemoved","removingFiles_1","validUrl","_loop_6","removeFiles_1","fileDataFiles","pauseUploading","getFiles","resumeFiles","retryFailedFiles","cancelingFiles","cancelUpload","showHideUploadSpinner"],"mappings":"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","sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Component, Property, Event, EventHandler, L10n, compile, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { NotifyPropertyChanges, detach, append, Animation } from '@syncfusion/ej2-base';\nimport { addClass, removeClass, KeyboardEvents, setValue, getValue, ChildProperty } from '@syncfusion/ej2-base';\nimport { Collection, Complex, Browser, Ajax, getUniqueID, closest } from '@syncfusion/ej2-base';\nimport { createSpinner, showSpinner, hideSpinner } from '@syncfusion/ej2-popups';\nimport { updateBlazorTemplate, resetBlazorTemplate, isBlazor } from '@syncfusion/ej2-base';\nvar ROOT = 'e-uploader';\nvar CONTROL_WRAPPER = 'e-upload e-control-wrapper';\nvar INPUT_WRAPPER = 'e-file-select';\nvar DROP_AREA = 'e-file-drop';\nvar DROP_WRAPPER = 'e-file-select-wrap';\nvar LIST_PARENT = 'e-upload-files';\nvar FILE = 'e-upload-file-list';\nvar STATUS = 'e-file-status';\nvar ACTION_BUTTONS = 'e-upload-actions';\nvar UPLOAD_BUTTONS = 'e-file-upload-btn e-css e-btn e-flat e-primary';\nvar CLEAR_BUTTONS = 'e-file-clear-btn e-css e-btn e-flat';\nvar FILE_NAME = 'e-file-name';\nvar FILE_TYPE = 'e-file-type';\nvar FILE_SIZE = 'e-file-size';\nvar REMOVE_ICON = 'e-file-remove-btn';\nvar DELETE_ICON = 'e-file-delete-btn';\nvar SPINNER_PANE = 'e-spinner-pane';\nvar ABORT_ICON = 'e-file-abort-btn';\nvar RETRY_ICON = 'e-file-reload-btn';\nvar DRAG_HOVER = 'e-upload-drag-hover';\nvar PROGRESS_WRAPPER = 'e-upload-progress-wrap';\nvar PROGRESSBAR = 'e-upload-progress-bar';\nvar PROGRESSBAR_TEXT = 'e-progress-bar-text';\nvar UPLOAD_INPROGRESS = 'e-upload-progress';\nvar UPLOAD_SUCCESS = 'e-upload-success';\nvar UPLOAD_FAILED = 'e-upload-fails';\nvar TEXT_CONTAINER = 'e-file-container';\nvar VALIDATION_FAILS = 'e-validation-fails';\nvar RTL = 'e-rtl';\nvar DISABLED = 'e-disabled';\nvar RTL_CONTAINER = 'e-rtl-container';\nvar ICON_FOCUSED = 'e-clear-icon-focus';\nvar PROGRESS_INNER_WRAPPER = 'e-progress-inner-wrap';\nvar PAUSE_UPLOAD = 'e-file-pause-btn';\nvar RESUME_UPLOAD = 'e-file-play-btn';\nvar RESTRICT_RETRY = 'e-restrict-retry';\nvar wrapperAttr = ['title', 'style', 'class'];\nvar FORM_UPLOAD = 'e-form-upload';\nvar HIDDEN_INPUT = 'e-hidden-file-input';\nvar INVALID_FILE = 'e-file-invalid';\nvar INFORMATION = 'e-file-information';\nvar FilesProp = /** @class */ (function (_super) {\n    __extends(FilesProp, _super);\n    function FilesProp() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], FilesProp.prototype, \"name\", void 0);\n    __decorate([\n        Property(null)\n    ], FilesProp.prototype, \"size\", void 0);\n    __decorate([\n        Property('')\n    ], FilesProp.prototype, \"type\", void 0);\n    return FilesProp;\n}(ChildProperty));\nexport { FilesProp };\nvar ButtonsProps = /** @class */ (function (_super) {\n    __extends(ButtonsProps, _super);\n    function ButtonsProps() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Browse...')\n    ], ButtonsProps.prototype, \"browse\", void 0);\n    __decorate([\n        Property('Upload')\n    ], ButtonsProps.prototype, \"upload\", void 0);\n    __decorate([\n        Property('Clear')\n    ], ButtonsProps.prototype, \"clear\", void 0);\n    return ButtonsProps;\n}(ChildProperty));\nexport { ButtonsProps };\nvar AsyncSettings = /** @class */ (function (_super) {\n    __extends(AsyncSettings, _super);\n    function AsyncSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], AsyncSettings.prototype, \"saveUrl\", void 0);\n    __decorate([\n        Property('')\n    ], AsyncSettings.prototype, \"removeUrl\", void 0);\n    __decorate([\n        Property(0)\n    ], AsyncSettings.prototype, \"chunkSize\", void 0);\n    __decorate([\n        Property(3)\n    ], AsyncSettings.prototype, \"retryCount\", void 0);\n    __decorate([\n        Property(500)\n    ], AsyncSettings.prototype, \"retryAfterDelay\", void 0);\n    return AsyncSettings;\n}(ChildProperty));\nexport { AsyncSettings };\n/**\n * The uploader component allows to upload images, documents, and other files from local to server.\n * ```html\n * <input type='file' name='images[]' id='upload'/>\n * ```\n * ```typescript\n * <script>\n *   var uploadObj = new Uploader();\n *   uploadObj.appendTo('#upload');\n * </script>\n * ```\n */\nvar Uploader = /** @class */ (function (_super) {\n    __extends(Uploader, _super);\n    /**\n     * Triggers when change the Uploader value.\n     */\n    function Uploader(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        _this.initialAttr = { accept: null, multiple: false, disabled: false };\n        _this.uploadedFilesData = [];\n        _this.base64String = [];\n        _this.isForm = false;\n        _this.allTypes = false;\n        _this.pausedData = [];\n        _this.uploadMetaData = [];\n        _this.tabIndex = '0';\n        _this.btnTabIndex = '0';\n        _this.disableKeyboardNavigation = false;\n        _this.count = -1;\n        _this.actionCompleteCount = 0;\n        _this.flag = true;\n        _this.selectedFiles = [];\n        _this.uploaderName = 'UploadFiles';\n        /**\n         * Get the file item(li) which are shown in file list.\n         * @private\n         */\n        _this.fileList = [];\n        /**\n         * Get the data of files which are shown in file list.\n         * @private\n         */\n        _this.filesData = [];\n        _this.uploaderOptions = options;\n        return _this;\n    }\n    /**\n     * Calls internally if any of the property value is changed.\n     * @private\n     */\n    Uploader.prototype.onPropertyChanged = function (newProp, oldProp) {\n        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            switch (prop) {\n                case 'allowedExtensions':\n                    this.setExtensions(this.allowedExtensions);\n                    this.clearAll();\n                    break;\n                case 'enabled':\n                    this.setControlStatus();\n                    break;\n                case 'multiple':\n                    this.setMultipleSelection();\n                    break;\n                case 'enableRtl':\n                    this.setRTL();\n                    this.reRenderFileList();\n                    break;\n                case 'buttons':\n                    this.buttons.browse = isNullOrUndefined(this.buttons.browse) ? '' : this.buttons.browse;\n                    this.buttons.clear = isNullOrUndefined(this.buttons.clear) ? '' : this.buttons.clear;\n                    this.buttons.upload = isNullOrUndefined(this.buttons.upload) ? '' : this.buttons.upload;\n                    this.renderButtonTemplates();\n                    break;\n                case 'dropArea':\n                    this.unBindDropEvents();\n                    this.setDropArea();\n                    break;\n                case 'htmlAttributes':\n                    this.updateHTMLAttrToElement();\n                    this.updateHTMLAttrToWrapper();\n                    this.checkHTMLAttributes(true);\n                    break;\n                case 'files':\n                    this.renderPreLoadFiles();\n                    break;\n                case 'directoryUpload':\n                    this.updateDirectoryAttributes();\n                    break;\n                case 'minFileSize':\n                case 'maxFileSize':\n                case 'template':\n                case 'autoUpload':\n                    this.clearAll();\n                    break;\n                case 'sequentialUpload':\n                    this.clearAll();\n                    break;\n                case 'locale':\n                    this.l10n.setLocale(this.locale);\n                    this.setLocalizedTexts();\n                    this.preLocaleObj = getValue('currentLocale', this.l10n);\n                    break;\n                case 'cssClass':\n                    this.setCSSClass(oldProp.cssClass);\n                    break;\n            }\n        }\n    };\n    Uploader.prototype.setLocalizedTexts = function () {\n        if (isNullOrUndefined(this.template)) {\n            if (typeof (this.buttons.browse) === 'string') {\n                this.browseButton.innerText = (this.buttons.browse === 'Browse...') ?\n                    this.localizedTexts('Browse') : this.buttons.browse;\n                this.browseButton.setAttribute('title', this.browseButton.innerText);\n                this.uploadWrapper.querySelector('.' + DROP_AREA).innerHTML = this.localizedTexts('dropFilesHint');\n            }\n            this.updateFileList();\n        }\n    };\n    Uploader.prototype.getKeyValue = function (val) {\n        var keyValue;\n        for (var _i = 0, _a = Object.keys(this.preLocaleObj); _i < _a.length; _i++) {\n            var key = _a[_i];\n            if (this.preLocaleObj[key] === val) {\n                keyValue = key;\n            }\n        }\n        return keyValue;\n    };\n    Uploader.prototype.updateFileList = function () {\n        var element;\n        /* istanbul ignore next */\n        if (this.fileList.length > 0 && !isNullOrUndefined(this.uploadWrapper.querySelector('.' + LIST_PARENT))) {\n            for (var i = 0; i < this.fileList.length; i++) {\n                element = this.fileList[i].querySelector('.e-file-status');\n                element.innerHTML = this.localizedTexts(this.getKeyValue(this.filesData[i].status));\n                this.filesData[i].status = this.localizedTexts(this.getKeyValue(this.filesData[i].status));\n                if (this.fileList[i].classList.contains(UPLOAD_SUCCESS)) {\n                    this.fileList[i].querySelector('.e-icons').setAttribute('title', this.localizedTexts('delete'));\n                }\n                if (this.fileList[i].querySelector('.e-file-play-btn')) {\n                    this.fileList[i].querySelector('.e-icons').setAttribute('title', this.localizedTexts('resume'));\n                }\n                if (this.fileList[i].querySelector('.e-file-remove-btn')) {\n                    this.fileList[i].querySelector('.e-icons').setAttribute('title', this.localizedTexts('remove'));\n                }\n                if (this.fileList[i].querySelector('.e-file-reload-btn')) {\n                    this.fileList[i].querySelector('.e-icons').setAttribute('title', this.localizedTexts('retry'));\n                }\n                if (!this.autoUpload) {\n                    this.uploadButton.innerText = (this.buttons.upload === 'Upload') ?\n                        this.localizedTexts('Upload') : this.buttons.upload;\n                    this.uploadButton.setAttribute('title', this.localizedTexts('Upload'));\n                    this.clearButton.innerText = (this.buttons.clear === 'Clear') ?\n                        this.localizedTexts('Clear') : this.buttons.clear;\n                    this.clearButton.setAttribute('title', this.localizedTexts('Clear'));\n                }\n            }\n        }\n    };\n    Uploader.prototype.reRenderFileList = function () {\n        if (this.listParent) {\n            detach(this.listParent);\n            this.listParent = null;\n            this.fileList = [];\n            this.createFileList(this.filesData);\n            if (this.actionButtons) {\n                this.removeActionButtons();\n                this.renderActionButtons();\n                this.checkActionButtonStatus();\n            }\n        }\n    };\n    Uploader.prototype.preRender = function () {\n        this.localeText = { Browse: 'Browse...', Clear: 'Clear', Upload: 'Upload',\n            dropFilesHint: 'Or drop files here', invalidMaxFileSize: 'File size is too large',\n            invalidMinFileSize: 'File size is too small', invalidFileType: 'File type is not allowed',\n            uploadFailedMessage: 'File failed to upload', uploadSuccessMessage: 'File uploaded successfully',\n            removedSuccessMessage: 'File removed successfully', removedFailedMessage: 'Unable to remove file', inProgress: 'Uploading',\n            readyToUploadMessage: 'Ready to upload', abort: 'Abort', remove: 'Remove', cancel: 'Cancel', delete: 'Delete file',\n            pauseUpload: 'File upload paused', pause: 'Pause', resume: 'Resume', retry: 'Retry',\n            fileUploadCancel: 'File upload canceled', invalidFileSelection: 'Invalid files selected', totalFiles: 'Total files',\n            size: 'Size'\n        };\n        this.l10n = new L10n('uploader', this.localeText, this.locale);\n        this.preLocaleObj = getValue('currentLocale', this.l10n);\n        this.updateHTMLAttrToElement();\n        this.checkHTMLAttributes(false);\n        var parentEle = closest(this.element, 'form');\n        if (!isNullOrUndefined(parentEle)) {\n            for (; parentEle && parentEle !== document.documentElement; parentEle = parentEle.parentElement) {\n                if (parentEle.tagName === 'FORM') {\n                    this.isForm = true;\n                    this.formElement = parentEle;\n                    parentEle.setAttribute('enctype', 'multipart/form-data');\n                    parentEle.setAttribute('encoding', 'multipart/form-data');\n                }\n            }\n        }\n        // tslint:disable-next-line\n        var ejInstance = getValue('ej2_instances', this.element);\n        /* istanbul ignore next */\n        if (this.element.tagName === 'EJS-UPLOADER') {\n            var inputElement = this.createElement('input', { attrs: { type: 'file' } });\n            var index = 0;\n            for (index; index < this.element.attributes.length; index++) {\n                inputElement.setAttribute(this.element.attributes[index].nodeName, this.element.attributes[index].nodeValue);\n                inputElement.innerHTML = this.element.innerHTML;\n            }\n            if (!inputElement.hasAttribute('name')) {\n                inputElement.setAttribute('name', 'UploadFiles');\n            }\n            this.element.appendChild(inputElement);\n            this.element = inputElement;\n            setValue('ej2_instances', ejInstance, this.element);\n        }\n        /* istanbul ignore next */\n        if (ejInstance[0].isPureReactComponent) {\n            if (!isNullOrUndefined(ejInstance[0].props.name)) {\n                this.element.setAttribute('name', ejInstance[0].props.name);\n            }\n            else if (!isNullOrUndefined(ejInstance[0].props.id) && isNullOrUndefined(ejInstance[0].props.name)) {\n                this.element.setAttribute('name', ejInstance[0].props.id);\n            }\n            else {\n                this.element.setAttribute('name', 'UploadFiles');\n            }\n        }\n        if (isNullOrUndefined(this.element.getAttribute('name'))) {\n            this.element.setAttribute('name', this.element.getAttribute('id'));\n        }\n        if (!this.element.hasAttribute('type')) {\n            this.element.setAttribute('type', 'file');\n        }\n        this.updateDirectoryAttributes();\n        this.keyConfigs = {\n            enter: 'enter'\n        };\n        if (this.element.hasAttribute('tabindex')) {\n            this.tabIndex = this.element.getAttribute('tabindex');\n        }\n        this.browserName = Browser.info.name;\n        this.uploaderName = this.element.getAttribute('name');\n    };\n    Uploader.prototype.getPersistData = function () {\n        return this.addOnPersist([]);\n    };\n    /**\n     * Return the module name of the component.\n     */\n    Uploader.prototype.getModuleName = function () {\n        return 'uploader';\n    };\n    Uploader.prototype.updateDirectoryAttributes = function () {\n        if (this.directoryUpload) {\n            this.element.setAttribute('directory', 'true');\n            this.element.setAttribute('webkitdirectory', 'true');\n        }\n        else {\n            this.element.removeAttribute('directory');\n            this.element.removeAttribute('webkitdirectory');\n        }\n    };\n    /**\n     * To Initialize the control rendering\n     * @private\n     */\n    Uploader.prototype.render = function () {\n        this.renderBrowseButton();\n        this.initializeUpload();\n        this.updateHTMLAttrToWrapper();\n        this.wireEvents();\n        this.setMultipleSelection();\n        this.setExtensions(this.allowedExtensions);\n        this.setRTL();\n        this.renderPreLoadFiles();\n        this.setControlStatus();\n        this.setCSSClass();\n        this.renderComplete();\n    };\n    Uploader.prototype.renderBrowseButton = function () {\n        this.browseButton = this.createElement('button', { className: 'e-css e-btn', attrs: { 'type': 'button' } });\n        this.browseButton.setAttribute('tabindex', this.tabIndex);\n        if (typeof (this.buttons.browse) === 'string') {\n            this.browseButton.textContent = (this.buttons.browse === 'Browse...') ?\n                this.localizedTexts('Browse') : this.buttons.browse;\n            this.browseButton.setAttribute('title', this.browseButton.innerText);\n        }\n        else {\n            this.browseButton.appendChild(this.buttons.browse);\n        }\n        this.element.setAttribute('aria-label', 'Uploader');\n    };\n    Uploader.prototype.renderActionButtons = function () {\n        this.element.setAttribute('tabindex', '-1');\n        this.actionButtons = this.createElement('div', { className: ACTION_BUTTONS });\n        this.uploadButton = this.createElement('button', { className: UPLOAD_BUTTONS,\n            attrs: { 'type': 'button', 'tabindex': this.btnTabIndex } });\n        this.clearButton = this.createElement('button', { className: CLEAR_BUTTONS,\n            attrs: { 'type': 'button', 'tabindex': this.btnTabIndex } });\n        this.actionButtons.appendChild(this.clearButton);\n        this.actionButtons.appendChild(this.uploadButton);\n        this.renderButtonTemplates();\n        this.uploadWrapper.appendChild(this.actionButtons);\n        this.browseButton.blur();\n        this.uploadButton.focus();\n        this.wireActionButtonEvents();\n    };\n    Uploader.prototype.wireActionButtonEvents = function () {\n        EventHandler.add(this.uploadButton, 'click', this.uploadButtonClick, this);\n        EventHandler.add(this.clearButton, 'click', this.clearButtonClick, this);\n    };\n    Uploader.prototype.unwireActionButtonEvents = function () {\n        EventHandler.remove(this.uploadButton, 'click', this.uploadButtonClick);\n        EventHandler.remove(this.clearButton, 'click', this.clearButtonClick);\n    };\n    Uploader.prototype.removeActionButtons = function () {\n        if (this.actionButtons) {\n            this.unwireActionButtonEvents();\n            detach(this.actionButtons);\n            this.actionButtons = null;\n        }\n    };\n    Uploader.prototype.renderButtonTemplates = function () {\n        if (typeof (this.buttons.browse) === 'string') {\n            this.browseButton.textContent = (this.buttons.browse === 'Browse...') ?\n                this.localizedTexts('Browse') : this.buttons.browse;\n            this.browseButton.setAttribute('title', this.browseButton.textContent);\n        }\n        else {\n            this.browseButton.innerHTML = '';\n            this.browseButton.appendChild(this.buttons.browse);\n        }\n        if (this.uploadButton) {\n            var uploadText = void 0;\n            uploadText = isNullOrUndefined(this.buttons.upload) ? 'Upload' : this.buttons.upload;\n            this.buttons.upload = uploadText;\n            if (typeof (this.buttons.upload) === 'string') {\n                this.uploadButton.textContent = (this.buttons.upload === 'Upload') ?\n                    this.localizedTexts('Upload') : this.buttons.upload;\n                this.uploadButton.setAttribute('title', this.uploadButton.textContent);\n            }\n            else {\n                this.uploadButton.innerHTML = '';\n                this.uploadButton.appendChild(this.buttons.upload);\n            }\n        }\n        if (this.clearButton) {\n            var clearText = void 0;\n            clearText = isNullOrUndefined(this.buttons.clear) ? 'Clear' : this.buttons.clear;\n            this.buttons.clear = clearText;\n            if (typeof (this.buttons.clear) === 'string') {\n                this.clearButton.textContent = (this.buttons.clear === 'Clear') ?\n                    this.localizedTexts('Clear') : this.buttons.clear;\n                this.clearButton.setAttribute('title', this.clearButton.textContent);\n            }\n            else {\n                this.clearButton.innerHTML = '';\n                this.clearButton.appendChild(this.buttons.clear);\n            }\n        }\n    };\n    Uploader.prototype.initializeUpload = function () {\n        this.element.setAttribute('tabindex', '-1');\n        var inputWrapper = this.createElement('span', { className: INPUT_WRAPPER });\n        this.element.parentElement.insertBefore(inputWrapper, this.element);\n        this.dropAreaWrapper = this.createElement('div', { className: DROP_WRAPPER });\n        this.element.parentElement.insertBefore(this.dropAreaWrapper, this.element);\n        inputWrapper.appendChild(this.element);\n        this.dropAreaWrapper.appendChild(this.browseButton);\n        this.dropAreaWrapper.appendChild(inputWrapper);\n        var fileDropArea = this.createElement('span', { className: DROP_AREA });\n        fileDropArea.innerHTML = this.localizedTexts('dropFilesHint');\n        this.dropAreaWrapper.appendChild(fileDropArea);\n        this.uploadWrapper = this.createElement('div', { className: CONTROL_WRAPPER });\n        this.dropAreaWrapper.parentElement.insertBefore(this.uploadWrapper, this.dropAreaWrapper);\n        this.uploadWrapper.appendChild(this.dropAreaWrapper);\n        this.setDropArea();\n    };\n    Uploader.prototype.renderPreLoadFiles = function () {\n        if (this.files.length) {\n            if (isNullOrUndefined(this.files[0].size)) {\n                return;\n            }\n            var files = [].slice.call(this.files);\n            var filesData = [];\n            if (!this.multiple) {\n                this.clearData();\n                files = [files[0]];\n            }\n            for (var _i = 0, files_1 = files; _i < files_1.length; _i++) {\n                var data = files_1[_i];\n                var fileData = {\n                    name: data.name + '.' + data.type.split('.')[data.type.split('.').length - 1],\n                    rawFile: '',\n                    size: data.size,\n                    status: this.localizedTexts('uploadSuccessMessage'),\n                    type: data.type,\n                    validationMessages: { minSize: '', maxSize: '' },\n                    statusCode: '2'\n                };\n                filesData.push(fileData);\n                this.filesData.push(fileData);\n            }\n            this.createFileList(filesData);\n            if (!this.autoUpload && this.listParent && !this.actionButtons && (!this.isForm || this.allowUpload()) && this.showFileList) {\n                this.renderActionButtons();\n            }\n            this.checkActionButtonStatus();\n        }\n    };\n    Uploader.prototype.checkActionButtonStatus = function () {\n        if (this.actionButtons) {\n            var length_1 = this.uploadWrapper.querySelectorAll('.' + VALIDATION_FAILS).length +\n                this.uploadWrapper.querySelectorAll('.e-upload-fails:not(.e-upload-progress)').length +\n                this.uploadWrapper.querySelectorAll('span.' + UPLOAD_SUCCESS).length +\n                this.uploadWrapper.querySelectorAll('span.' + UPLOAD_INPROGRESS).length;\n            if (length_1 > 0 && length_1 === this.uploadWrapper.querySelectorAll('li').length) {\n                this.uploadButton.setAttribute('disabled', 'disabled');\n            }\n            else {\n                this.uploadButton.removeAttribute('disabled');\n            }\n        }\n    };\n    Uploader.prototype.setDropArea = function () {\n        var dropTextArea = this.dropAreaWrapper.querySelector('.e-file-drop');\n        if (this.dropArea) {\n            this.dropZoneElement = (typeof (this.dropArea) !== 'string') ? this.dropArea :\n                document.querySelector(this.dropArea);\n            var element = this.element;\n            var enableDropText = false;\n            while (element.parentNode) {\n                element = element.parentNode;\n                if (element === this.dropZoneElement) {\n                    enableDropText = true;\n                    dropTextArea.textContent = this.localizedTexts('dropFilesHint');\n                }\n            }\n            if (!enableDropText) {\n                dropTextArea.textContent = '';\n            }\n        }\n        else {\n            this.dropZoneElement = this.uploadWrapper;\n            dropTextArea.textContent = this.localizedTexts('dropFilesHint');\n        }\n        this.bindDropEvents();\n    };\n    Uploader.prototype.updateHTMLAttrToElement = function () {\n        if (!isNullOrUndefined(this.htmlAttributes)) {\n            for (var _i = 0, _a = Object.keys(this.htmlAttributes); _i < _a.length; _i++) {\n                var pro = _a[_i];\n                if (wrapperAttr.indexOf(pro) < 0) {\n                    this.element.setAttribute(pro, this.htmlAttributes[pro]);\n                }\n            }\n        }\n    };\n    Uploader.prototype.updateHTMLAttrToWrapper = function () {\n        if (!isNullOrUndefined(this.htmlAttributes)) {\n            for (var _i = 0, _a = Object.keys(this.htmlAttributes); _i < _a.length; _i++) {\n                var pro = _a[_i];\n                if (wrapperAttr.indexOf(pro) > -1) {\n                    if (pro === 'class') {\n                        addClass([this.uploadWrapper], this.htmlAttributes[pro].split(' '));\n                    }\n                    else if (pro === 'style') {\n                        var uploadStyle = this.uploadWrapper.getAttribute(pro);\n                        uploadStyle = !isNullOrUndefined(uploadStyle) ? (uploadStyle + this.htmlAttributes[pro]) :\n                            this.htmlAttributes[pro];\n                        this.uploadWrapper.setAttribute(pro, uploadStyle);\n                    }\n                    else {\n                        this.uploadWrapper.setAttribute(pro, this.htmlAttributes[pro]);\n                    }\n                }\n            }\n        }\n    };\n    Uploader.prototype.setMultipleSelection = function () {\n        if (this.multiple && !this.element.hasAttribute('multiple')) {\n            var newAttr = document.createAttribute('multiple');\n            newAttr.value = 'multiple';\n            this.element.setAttributeNode(newAttr);\n        }\n        else if (!this.multiple) {\n            this.element.removeAttribute('multiple');\n        }\n    };\n    Uploader.prototype.checkAutoUpload = function (fileData) {\n        if (this.autoUpload) {\n            if (this.sequentialUpload) {\n                /* istanbul ignore next */\n                this.sequenceUpload(fileData);\n            }\n            else {\n                this.upload(fileData);\n            }\n            this.removeActionButtons();\n        }\n        else if (!this.actionButtons) {\n            this.renderActionButtons();\n        }\n        this.checkActionButtonStatus();\n    };\n    Uploader.prototype.sequenceUpload = function (fileData) {\n        if (this.filesData.length - fileData.length === 0 ||\n            this.filesData[(this.filesData.length - fileData.length - 1)].statusCode !== '1') {\n            ++this.count;\n            var isFileListCreated = this.showFileList ? false : true;\n            if (typeof this.filesData[this.count] === 'object') {\n                this.upload(this.filesData[this.count], isFileListCreated);\n                if (this.filesData[this.count].statusCode === '0') {\n                    this.sequenceUpload(fileData);\n                }\n            }\n            else {\n                --this.count;\n            }\n        }\n    };\n    Uploader.prototype.setCSSClass = function (oldCSSClass) {\n        if (this.cssClass) {\n            addClass([this.uploadWrapper], this.cssClass.split(this.cssClass.indexOf(',') > -1 ? ',' : ' '));\n        }\n        if (oldCSSClass) {\n            removeClass([this.uploadWrapper], oldCSSClass.split(' '));\n        }\n    };\n    Uploader.prototype.wireEvents = function () {\n        EventHandler.add(this.browseButton, 'click', this.browseButtonClick, this);\n        EventHandler.add(this.element, 'change', this.onSelectFiles, this);\n        EventHandler.add(document, 'click', this.removeFocus, this);\n        this.keyboardModule = new KeyboardEvents(this.uploadWrapper, {\n            keyAction: this.keyActionHandler.bind(this),\n            keyConfigs: this.keyConfigs,\n            eventName: 'keydown',\n        });\n        if (this.isForm) {\n            EventHandler.add(this.formElement, 'reset', this.resetForm, this);\n        }\n    };\n    Uploader.prototype.unWireEvents = function () {\n        EventHandler.remove(this.browseButton, 'click', this.browseButtonClick);\n        EventHandler.remove(this.element, 'change', this.onSelectFiles);\n        EventHandler.remove(document, 'click', this.removeFocus);\n        if (this.isForm) {\n            EventHandler.remove(this.formElement, 'reset', this.resetForm);\n        }\n        this.keyboardModule.destroy();\n    };\n    Uploader.prototype.resetForm = function () {\n        this.clearAll();\n    };\n    Uploader.prototype.keyActionHandler = function (e) {\n        var targetElement = e.target;\n        switch (e.action) {\n            case 'enter':\n                if (e.target === this.clearButton) {\n                    this.clearButtonClick();\n                }\n                else if (e.target === this.uploadButton) {\n                    this.uploadButtonClick();\n                }\n                else if (e.target === this.browseButton) {\n                    this.browseButtonClick();\n                }\n                else if (targetElement.classList.contains(PAUSE_UPLOAD)) {\n                    var metaData = this.getCurrentMetaData(null, e);\n                    metaData.file.statusCode = '4';\n                    metaData.file.status = this.localizedTexts('pauseUpload');\n                    this.abortUpload(metaData, false);\n                }\n                else if (targetElement.classList.contains(RESUME_UPLOAD)) {\n                    this.resumeUpload(this.getCurrentMetaData(null, e), e);\n                }\n                else if (targetElement.classList.contains(RETRY_ICON)) {\n                    var metaData = this.getCurrentMetaData(null, e);\n                    if (!isNullOrUndefined(metaData)) {\n                        metaData.file.statusCode = '1';\n                        metaData.file.status = this.localizedTexts('readyToUploadMessage');\n                        this.chunkUpload(metaData.file);\n                    }\n                    else {\n                        var target = e.target.parentElement;\n                        var fileData = this.filesData[this.fileList.indexOf(target)];\n                        this.retry(fileData);\n                    }\n                }\n                else {\n                    this.removeFiles(e);\n                    if (!targetElement.classList.contains(ABORT_ICON)) {\n                        this.browseButton.focus();\n                    }\n                }\n                e.preventDefault();\n                e.stopPropagation();\n                break;\n        }\n    };\n    Uploader.prototype.getCurrentMetaData = function (fileInfo, e) {\n        var fileData;\n        var targetMetaData;\n        if (isNullOrUndefined(fileInfo)) {\n            var target = e.target.parentElement;\n            fileData = this.filesData[this.fileList.indexOf(target)];\n        }\n        else {\n            fileData = fileInfo;\n        }\n        for (var i = 0; i < this.uploadMetaData.length; i++) {\n            if (this.uploadMetaData[i].file.name === fileData.name) {\n                targetMetaData = this.uploadMetaData[i];\n            }\n        }\n        return targetMetaData;\n    };\n    Uploader.prototype.removeFocus = function () {\n        if (this.uploadWrapper && this.listParent && this.listParent.querySelector('.' + ICON_FOCUSED)) {\n            document.activeElement.blur();\n            this.listParent.querySelector('.' + ICON_FOCUSED).classList.remove(ICON_FOCUSED);\n        }\n    };\n    Uploader.prototype.browseButtonClick = function () {\n        this.element.click();\n    };\n    Uploader.prototype.uploadButtonClick = function () {\n        if (this.sequentialUpload) {\n            this.sequenceUpload(this.filesData);\n        }\n        else {\n            this.upload(this.filesData);\n        }\n    };\n    Uploader.prototype.clearButtonClick = function () {\n        this.clearAll();\n        /* istanbul ignore next */\n        if (this.sequentialUpload) {\n            this.count = -1;\n        }\n        this.actionCompleteCount = 0;\n    };\n    Uploader.prototype.bindDropEvents = function () {\n        if (this.dropZoneElement) {\n            EventHandler.add(this.dropZoneElement, 'drop', this.dropElement, this);\n            EventHandler.add(this.dropZoneElement, 'dragover', this.dragHover, this);\n            EventHandler.add(this.dropZoneElement, 'dragleave', this.onDragLeave, this);\n            EventHandler.add(this.dropZoneElement, 'paste', this.onPasteFile, this);\n        }\n    };\n    Uploader.prototype.unBindDropEvents = function () {\n        if (this.dropZoneElement) {\n            EventHandler.remove(this.dropZoneElement, 'drop', this.dropElement);\n            EventHandler.remove(this.dropZoneElement, 'dragover', this.dragHover);\n            EventHandler.remove(this.dropZoneElement, 'dragleave', this.onDragLeave);\n        }\n    };\n    Uploader.prototype.onDragLeave = function (e) {\n        this.dropZoneElement.classList.remove(DRAG_HOVER);\n    };\n    Uploader.prototype.dragHover = function (e) {\n        if (!this.enabled) {\n            return;\n        }\n        this.dropZoneElement.classList.add(DRAG_HOVER);\n        e.preventDefault();\n        e.stopPropagation();\n    };\n    /* istanbul ignore next */\n    Uploader.prototype.dropElement = function (e) {\n        this.dropZoneElement.classList.remove(DRAG_HOVER);\n        this.onSelectFiles(e);\n        e.preventDefault();\n        e.stopPropagation();\n    };\n    /* istanbul ignore next */\n    Uploader.prototype.onPasteFile = function (event) {\n        var item = event.clipboardData.items;\n        if (item.length !== 1) {\n            return;\n        }\n        var pasteFile = [].slice.call(item)[0];\n        if ((pasteFile.kind === 'file') && pasteFile.type.match('^image/')) {\n            this.renderSelectedFiles(event, [pasteFile.getAsFile()], false, true);\n        }\n    };\n    Uploader.prototype.getSelectedFiles = function (index) {\n        var data = [];\n        var liElement = this.fileList[index];\n        var allFiles = this.getFilesData();\n        var nameElements = +liElement.getAttribute('data-files-count');\n        var startIndex = 0;\n        for (var i = 0; i < index; i++) {\n            startIndex += (+this.fileList[i].getAttribute('data-files-count'));\n        }\n        for (var j = startIndex; j < (startIndex + nameElements); j++) {\n            data.push(allFiles[j]);\n        }\n        return data;\n    };\n    Uploader.prototype.removeFiles = function (args) {\n        if (!this.enabled) {\n            return;\n        }\n        var selectedElement = args.target.parentElement;\n        var index = this.fileList.indexOf(selectedElement);\n        var liElement = this.fileList[index];\n        var formUpload = this.isFormUpload();\n        var fileData = formUpload ? this.getSelectedFiles(index) : this.getFilesInArray(this.filesData[index]);\n        if (isNullOrUndefined(fileData)) {\n            return;\n        }\n        if (args.target.classList.contains(ABORT_ICON) && !formUpload) {\n            fileData[0].statusCode = '5';\n            if (!isNullOrUndefined(liElement)) {\n                var spinnerTarget = liElement.querySelector('.' + ABORT_ICON);\n                createSpinner({ target: spinnerTarget, width: '20px' });\n                showSpinner(spinnerTarget);\n            }\n            if (this.sequentialUpload) {\n                /* istanbul ignore next */\n                this.uploadSequential();\n            }\n            if (!(liElement.classList.contains(RESTRICT_RETRY))) {\n                this.checkActionComplete(true);\n            }\n        }\n        else {\n            this.remove(fileData, false, false, true, args);\n        }\n        this.element.value = '';\n        this.checkActionButtonStatus();\n    };\n    Uploader.prototype.removeFilesData = function (file, customTemplate) {\n        var index;\n        if (customTemplate) {\n            if (!this.showFileList) {\n                index = this.filesData.indexOf(file);\n                this.filesData.splice(index, 1);\n            }\n            return;\n        }\n        var selectedElement = this.getLiElement(file);\n        if (isNullOrUndefined(selectedElement)) {\n            return;\n        }\n        detach(selectedElement);\n        index = this.fileList.indexOf(selectedElement);\n        this.fileList.splice(index, 1);\n        this.filesData.splice(index, 1);\n        if (this.fileList.length === 0 && !isNullOrUndefined(this.listParent)) {\n            detach(this.listParent);\n            this.listParent = null;\n            this.removeActionButtons();\n        }\n        if (this.sequentialUpload) {\n            /* istanbul ignore next */\n            if (index <= this.count) {\n                --this.count;\n            }\n        }\n    };\n    Uploader.prototype.removeUploadedFile = function (file, eventArgs, removeDirectly, custom) {\n        var _this = this;\n        var selectedFiles = file;\n        var ajax = new Ajax(this.asyncSettings.removeUrl, 'POST', true, null);\n        ajax.emitError = false;\n        var formData = new FormData();\n        ajax.beforeSend = function (e) {\n            eventArgs.currentRequest = ajax.httpRequest;\n            if (isBlazor()) {\n                if (_this.currentRequestHeader) {\n                    _this.updateCustomheader(ajax.httpRequest, _this.currentRequestHeader);\n                }\n                if (_this.customFormDatas) {\n                    _this.updateFormData(formData, _this.customFormDatas);\n                }\n            }\n            if (!removeDirectly) {\n                _this.trigger('removing', eventArgs, function (eventArgs) {\n                    if (eventArgs.cancel) {\n                        e.cancel = true;\n                    }\n                    else {\n                        _this.removingEventCallback(eventArgs, formData, selectedFiles, file);\n                    }\n                });\n            }\n            else {\n                _this.removingEventCallback(eventArgs, formData, selectedFiles, file);\n            }\n        };\n        ajax.onLoad = function (e) { _this.removeCompleted(e, selectedFiles, custom); return {}; };\n        /* istanbul ignore next */\n        ajax.onError = function (e) { _this.removeFailed(e, selectedFiles, custom); return {}; };\n        ajax.send(formData);\n    };\n    Uploader.prototype.removingEventCallback = function (eventArgs, formData, selectedFiles, file) {\n        /* istanbul ignore next */\n        var name = this.element.getAttribute('name');\n        var liElement = this.getLiElement(file);\n        if (!isNullOrUndefined(liElement) && (!isNullOrUndefined(liElement.querySelector('.' + DELETE_ICON)) ||\n            !isNullOrUndefined(liElement.querySelector('.' + REMOVE_ICON)))) {\n            var spinnerTarget = void 0;\n            spinnerTarget = liElement.querySelector('.' + DELETE_ICON) ? liElement.querySelector('.' + DELETE_ICON) :\n                liElement.querySelector('.' + REMOVE_ICON);\n            createSpinner({ target: spinnerTarget, width: '20px' });\n            showSpinner(spinnerTarget);\n        }\n        if (eventArgs.postRawFile && !isNullOrUndefined(selectedFiles.rawFile) && selectedFiles.rawFile !== '') {\n            formData.append(name, selectedFiles.rawFile, selectedFiles.name);\n        }\n        else {\n            formData.append(name, selectedFiles.name);\n        }\n        this.updateFormData(formData, eventArgs.customFormData);\n    };\n    /* istanbul ignore next */\n    Uploader.prototype.updateFormData = function (formData, customData) {\n        if (customData.length > 0 && customData[0]) {\n            var _loop_1 = function (i) {\n                var data = customData[i];\n                // tslint:disable-next-line\n                var value = Object.keys(data).map(function (e) {\n                    return data[e];\n                });\n                formData.append(Object.keys(data)[0], value);\n            };\n            for (var i = 0; i < customData.length; i++) {\n                _loop_1(i);\n            }\n        }\n    };\n    /* istanbul ignore next */\n    Uploader.prototype.updateCustomheader = function (request, currentRequest) {\n        if (currentRequest.length > 0 && currentRequest[0]) {\n            var _loop_2 = function (i) {\n                var data = currentRequest[i];\n                // tslint:disable-next-line\n                var value = Object.keys(data).map(function (e) {\n                    return data[e];\n                });\n                request.setRequestHeader(Object.keys(data)[0], value);\n            };\n            for (var i = 0; i < currentRequest.length; i++) {\n                _loop_2(i);\n            }\n        }\n    };\n    Uploader.prototype.removeCompleted = function (e, files, customTemplate) {\n        var response = e && e.currentTarget ? this.getResponse(e) : null;\n        var args = {\n            e: e, response: response, operation: 'remove', file: this.updateStatus(files, this.localizedTexts('removedSuccessMessage'), '2')\n        };\n        this.trigger('success', args);\n        this.removeFilesData(files, customTemplate);\n        var index = this.uploadedFilesData.indexOf(files);\n        this.uploadedFilesData.splice(index, 1);\n        this.trigger('change', { files: this.uploadedFilesData });\n    };\n    Uploader.prototype.removeFailed = function (e, files, customTemplate) {\n        var response = e && e.currentTarget ? this.getResponse(e) : null;\n        var args = {\n            e: e, response: response, operation: 'remove', file: this.updateStatus(files, this.localizedTexts('removedFailedMessage'), '0')\n        };\n        if (!customTemplate) {\n            var index = this.filesData.indexOf(files);\n            var rootElement = this.fileList[index];\n            if (rootElement) {\n                var statusElement = rootElement.querySelector('.' + STATUS);\n                rootElement.classList.remove(UPLOAD_SUCCESS);\n                statusElement.classList.remove(UPLOAD_SUCCESS);\n                rootElement.classList.add(UPLOAD_FAILED);\n                statusElement.classList.add(UPLOAD_FAILED);\n            }\n            this.checkActionButtonStatus();\n        }\n        this.trigger('failure', args);\n        var liElement = this.getLiElement(files);\n        /* istanbul ignore next */\n        if (!isNullOrUndefined(liElement) && !isNullOrUndefined(liElement.querySelector('.' + DELETE_ICON))) {\n            var spinnerTarget = liElement.querySelector('.' + DELETE_ICON);\n            hideSpinner(spinnerTarget);\n            detach(liElement.querySelector('.e-spinner-pane'));\n        }\n    };\n    /* istanbul ignore next */\n    Uploader.prototype.getFilesFromFolder = function (event) {\n        this.filesEntries = [];\n        var items;\n        items = this.multiple ? event.dataTransfer.items : [event.dataTransfer.items[0]];\n        var validDirectoryUpload = this.checkDirectoryUpload(items);\n        if (!validDirectoryUpload) {\n            return;\n        }\n        var _loop_3 = function (i) {\n            // tslint:disable-next-line\n            var item = items[i].webkitGetAsEntry();\n            if (item.isFile) {\n                var files_2 = [];\n                // tslint:disable-next-line\n                (item).file(function (fileObj) {\n                    var path = item.fullPath;\n                    files_2.push({ 'path': path, 'file': fileObj });\n                });\n                this_1.renderSelectedFiles(event, files_2, true);\n            }\n            else if (item.isDirectory) {\n                this_1.traverseFileTree(item, event);\n            }\n        };\n        var this_1 = this;\n        for (var i = 0; i < items.length; i++) {\n            _loop_3(i);\n        }\n    };\n    /* istanbul ignore next */\n    Uploader.prototype.checkDirectoryUpload = function (items) {\n        for (var i = 0; i < items.length; i++) {\n            // tslint:disable-next-line\n            var item = items[i].webkitGetAsEntry();\n            if (item.isDirectory) {\n                return true;\n            }\n        }\n        return false;\n    };\n    // tslint:disable\n    /* istanbul ignore next */\n    Uploader.prototype.traverseFileTree = function (item, event) {\n        var _this = this;\n        if (item.isFile) {\n            this.filesEntries.push(item);\n        }\n        else if (item.isDirectory) {\n            // tslint:disable-next-line\n            var directoryReader = item.createReader();\n            // tslint:disable-next-line\n            directoryReader.readEntries(function (entries) {\n                for (var i = 0; i < entries.length; i++) {\n                    _this.traverseFileTree(entries[i]);\n                    // tslint:disable-next-line\n                }\n                ;\n                _this.pushFilesEntries(event);\n            });\n        }\n    };\n    Uploader.prototype.pushFilesEntries = function (event) {\n        var _this = this;\n        var files = [];\n        var _loop_4 = function (i) {\n            // tslint:disable-next-line\n            this_2.filesEntries[i].file(function (fileObj) {\n                var path = _this.filesEntries[i].fullPath;\n                files.push({ 'path': path, 'file': fileObj });\n                if (i === _this.filesEntries.length - 1) {\n                    _this.filesEntries = [];\n                    _this.renderSelectedFiles(event, files, true);\n                }\n            });\n        };\n        var this_2 = this;\n        for (var i = 0; i < this.filesEntries.length; i++) {\n            _loop_4(i);\n        }\n    };\n    // tslint:enable\n    Uploader.prototype.onSelectFiles = function (args) {\n        if (!this.enabled) {\n            return;\n        }\n        var targetFiles;\n        /* istanbul ignore next */\n        if (args.type === 'drop') {\n            if (this.directoryUpload) {\n                this.getFilesFromFolder(args);\n            }\n            else {\n                var files = this.sortFilesList = args.dataTransfer.files;\n                if (this.browserName !== 'msie' && this.browserName !== 'edge') {\n                    this.element.files = files;\n                }\n                targetFiles = this.multiple ? this.sortFileList(files) : [files[0]];\n                this.renderSelectedFiles(args, targetFiles);\n            }\n        }\n        else {\n            targetFiles = [].slice.call(args.target.files);\n            this.renderSelectedFiles(args, targetFiles);\n        }\n    };\n    /* istanbul ignore next */\n    Uploader.prototype.getBase64 = function (file) {\n        return new Promise(function (resolve, reject) {\n            var fileReader = new FileReader();\n            fileReader.readAsDataURL(file);\n            fileReader.onload = function () { return resolve(fileReader.result); };\n            fileReader.onerror = function (error) { return reject(error); };\n        });\n    };\n    /* istanbul ignore next */\n    /* tslint:ignore */\n    Uploader.prototype.renderSelectedFiles = function (args, \n    // tslint:disable-next-line\n    targetFiles, directory, paste) {\n        var _this = this;\n        this.base64String = [];\n        // tslint:disable-next-line\n        var eventArgs = {\n            event: args,\n            cancel: false,\n            filesData: [],\n            isModified: false,\n            modifiedFilesData: [],\n            progressInterval: '',\n            isCanceled: false,\n            currentRequest: null,\n            customFormData: null\n        };\n        /* istanbul ignore next */\n        if (targetFiles.length < 1) {\n            eventArgs.isCanceled = true;\n            this.trigger('selected', eventArgs);\n            return;\n        }\n        this.flag = true;\n        var fileData = [];\n        if (!this.multiple) {\n            this.clearData(true);\n            targetFiles = [targetFiles[0]];\n        }\n        for (var i = 0; i < targetFiles.length; i++) {\n            var file = directory ? targetFiles[i].file : targetFiles[i];\n            this.updateInitialFileDetails(args, targetFiles, file, i, fileData, directory, paste);\n        }\n        eventArgs.filesData = fileData;\n        if (this.allowedExtensions.indexOf('*') > -1) {\n            this.allTypes = true;\n        }\n        if (!this.allTypes) {\n            fileData = this.checkExtension(fileData);\n        }\n        this.trigger('selected', eventArgs, function (eventArgs) {\n            _this._internalRenderSelect(eventArgs, fileData);\n        });\n    };\n    Uploader.prototype.updateInitialFileDetails = function (args, \n    // tslint:disable-next-line\n    targetFiles, file, i, fileData, directory, paste) {\n        var fileName = directory ? targetFiles[i].path.substring(1, targetFiles[i].path.length) : paste ?\n            getUniqueID(file.name.substring(0, file.name.lastIndexOf('.'))) + '.' + this.getFileType(file.name) :\n            this.directoryUpload ? targetFiles[i].webkitRelativePath : file.name;\n        var fileDetails = {\n            name: fileName,\n            rawFile: file,\n            size: file.size,\n            status: this.localizedTexts('readyToUploadMessage'),\n            type: this.getFileType(file.name),\n            validationMessages: this.validatedFileSize(file.size),\n            statusCode: '1'\n        };\n        /* istanbul ignore next */\n        if (paste) {\n            fileDetails.fileSource = 'paste';\n        }\n        fileDetails.status = fileDetails.validationMessages.minSize !== '' ? this.localizedTexts('invalidMinFileSize') :\n            fileDetails.validationMessages.maxSize !== '' ? this.localizedTexts('invalidMaxFileSize') : fileDetails.status;\n        if (fileDetails.validationMessages.minSize !== '' || fileDetails.validationMessages.maxSize !== '') {\n            fileDetails.statusCode = '0';\n            this.checkActionComplete(true);\n        }\n        fileData.push(fileDetails);\n    };\n    Uploader.prototype._internalRenderSelect = function (eventArgs, fileData) {\n        if (!eventArgs.cancel) {\n            /* istanbul ignore next */\n            if (isBlazor()) {\n                this.currentRequestHeader = eventArgs.currentRequest;\n                this.customFormDatas = eventArgs.customFormData;\n            }\n            this.selectedFiles = fileData;\n            this.btnTabIndex = this.disableKeyboardNavigation ? '-1' : '0';\n            if (this.showFileList) {\n                if (eventArgs.isModified && eventArgs.modifiedFilesData.length > 0) {\n                    var dataFiles = this.allTypes ? eventArgs.modifiedFilesData :\n                        this.checkExtension(eventArgs.modifiedFilesData);\n                    this.updateSortedFileList(dataFiles);\n                    this.filesData = dataFiles;\n                    if (!this.isForm || this.allowUpload()) {\n                        this.checkAutoUpload(dataFiles);\n                    }\n                }\n                else {\n                    this.createFileList(fileData);\n                    this.filesData = this.filesData.concat(fileData);\n                    if (!this.isForm || this.allowUpload()) {\n                        this.checkAutoUpload(fileData);\n                    }\n                }\n                if (!isNullOrUndefined(eventArgs.progressInterval) && eventArgs.progressInterval !== '') {\n                    this.progressInterval = eventArgs.progressInterval;\n                }\n            }\n            else {\n                this.filesData = this.filesData.concat(fileData);\n                if (this.autoUpload) {\n                    this.upload(this.filesData, true);\n                }\n            }\n            this.raiseActionComplete();\n        }\n    };\n    Uploader.prototype.allowUpload = function () {\n        var allowFormUpload = false;\n        if (this.isForm && (!isNullOrUndefined(this.asyncSettings.saveUrl) && this.asyncSettings.saveUrl !== '')) {\n            allowFormUpload = true;\n        }\n        return allowFormUpload;\n    };\n    Uploader.prototype.isFormUpload = function () {\n        var isFormUpload = false;\n        if (this.isForm && ((isNullOrUndefined(this.asyncSettings.saveUrl) || this.asyncSettings.saveUrl === '')\n            && (isNullOrUndefined(this.asyncSettings.removeUrl) || this.asyncSettings.removeUrl === ''))) {\n            isFormUpload = true;\n        }\n        return isFormUpload;\n    };\n    Uploader.prototype.clearData = function (singleUpload) {\n        if (!isNullOrUndefined(this.listParent)) {\n            detach(this.listParent);\n            this.listParent = null;\n        }\n        if (this.browserName !== 'msie' && !singleUpload) {\n            this.element.value = '';\n        }\n        this.fileList = [];\n        this.filesData = [];\n        this.removeActionButtons();\n    };\n    Uploader.prototype.updateSortedFileList = function (filesData) {\n        var previousListClone = this.createElement('div', { id: 'clonewrapper' });\n        var added = -1;\n        var removedList;\n        if (this.listParent) {\n            for (var i = 0; i < this.listParent.querySelectorAll('li').length; i++) {\n                var liElement = this.listParent.querySelectorAll('li')[i];\n                previousListClone.appendChild(liElement.cloneNode(true));\n            }\n            removedList = this.listParent.querySelectorAll('li');\n            for (var _i = 0, removedList_1 = removedList; _i < removedList_1.length; _i++) {\n                var item = removedList_1[_i];\n                detach(item);\n            }\n            this.removeActionButtons();\n            var oldList = [].slice.call(previousListClone.childNodes);\n            detach(this.listParent);\n            this.listParent = null;\n            this.fileList = [];\n            this.createParentUL();\n            for (var index = 0; index < filesData.length; index++) {\n                for (var j = 0; j < this.filesData.length; j++) {\n                    if (this.filesData[j].name === filesData[index].name) {\n                        this.listParent.appendChild(oldList[j]);\n                        EventHandler.add(oldList[j].querySelector('.e-icons'), 'click', this.removeFiles, this);\n                        this.fileList.push(oldList[j]);\n                        added = index;\n                    }\n                }\n                if (added !== index) {\n                    this.createFileList([filesData[index]]);\n                }\n            }\n        }\n        else {\n            this.createFileList(filesData);\n        }\n    };\n    Uploader.prototype.isBlank = function (str) {\n        return (!str || /^\\s*$/.test(str));\n    };\n    Uploader.prototype.checkExtension = function (files) {\n        var dropFiles = files;\n        if (!this.isBlank(this.allowedExtensions)) {\n            var allowedExtensions = [];\n            var extensions = this.allowedExtensions.split(',');\n            for (var _i = 0, extensions_1 = extensions; _i < extensions_1.length; _i++) {\n                var extension = extensions_1[_i];\n                allowedExtensions.push(extension.trim().toLocaleLowerCase());\n            }\n            for (var i = 0; i < files.length; i++) {\n                if (allowedExtensions.indexOf(('.' + files[i].type).toLocaleLowerCase()) === -1) {\n                    files[i].status = this.localizedTexts('invalidFileType');\n                    files[i].statusCode = '0';\n                }\n            }\n        }\n        return dropFiles;\n    };\n    Uploader.prototype.validatedFileSize = function (fileSize) {\n        var minSizeError = '';\n        var maxSizeError = '';\n        if (fileSize < this.minFileSize) {\n            minSizeError = this.localizedTexts('invalidMinFileSize');\n        }\n        else if (fileSize > this.maxFileSize) {\n            maxSizeError = this.localizedTexts('invalidMaxFileSize');\n        }\n        else {\n            minSizeError = '';\n            maxSizeError = '';\n        }\n        var errorMessage = { minSize: minSizeError, maxSize: maxSizeError };\n        return errorMessage;\n    };\n    Uploader.prototype.isPreLoadFile = function (fileData) {\n        var isPreload = false;\n        for (var i = 0; i < this.files.length; i++) {\n            if (this.files[i].name === fileData.name.slice(0, fileData.name.lastIndexOf('.')) && this.files[i].type === fileData.type) {\n                isPreload = true;\n            }\n        }\n        return isPreload;\n    };\n    Uploader.prototype.createCustomfileList = function (fileData) {\n        this.createParentUL();\n        resetBlazorTemplate(this.element.id + 'Template', 'Template');\n        for (var _i = 0, fileData_1 = fileData; _i < fileData_1.length; _i++) {\n            var listItem = fileData_1[_i];\n            var liElement = this.createElement('li', { className: FILE, attrs: { 'data-file-name': listItem.name } });\n            this.uploadTemplateFn = this.templateComplier(this.template);\n            var fromElements = [].slice.call(this.uploadTemplateFn(listItem, null, null, this.element.id + 'Template', this.isStringTemplate));\n            var index = fileData.indexOf(listItem);\n            append(fromElements, liElement);\n            var eventArgs = {\n                element: liElement,\n                fileInfo: listItem,\n                index: index,\n                isPreload: this.isPreLoadFile(listItem)\n            };\n            var eventsArgs = {\n                element: liElement,\n                fileInfo: listItem,\n                index: index,\n                isPreload: this.isPreLoadFile(listItem)\n            };\n            this.trigger('rendering', eventArgs);\n            this.trigger('fileListRendering', eventsArgs);\n            this.listParent.appendChild(liElement);\n            this.fileList.push(liElement);\n        }\n        updateBlazorTemplate(this.element.id + 'Template', 'Template', this, false);\n    };\n    Uploader.prototype.createParentUL = function () {\n        if (isNullOrUndefined(this.listParent)) {\n            this.listParent = this.createElement('ul', { className: LIST_PARENT });\n            this.uploadWrapper.appendChild(this.listParent);\n        }\n    };\n    Uploader.prototype.formFileList = function (fileData, files) {\n        var fileList = this.createElement('li', { className: FILE });\n        fileList.setAttribute('data-files-count', fileData.length + '');\n        var fileContainer = this.createElement('span', { className: TEXT_CONTAINER });\n        var statusMessage;\n        for (var _i = 0, fileData_2 = fileData; _i < fileData_2.length; _i++) {\n            var listItem = fileData_2[_i];\n            var fileNameEle = this.createElement('span', { className: FILE_NAME });\n            fileNameEle.innerHTML = this.getFileNameOnly(listItem.name);\n            var fileTypeEle = this.createElement('span', { className: FILE_TYPE });\n            fileTypeEle.innerHTML = '.' + this.getFileType(listItem.name);\n            if (!this.enableRtl) {\n                fileContainer.appendChild(fileNameEle);\n                fileContainer.appendChild(fileTypeEle);\n            }\n            else {\n                var rtlContainer = this.createElement('span', { className: RTL_CONTAINER });\n                rtlContainer.appendChild(fileTypeEle);\n                rtlContainer.appendChild(fileNameEle);\n                fileContainer.appendChild(rtlContainer);\n            }\n            this.truncateName(fileNameEle);\n            statusMessage = this.formValidateFileInfo(listItem, fileList);\n        }\n        fileList.appendChild(fileContainer);\n        this.setListToFileInfo(fileData, fileList);\n        var index = this.listParent.querySelectorAll('li').length;\n        var infoEle = this.createElement('span');\n        if (fileList.classList.contains(INVALID_FILE)) {\n            infoEle.classList.add(STATUS);\n            infoEle.classList.add(INVALID_FILE);\n            infoEle.innerText = fileData.length > 1 ? this.localizedTexts('invalidFileSelection') : statusMessage;\n        }\n        else {\n            infoEle.classList.add(fileData.length > 1 ? INFORMATION : FILE_SIZE);\n            infoEle.innerText = fileData.length > 1 ? this.localizedTexts('totalFiles') + ': ' + fileData.length + ' , '\n                + this.localizedTexts('size') + ': ' +\n                this.bytesToSize(this.getFileSize(fileData)) : this.bytesToSize(fileData[0].size);\n            this.createFormInput(fileData);\n        }\n        fileContainer.appendChild(infoEle);\n        if (isNullOrUndefined(fileList.querySelector('.e-icons'))) {\n            var iconElement = this.createElement('span', { className: 'e-icons', attrs: { 'tabindex': this.btnTabIndex } });\n            /* istanbul ignore next */\n            if (this.browserName === 'msie') {\n                iconElement.classList.add('e-msie');\n            }\n            iconElement.setAttribute('title', this.localizedTexts('remove'));\n            fileList.appendChild(fileContainer);\n            fileList.appendChild(iconElement);\n            EventHandler.add(iconElement, 'click', this.removeFiles, this);\n            iconElement.classList.add(REMOVE_ICON);\n        }\n        var eventArgs = {\n            element: fileList,\n            fileInfo: this.mergeFileInfo(fileData, fileList),\n            index: index,\n            isPreload: this.isPreLoadFile(this.mergeFileInfo(fileData, fileList))\n        };\n        var eventsArgs = {\n            element: fileList,\n            fileInfo: this.mergeFileInfo(fileData, fileList),\n            index: index,\n            isPreload: this.isPreLoadFile(this.mergeFileInfo(fileData, fileList))\n        };\n        this.trigger('rendering', eventArgs);\n        this.trigger('fileListRendering', eventsArgs);\n        this.listParent.appendChild(fileList);\n        this.fileList.push(fileList);\n    };\n    Uploader.prototype.formValidateFileInfo = function (listItem, fileList) {\n        var statusMessage = listItem.status;\n        var validationMessages = this.validatedFileSize(listItem.size);\n        if (validationMessages.minSize !== '' || validationMessages.maxSize !== '') {\n            this.addInvalidClass(fileList);\n            statusMessage = validationMessages.minSize !== '' ? this.localizedTexts('invalidMinFileSize') :\n                validationMessages.maxSize !== '' ? this.localizedTexts('invalidMaxFileSize') : statusMessage;\n        }\n        var typeValidationMessage = this.checkExtension(this.getFilesInArray(listItem))[0].status;\n        if (typeValidationMessage === this.localizedTexts('invalidFileType')) {\n            this.addInvalidClass(fileList);\n            statusMessage = typeValidationMessage;\n        }\n        return statusMessage;\n    };\n    Uploader.prototype.addInvalidClass = function (fileList) {\n        fileList.classList.add(INVALID_FILE);\n    };\n    Uploader.prototype.createFormInput = function (fileData) {\n        var inputElement = this.element.cloneNode(true);\n        inputElement.classList.add(HIDDEN_INPUT);\n        for (var _i = 0, fileData_3 = fileData; _i < fileData_3.length; _i++) {\n            var listItem = fileData_3[_i];\n            listItem.input = inputElement;\n        }\n        inputElement.setAttribute('name', this.uploaderName);\n        this.uploadWrapper.querySelector('.' + INPUT_WRAPPER).appendChild(inputElement);\n        if (this.browserName !== 'msie' && this.browserName !== 'edge') {\n            this.element.value = '';\n        }\n    };\n    Uploader.prototype.getFileSize = function (fileData) {\n        var fileSize = 0;\n        for (var _i = 0, fileData_4 = fileData; _i < fileData_4.length; _i++) {\n            var file = fileData_4[_i];\n            fileSize += file.size;\n        }\n        return fileSize;\n    };\n    Uploader.prototype.mergeFileInfo = function (fileData, fileList) {\n        var result = {\n            name: '',\n            rawFile: '',\n            size: 0,\n            status: '',\n            type: '',\n            validationMessages: { minSize: '', maxSize: '' },\n            statusCode: '1',\n            list: fileList\n        };\n        var fileNames = [];\n        var type = '';\n        for (var _i = 0, fileData_5 = fileData; _i < fileData_5.length; _i++) {\n            var listItem = fileData_5[_i];\n            fileNames.push(listItem.name);\n            type = listItem.type;\n        }\n        result.name = fileNames.join(', ');\n        result.size = this.getFileSize(fileData);\n        result.type = type;\n        result.status = this.statusForFormUpload(fileData, fileList);\n        return result;\n    };\n    Uploader.prototype.statusForFormUpload = function (fileData, fileList) {\n        var isValid = true;\n        var statusMessage;\n        for (var _i = 0, fileData_6 = fileData; _i < fileData_6.length; _i++) {\n            var listItem = fileData_6[_i];\n            statusMessage = listItem.status;\n            var validationMessages = this.validatedFileSize(listItem.size);\n            if (validationMessages.minSize !== '' || validationMessages.maxSize !== '') {\n                isValid = false;\n                statusMessage = validationMessages.minSize !== '' ? this.localizedTexts('invalidMinFileSize') :\n                    validationMessages.maxSize !== '' ? this.localizedTexts('invalidMaxFileSize') : statusMessage;\n            }\n            var typeValidationMessage = this.checkExtension(this.getFilesInArray(listItem))[0].status;\n            if (typeValidationMessage === this.localizedTexts('invalidFileType')) {\n                isValid = false;\n                statusMessage = typeValidationMessage;\n            }\n        }\n        if (!isValid) {\n            fileList.classList.add(INVALID_FILE);\n            statusMessage = fileData.length > 1 ? this.localizedTexts('invalidFileSelection') : statusMessage;\n        }\n        else {\n            statusMessage = this.localizedTexts('totalFiles') + ': ' + fileData.length + ' , '\n                + this.localizedTexts('size') + ': ' +\n                this.bytesToSize(this.getFileSize(fileData));\n        }\n        return statusMessage;\n    };\n    Uploader.prototype.formCustomFileList = function (fileData, files) {\n        this.createParentUL();\n        resetBlazorTemplate(this.element.id + 'Template', 'Template');\n        var fileList = this.createElement('li', { className: FILE });\n        fileList.setAttribute('data-files-count', fileData.length + '');\n        this.setListToFileInfo(fileData, fileList);\n        var result = this.mergeFileInfo(fileData, fileList);\n        fileList.setAttribute('data-file-name', result.name);\n        this.uploadTemplateFn = this.templateComplier(this.template);\n        var fromElements = [].slice.call(this.uploadTemplateFn(result, null, null, this.element.id + 'Template', this.isStringTemplate));\n        var index = this.listParent.querySelectorAll('li').length;\n        append(fromElements, fileList);\n        if (!fileList.classList.contains(INVALID_FILE)) {\n            this.createFormInput(fileData);\n        }\n        var eventArgs = {\n            element: fileList,\n            fileInfo: result,\n            index: index,\n            isPreload: this.isPreLoadFile(result)\n        };\n        var eventsArgs = {\n            element: fileList,\n            fileInfo: result,\n            index: index,\n            isPreload: this.isPreLoadFile(result)\n        };\n        this.trigger('rendering', eventArgs);\n        this.trigger('fileListRendering', eventsArgs);\n        this.listParent.appendChild(fileList);\n        this.fileList.push(fileList);\n        updateBlazorTemplate(this.element.id + 'Template', 'Template', this, false);\n    };\n    /**\n     * Create the file list for specified files data.\n     * @param { FileInfo[] } fileData - specifies the files data for file list creation.\n     * @returns void\n     */\n    Uploader.prototype.createFileList = function (fileData) {\n        this.createParentUL();\n        if (this.template !== '' && !isNullOrUndefined(this.template)) {\n            if (this.isFormUpload()) {\n                this.uploadWrapper.classList.add(FORM_UPLOAD);\n                this.formCustomFileList(fileData, this.element.files);\n            }\n            else {\n                this.createCustomfileList(fileData);\n            }\n        }\n        else if (this.isFormUpload()) {\n            this.uploadWrapper.classList.add(FORM_UPLOAD);\n            this.formFileList(fileData, this.element.files);\n        }\n        else {\n            for (var _i = 0, fileData_7 = fileData; _i < fileData_7.length; _i++) {\n                var listItem = fileData_7[_i];\n                var liElement = this.createElement('li', { className: FILE,\n                    attrs: { 'data-file-name': listItem.name, 'data-files-count': '1' } });\n                var textContainer = this.createElement('span', { className: TEXT_CONTAINER });\n                var textElement = this.createElement('span', { className: FILE_NAME, attrs: { 'title': listItem.name } });\n                textElement.innerHTML = this.getFileNameOnly(listItem.name);\n                var fileExtension = this.createElement('span', { className: FILE_TYPE });\n                fileExtension.innerHTML = '.' + this.getFileType(listItem.name);\n                if (!this.enableRtl) {\n                    textContainer.appendChild(textElement);\n                    textContainer.appendChild(fileExtension);\n                }\n                else {\n                    var rtlContainer = this.createElement('span', { className: RTL_CONTAINER });\n                    rtlContainer.appendChild(fileExtension);\n                    rtlContainer.appendChild(textElement);\n                    textContainer.appendChild(rtlContainer);\n                }\n                var fileSize = this.createElement('span', { className: FILE_SIZE });\n                fileSize.innerHTML = this.bytesToSize(listItem.size);\n                textContainer.appendChild(fileSize);\n                var statusElement = this.createElement('span', { className: STATUS });\n                textContainer.appendChild(statusElement);\n                statusElement.innerHTML = listItem.status;\n                liElement.appendChild(textContainer);\n                var iconElement = this.createElement('span', { className: ' e-icons', attrs: { 'tabindex': this.btnTabIndex } });\n                /* istanbul ignore next */\n                if (this.browserName === 'msie') {\n                    iconElement.classList.add('e-msie');\n                }\n                iconElement.setAttribute('title', this.localizedTexts('remove'));\n                liElement.appendChild(iconElement);\n                EventHandler.add(iconElement, 'click', this.removeFiles, this);\n                if (listItem.statusCode === '2') {\n                    statusElement.classList.add(UPLOAD_SUCCESS);\n                    iconElement.classList.add(DELETE_ICON);\n                    iconElement.setAttribute('title', this.localizedTexts('delete'));\n                }\n                else if (listItem.statusCode !== '1') {\n                    statusElement.classList.remove(UPLOAD_SUCCESS);\n                    statusElement.classList.add(VALIDATION_FAILS);\n                }\n                if (this.autoUpload && listItem.statusCode === '1' && this.asyncSettings.saveUrl !== '') {\n                    statusElement.innerHTML = '';\n                }\n                if (!iconElement.classList.contains(DELETE_ICON)) {\n                    iconElement.classList.add(REMOVE_ICON);\n                }\n                var index = fileData.indexOf(listItem);\n                var eventArgs = {\n                    element: liElement,\n                    fileInfo: listItem,\n                    index: index,\n                    isPreload: this.isPreLoadFile(listItem)\n                };\n                var eventsArgs = {\n                    element: liElement,\n                    fileInfo: listItem,\n                    index: index,\n                    isPreload: this.isPreLoadFile(listItem)\n                };\n                this.trigger('rendering', eventArgs);\n                this.trigger('fileListRendering', eventsArgs);\n                this.listParent.appendChild(liElement);\n                this.fileList.push(liElement);\n                this.truncateName(textElement);\n            }\n        }\n    };\n    Uploader.prototype.getSlicedName = function (nameElement) {\n        var text;\n        text = nameElement.textContent;\n        nameElement.dataset.tail = text.slice(text.length - 10);\n    };\n    Uploader.prototype.setListToFileInfo = function (fileData, fileList) {\n        for (var _i = 0, fileData_8 = fileData; _i < fileData_8.length; _i++) {\n            var listItem = fileData_8[_i];\n            listItem.list = fileList;\n        }\n    };\n    Uploader.prototype.truncateName = function (name) {\n        var nameElement = name;\n        if (this.browserName !== 'edge' && nameElement.offsetWidth < nameElement.scrollWidth) {\n            this.getSlicedName(nameElement);\n            /* istanbul ignore next */\n        }\n        else if (nameElement.offsetWidth + 1 < nameElement.scrollWidth) {\n            this.getSlicedName(nameElement);\n        }\n    };\n    Uploader.prototype.getFileType = function (name) {\n        var extension;\n        var index = name.lastIndexOf('.');\n        if (index >= 0) {\n            extension = name.substring(index + 1);\n        }\n        return extension ? extension : '';\n    };\n    Uploader.prototype.getFileNameOnly = function (name) {\n        var type = this.getFileType(name);\n        var names = name.split('.' + type);\n        return type = names[0];\n    };\n    Uploader.prototype.setInitialAttributes = function () {\n        if (this.initialAttr.accept) {\n            this.element.setAttribute('accept', this.initialAttr.accept);\n        }\n        if (this.initialAttr.disabled) {\n            this.element.setAttribute('disabled', 'disabled');\n        }\n        if (this.initialAttr.multiple) {\n            var newAttr = document.createAttribute('multiple');\n            this.element.setAttributeNode(newAttr);\n        }\n    };\n    Uploader.prototype.filterfileList = function (files) {\n        var filterFiles = [];\n        var li;\n        for (var i = 0; i < files.length; i++) {\n            li = this.getLiElement(files[i]);\n            if (!li.classList.contains(UPLOAD_SUCCESS)) {\n                filterFiles.push(files[i]);\n            }\n        }\n        return filterFiles;\n    };\n    Uploader.prototype.updateStatus = function (files, status, statusCode, updateLiStatus) {\n        if (updateLiStatus === void 0) { updateLiStatus = true; }\n        if (!(status === '' || isNullOrUndefined(status)) && !(statusCode === '' || isNullOrUndefined(statusCode))) {\n            files.status = status;\n            files.statusCode = statusCode;\n        }\n        if (updateLiStatus) {\n            var li = this.getLiElement(files);\n            if (!isNullOrUndefined(li)) {\n                if (!isNullOrUndefined(li.querySelector('.' + STATUS)) && !((status === '' || isNullOrUndefined(status)))) {\n                    li.querySelector('.' + STATUS).textContent = status;\n                }\n            }\n        }\n        return files;\n    };\n    Uploader.prototype.getLiElement = function (files) {\n        var index;\n        for (var i = 0; i < this.filesData.length; i++) {\n            if (this.filesData[i].name === files.name) {\n                index = i;\n            }\n        }\n        return this.fileList[index];\n    };\n    Uploader.prototype.createProgressBar = function (liElement) {\n        var progressbarWrapper = this.createElement('span', { className: PROGRESS_WRAPPER });\n        var progressBar = this.createElement('progressbar', { className: PROGRESSBAR, attrs: { value: '0', max: '100' } });\n        var progressbarInnerWrapper = this.createElement('span', { className: PROGRESS_INNER_WRAPPER });\n        progressBar.setAttribute('style', 'width: 0%');\n        var progressbarText = this.createElement('span', { className: PROGRESSBAR_TEXT });\n        progressbarText.textContent = '0%';\n        progressbarInnerWrapper.appendChild(progressBar);\n        progressbarWrapper.appendChild(progressbarInnerWrapper);\n        progressbarWrapper.appendChild(progressbarText);\n        liElement.querySelector('.' + TEXT_CONTAINER).appendChild(progressbarWrapper);\n    };\n    /* istanbul ignore next */\n    Uploader.prototype.updateProgressbar = function (e, li) {\n        if (!isNaN(Math.round((e.loaded / e.total) * 100)) && !isNullOrUndefined(li.querySelector('.' + PROGRESSBAR))) {\n            if (!isNullOrUndefined(this.progressInterval) && this.progressInterval !== '') {\n                var value = (Math.round((e.loaded / e.total) * 100)) % parseInt(this.progressInterval, 10);\n                if (value === 0 || value === 100) {\n                    this.changeProgressValue(li, Math.round((e.loaded / e.total) * 100).toString() + '%');\n                }\n            }\n            else {\n                this.changeProgressValue(li, Math.round((e.loaded / e.total) * 100).toString() + '%');\n            }\n        }\n    };\n    Uploader.prototype.changeProgressValue = function (li, progressValue) {\n        li.querySelector('.' + PROGRESSBAR).setAttribute('style', 'width:' + progressValue);\n        li.querySelector('.' + PROGRESSBAR_TEXT).textContent = progressValue;\n    };\n    Uploader.prototype.uploadInProgress = function (e, files, customUI, request) {\n        var li = this.getLiElement(files);\n        if (isNullOrUndefined(li) && (!customUI)) {\n            return;\n        }\n        if (!isNullOrUndefined(li)) {\n            /* istanbul ignore next */\n            if (files.statusCode === '5') {\n                this.cancelUploadingFile(files, e, request, li);\n            }\n            if (!(li.querySelectorAll('.' + PROGRESS_WRAPPER).length > 0) && li.querySelector('.' + STATUS)) {\n                li.querySelector('.' + STATUS).classList.add(UPLOAD_INPROGRESS);\n                this.createProgressBar(li);\n                this.updateProgressBarClasses(li, UPLOAD_INPROGRESS);\n                li.querySelector('.' + STATUS).classList.remove(UPLOAD_FAILED);\n            }\n            this.updateProgressbar(e, li);\n            var iconEle = li.querySelector('.' + REMOVE_ICON);\n            if (!isNullOrUndefined(iconEle)) {\n                iconEle.classList.add(ABORT_ICON, UPLOAD_INPROGRESS);\n                iconEle.setAttribute('title', this.localizedTexts('abort'));\n                iconEle.classList.remove(REMOVE_ICON);\n            }\n        }\n        else {\n            this.cancelUploadingFile(files, e, request);\n        }\n        var args = { e: e, operation: 'upload', file: this.updateStatus(files, this.localizedTexts('inProgress'), '3') };\n        this.trigger('progress', args);\n    };\n    /* istanbul ignore next */\n    Uploader.prototype.cancelUploadingFile = function (files, e, request, li) {\n        var _this = this;\n        if (files.statusCode === '5') {\n            var eventArgs = {\n                event: e,\n                fileData: files,\n                cancel: false\n            };\n            this.trigger('canceling', eventArgs, function (eventArgs) {\n                if (eventArgs.cancel) {\n                    files.statusCode = '3';\n                    if (!isNullOrUndefined(li)) {\n                        var spinnerTarget = li.querySelector('.' + ABORT_ICON);\n                        if (!isNullOrUndefined(spinnerTarget)) {\n                            hideSpinner(spinnerTarget);\n                            detach(li.querySelector('.e-spinner-pane'));\n                        }\n                    }\n                }\n                else {\n                    request.emitError = false;\n                    request.httpRequest.abort();\n                    var formData = new FormData();\n                    if (files.statusCode === '5') {\n                        var name_1 = _this.element.getAttribute('name');\n                        formData.append(name_1, files.name);\n                        formData.append('cancel-uploading', files.name);\n                        var ajax = new Ajax(_this.asyncSettings.removeUrl, 'POST', true, null);\n                        ajax.emitError = false;\n                        ajax.onLoad = function (e) { _this.removecanceledFile(e, files); return {}; };\n                        ajax.send(formData);\n                    }\n                }\n            });\n        }\n    };\n    Uploader.prototype.removecanceledFile = function (e, file) {\n        var liElement = this.getLiElement(file);\n        if (liElement.querySelector('.' + RETRY_ICON) || isNullOrUndefined(liElement.querySelector('.' + ABORT_ICON))) {\n            return;\n        }\n        this.updateStatus(file, this.localizedTexts('fileUploadCancel'), '5');\n        this.renderFailureState(e, file, liElement);\n        var spinnerTarget = liElement.querySelector('.' + REMOVE_ICON);\n        if (!isNullOrUndefined(liElement)) {\n            hideSpinner(spinnerTarget);\n            detach(liElement.querySelector('.e-spinner-pane'));\n        }\n        var requestResponse = e && e.currentTarget ? this.getResponse(e) : null;\n        var args = { event: e, response: requestResponse, operation: 'cancel', file: file };\n        this.trigger('success', args);\n    };\n    Uploader.prototype.renderFailureState = function (e, file, liElement) {\n        var _this = this;\n        this.updateProgressBarClasses(liElement, UPLOAD_FAILED);\n        this.removeProgressbar(liElement, 'failure');\n        if (!isNullOrUndefined(liElement.querySelector('.e-file-status'))) {\n            liElement.querySelector('.e-file-status').classList.add(UPLOAD_FAILED);\n        }\n        var deleteIcon = liElement.querySelector('.' + ABORT_ICON);\n        if (isNullOrUndefined(deleteIcon)) {\n            return;\n        }\n        deleteIcon.classList.remove(ABORT_ICON, UPLOAD_INPROGRESS);\n        deleteIcon.classList.add(REMOVE_ICON);\n        deleteIcon.setAttribute('title', this.localizedTexts('remove'));\n        this.pauseButton = this.createElement('span', { className: 'e-icons e-file-reload-btn', attrs: { 'tabindex': this.btnTabIndex } });\n        deleteIcon.parentElement.insertBefore(this.pauseButton, deleteIcon);\n        this.pauseButton.setAttribute('title', this.localizedTexts('retry'));\n        var retryElement = liElement.querySelector('.' + RETRY_ICON);\n        /* istanbul ignore next */\n        retryElement.addEventListener('click', function (e) { _this.reloadcanceledFile(e, file, liElement, false); }, false);\n    };\n    Uploader.prototype.reloadcanceledFile = function (e, file, liElement, custom) {\n        file.statusCode = '1';\n        file.status = this.localizedTexts('readyToUploadMessage');\n        if (!custom) {\n            liElement.querySelector('.' + STATUS).classList.remove(UPLOAD_FAILED);\n            if (!isNullOrUndefined(liElement.querySelector('.' + RETRY_ICON))) {\n                detach(liElement.querySelector('.' + RETRY_ICON));\n            }\n            this.pauseButton = null;\n        }\n        /* istanbul ignore next */\n        liElement.classList.add(RESTRICT_RETRY);\n        this.upload([file]);\n    };\n    /* istanbul ignore next */\n    Uploader.prototype.uploadComplete = function (e, file, customUI) {\n        var status = e.target;\n        if (status.readyState === 4 && status.status >= 200 && status.status <= 299) {\n            var li = this.getLiElement(file);\n            if (isNullOrUndefined(li) && (!customUI || isNullOrUndefined(customUI))) {\n                return;\n            }\n            if (!isNullOrUndefined(li)) {\n                this.updateProgressBarClasses(li, UPLOAD_SUCCESS);\n                this.removeProgressbar(li, 'success');\n                var iconEle = li.querySelector('.' + ABORT_ICON);\n                if (!isNullOrUndefined(iconEle)) {\n                    iconEle.classList.add(DELETE_ICON);\n                    iconEle.setAttribute('title', this.localizedTexts('delete'));\n                    iconEle.classList.remove(ABORT_ICON);\n                    iconEle.classList.remove(UPLOAD_INPROGRESS);\n                }\n            }\n            this.raiseSuccessEvent(e, file);\n        }\n        else {\n            this.uploadFailed(e, file);\n        }\n    };\n    Uploader.prototype.getResponse = function (e) {\n        // tslint:disable-next-line\n        var target = e.currentTarget;\n        var response = {\n            readyState: target.readyState,\n            statusCode: target.status,\n            statusText: target.statusText,\n            headers: target.getAllResponseHeaders(),\n            withCredentials: target.withCredentials\n        };\n        return response;\n    };\n    Uploader.prototype.raiseSuccessEvent = function (e, file) {\n        var _this = this;\n        var response = e && e.currentTarget ? this.getResponse(e) : null;\n        var statusMessage = this.localizedTexts('uploadSuccessMessage');\n        var args = {\n            e: e, response: response, operation: 'upload', file: this.updateStatus(file, statusMessage, '2', false), statusText: statusMessage\n        };\n        var liElement = this.getLiElement(file);\n        if (!isNullOrUndefined(liElement)) {\n            var spinnerEle = liElement.querySelector('.' + SPINNER_PANE);\n            if (!isNullOrUndefined(spinnerEle)) {\n                hideSpinner(liElement);\n                detach(spinnerEle);\n            }\n        }\n        this.trigger('success', args, function (args) {\n            // tslint:disable-next-line\n            _this.updateStatus(file, args.statusText, '2');\n            _this.uploadedFilesData.push(file);\n            _this.trigger('change', { file: _this.uploadedFilesData });\n            _this.checkActionButtonStatus();\n            if (_this.fileList.length > 0) {\n                if ((!(_this.getLiElement(file)).classList.contains(RESTRICT_RETRY))) {\n                    _this.uploadSequential();\n                    _this.checkActionComplete(true);\n                }\n                else {\n                    /* istanbul ignore next */\n                    (_this.getLiElement(file)).classList.remove(RESTRICT_RETRY);\n                }\n            }\n        });\n    };\n    Uploader.prototype.uploadFailed = function (e, file) {\n        var _this = this;\n        var li = this.getLiElement(file);\n        var response = e && e.currentTarget ? this.getResponse(e) : null;\n        var statusMessage = this.localizedTexts('uploadFailedMessage');\n        var args = {\n            e: e, response: response, operation: 'upload', file: this.updateStatus(file, statusMessage, '0', false), statusText: statusMessage\n        };\n        if (!isNullOrUndefined(li)) {\n            this.renderFailureState(e, file, li);\n        }\n        this.trigger('failure', args, function (args) {\n            // tslint:disable-next-line\n            _this.updateStatus(file, args.statusText, '0');\n            _this.checkActionButtonStatus();\n            _this.uploadSequential();\n            _this.checkActionComplete(true);\n        });\n    };\n    Uploader.prototype.uploadSequential = function () {\n        if (this.sequentialUpload) {\n            if (this.autoUpload) {\n                /* istanbul ignore next */\n                this.checkAutoUpload(this.filesData);\n            }\n            else {\n                this.uploadButtonClick();\n            }\n        }\n    };\n    Uploader.prototype.checkActionComplete = function (increment) {\n        increment ? ++this.actionCompleteCount : --this.actionCompleteCount;\n        this.raiseActionComplete();\n    };\n    Uploader.prototype.raiseActionComplete = function () {\n        if ((this.filesData.length === this.actionCompleteCount) && this.flag) {\n            this.flag = false;\n            var eventArgs = {\n                fileData: []\n            };\n            eventArgs.fileData = this.getSelectedFileStatus(this.selectedFiles);\n            this.trigger('actionComplete', eventArgs);\n        }\n    };\n    Uploader.prototype.getSelectedFileStatus = function (selectedFiles) {\n        var matchFiles = [];\n        var matchFilesIndex = 0;\n        for (var selectFileIndex = 0; selectFileIndex < selectedFiles.length; selectFileIndex++) {\n            var selectedFileData = selectedFiles[selectFileIndex];\n            for (var fileDataIndex = 0; fileDataIndex < this.filesData.length; fileDataIndex++) {\n                if (this.filesData[fileDataIndex].name === selectedFileData.name) {\n                    matchFiles[matchFilesIndex] = this.filesData[fileDataIndex];\n                    ++matchFilesIndex;\n                }\n            }\n        }\n        return matchFiles;\n    };\n    Uploader.prototype.updateProgressBarClasses = function (li, className) {\n        var progressBar = li.querySelector('.' + PROGRESSBAR);\n        if (!isNullOrUndefined(progressBar)) {\n            progressBar.classList.add(className);\n        }\n    };\n    Uploader.prototype.removeProgressbar = function (li, callType) {\n        var _this = this;\n        if (!isNullOrUndefined(li.querySelector('.' + PROGRESS_WRAPPER))) {\n            this.progressAnimation = new Animation({ duration: 1250 });\n            this.progressAnimation.animate(li.querySelector('.' + PROGRESS_WRAPPER), { name: 'FadeOut' });\n            this.progressAnimation.animate(li.querySelector('.' + PROGRESSBAR_TEXT), { name: 'FadeOut' });\n            setTimeout(function () { _this.animateProgressBar(li, callType); }, 750);\n        }\n    };\n    /* istanbul ignore next */\n    Uploader.prototype.animateProgressBar = function (li, callType) {\n        if (callType === 'success') {\n            li.classList.add(UPLOAD_SUCCESS);\n            if (!isNullOrUndefined(li.querySelector('.' + STATUS))) {\n                li.querySelector('.' + STATUS).classList.remove(UPLOAD_INPROGRESS);\n                this.progressAnimation.animate(li.querySelector('.' + STATUS), { name: 'FadeIn' });\n                li.querySelector('.' + STATUS).classList.add(UPLOAD_SUCCESS);\n            }\n        }\n        else {\n            if (!isNullOrUndefined(li.querySelector('.' + STATUS))) {\n                li.querySelector('.' + STATUS).classList.remove(UPLOAD_INPROGRESS);\n                this.progressAnimation.animate(li.querySelector('.' + STATUS), { name: 'FadeIn' });\n                li.querySelector('.' + STATUS).classList.add(UPLOAD_FAILED);\n            }\n        }\n        if (li.querySelector('.' + PROGRESS_WRAPPER)) {\n            detach(li.querySelector('.' + PROGRESS_WRAPPER));\n        }\n    };\n    Uploader.prototype.setExtensions = function (extensions) {\n        if (extensions !== '' && !isNullOrUndefined(extensions)) {\n            this.element.setAttribute('accept', extensions);\n        }\n        else {\n            this.element.removeAttribute('accept');\n        }\n    };\n    Uploader.prototype.templateComplier = function (uploadTemplate) {\n        if (uploadTemplate) {\n            var exception = void 0;\n            try {\n                if (document.querySelectorAll(uploadTemplate).length) {\n                    return compile(document.querySelector(uploadTemplate).innerHTML.trim());\n                }\n            }\n            catch (exception) {\n                return compile(uploadTemplate);\n            }\n        }\n        return undefined;\n    };\n    Uploader.prototype.setRTL = function () {\n        this.enableRtl ? addClass([this.uploadWrapper], RTL) : removeClass([this.uploadWrapper], RTL);\n    };\n    Uploader.prototype.localizedTexts = function (localeText) {\n        this.l10n.setLocale(this.locale);\n        return this.l10n.getConstant(localeText);\n    };\n    Uploader.prototype.setControlStatus = function () {\n        if (!this.enabled) {\n            this.uploadWrapper.classList.add(DISABLED);\n            this.element.setAttribute('disabled', 'disabled');\n            this.browseButton.setAttribute('disabled', 'disabled');\n            if (!isNullOrUndefined(this.clearButton)) {\n                this.clearButton.setAttribute('disabled', 'disabled');\n            }\n            if (!isNullOrUndefined(this.uploadButton)) {\n                this.uploadButton.setAttribute('disabled', 'disabled');\n            }\n        }\n        else {\n            if (this.uploadWrapper.classList.contains(DISABLED)) {\n                this.uploadWrapper.classList.remove(DISABLED);\n            }\n            if (!isNullOrUndefined(this.browseButton) && this.element.hasAttribute('disabled')) {\n                this.element.removeAttribute('disabled');\n                this.browseButton.removeAttribute('disabled');\n            }\n            if (!isNullOrUndefined(this.clearButton) && this.clearButton.hasAttribute('disabled')) {\n                this.clearButton.removeAttribute('disabled');\n            }\n            if (!isNullOrUndefined(this.uploadButton) && this.uploadButton.hasAttribute('disabled')) {\n                this.uploadButton.hasAttribute('disabled');\n            }\n        }\n    };\n    Uploader.prototype.checkHTMLAttributes = function (isDynamic) {\n        var attributes = isDynamic ? isNullOrUndefined(this.htmlAttributes) ? [] : Object.keys(this.htmlAttributes) :\n            ['accept', 'multiple', 'disabled'];\n        for (var _i = 0, attributes_1 = attributes; _i < attributes_1.length; _i++) {\n            var prop = attributes_1[_i];\n            if (!isNullOrUndefined(this.element.getAttribute(prop))) {\n                switch (prop) {\n                    case 'accept':\n                        // tslint:disable-next-line\n                        if ((isNullOrUndefined(this.uploaderOptions) || (this.uploaderOptions['allowedExtensions'] === undefined))\n                            || isDynamic) {\n                            this.setProperties({ allowedExtensions: this.element.getAttribute('accept') }, !isDynamic);\n                            this.initialAttr.accept = this.allowedExtensions;\n                        }\n                        break;\n                    case 'multiple':\n                        // tslint:disable-next-line\n                        if ((isNullOrUndefined(this.uploaderOptions) || (this.uploaderOptions['multiple'] === undefined)) || isDynamic) {\n                            var isMutiple = this.element.getAttribute(prop) === 'multiple' ||\n                                this.element.getAttribute(prop) === '' || this.element.getAttribute(prop) === 'true' ? true : false;\n                            this.setProperties({ multiple: isMutiple }, !isDynamic);\n                            this.initialAttr.multiple = true;\n                        }\n                        break;\n                    case 'disabled':\n                        // tslint:disable-next-line\n                        if ((isNullOrUndefined(this.uploaderOptions) || (this.uploaderOptions['enabled'] === undefined)) || isDynamic) {\n                            var isDisabled = this.element.getAttribute(prop) === 'disabled' ||\n                                this.element.getAttribute(prop) === '' || this.element.getAttribute(prop) === 'true' ? false : true;\n                            this.setProperties({ enabled: isDisabled }, !isDynamic);\n                            this.initialAttr.disabled = true;\n                        }\n                }\n            }\n        }\n    };\n    Uploader.prototype.chunkUpload = function (file, custom, fileIndex) {\n        var start = 0;\n        var end = Math.min(this.asyncSettings.chunkSize, file.size);\n        var index = 0;\n        var blob = file.rawFile.slice(start, end);\n        var metaData = { chunkIndex: index, blob: blob, file: file, start: start, end: end, retryCount: 0, request: null };\n        this.sendRequest(file, metaData, custom, fileIndex);\n    };\n    Uploader.prototype.sendRequest = function (file, metaData, custom, fileIndex) {\n        var _this = this;\n        var formData = new FormData();\n        var cloneFile;\n        var blob = file.rawFile.slice(metaData.start, metaData.end);\n        formData.append('chunkFile', blob, file.name);\n        formData.append('chunk-index', metaData.chunkIndex.toString());\n        formData.append('chunkIndex', metaData.chunkIndex.toString());\n        var totalChunk = Math.max(Math.ceil(file.size / this.asyncSettings.chunkSize), 1);\n        formData.append('total-chunk', totalChunk.toString());\n        formData.append('totalChunk', totalChunk.toString());\n        var ajax = new Ajax({ url: this.asyncSettings.saveUrl, type: 'POST', async: true, contentType: null });\n        ajax.emitError = false;\n        ajax.onLoad = function (e) { _this.chunkUploadComplete(e, metaData, custom); return {}; };\n        ajax.onUploadProgress = function (e) {\n            _this.chunkUploadInProgress(e, metaData, custom);\n            return {};\n        };\n        var eventArgs = {\n            fileData: file,\n            customFormData: [],\n            cancel: false,\n            chunkSize: this.asyncSettings.chunkSize === 0 ? null : this.asyncSettings.chunkSize\n        };\n        ajax.beforeSend = function (e) {\n            eventArgs.currentRequest = ajax.httpRequest;\n            eventArgs.currentChunkIndex = metaData.chunkIndex;\n            /* istanbul ignore next */\n            if (isBlazor()) {\n                if (_this.currentRequestHeader) {\n                    _this.updateCustomheader(ajax.httpRequest, _this.currentRequestHeader);\n                }\n                if (_this.customFormDatas) {\n                    _this.updateFormData(formData, _this.customFormDatas);\n                }\n            }\n            if (eventArgs.currentChunkIndex === 0) {\n                // This event is currently not required but to avoid breaking changes for previous customer, we have included.\n                _this.trigger('uploading', eventArgs, function (eventArgs) {\n                    _this.uploadingEventCallback(formData, eventArgs, e, file);\n                });\n            }\n            else {\n                _this.trigger('chunkUploading', eventArgs, function (eventArgs) {\n                    _this.uploadingEventCallback(formData, eventArgs, e, file);\n                });\n            }\n        };\n        /* istanbul ignore next */\n        ajax.onError = function (e) { _this.chunkUploadFailed(e, metaData, custom); return {}; };\n        ajax.send(formData);\n        metaData.request = ajax;\n    };\n    Uploader.prototype.uploadingEventCallback = function (formData, eventArgs, e, file) {\n        if (eventArgs.cancel) {\n            this.eventCancelByArgs(e, eventArgs, file);\n        }\n        else {\n            this.updateFormData(formData, eventArgs.customFormData);\n        }\n    };\n    Uploader.prototype.eventCancelByArgs = function (e, eventArgs, file) {\n        var _this = this;\n        e.cancel = true;\n        if (eventArgs.fileData.statusCode === '5') {\n            return;\n        }\n        var liElement = this.getLiElement(eventArgs.fileData);\n        liElement.querySelector('.' + STATUS).innerHTML = this.localizedTexts('fileUploadCancel');\n        liElement.querySelector('.' + STATUS).classList.add(UPLOAD_FAILED);\n        eventArgs.fileData.statusCode = '5';\n        eventArgs.fileData.status = this.localizedTexts('fileUploadCancel');\n        this.pauseButton = this.createElement('span', { className: 'e-icons e-file-reload-btn', attrs: { 'tabindex': this.btnTabIndex } });\n        var removeIcon = liElement.querySelector('.' + REMOVE_ICON);\n        removeIcon.parentElement.insertBefore(this.pauseButton, removeIcon);\n        this.pauseButton.setAttribute('title', this.localizedTexts('retry'));\n        /* istanbul ignore next */\n        this.pauseButton.addEventListener('click', function (e) { _this.reloadcanceledFile(e, file, liElement); }, false);\n        this.checkActionButtonStatus();\n    };\n    Uploader.prototype.checkChunkUpload = function () {\n        return (this.asyncSettings.chunkSize <= 0 || isNullOrUndefined(this.asyncSettings.chunkSize)) ? false : true;\n    };\n    Uploader.prototype.chunkUploadComplete = function (e, metaData, custom) {\n        var _this = this;\n        var response = e.target;\n        var liElement;\n        if (response.readyState === 4 && response.status >= 200 && response.status < 300) {\n            var requestResponse = e && e.currentTarget ? this.getResponse(e) : null;\n            var totalChunk = Math.max(Math.ceil(metaData.file.size / this.asyncSettings.chunkSize), 1);\n            var eventArgs = {\n                event: e,\n                file: metaData.file,\n                chunkIndex: metaData.chunkIndex,\n                totalChunk: totalChunk,\n                chunkSize: this.asyncSettings.chunkSize,\n                response: requestResponse\n            };\n            this.trigger('chunkSuccess', eventArgs);\n            if (isNullOrUndefined(custom) || !custom) {\n                liElement = this.getLiElement(metaData.file);\n            }\n            this.updateMetaData(metaData);\n            if (metaData.end === metaData.file.size) {\n                metaData.file.statusCode = '3';\n            }\n            if (metaData.file.statusCode === '5') {\n                var eventArgs_1 = { event: e, fileData: metaData.file, cancel: false };\n                this.trigger('canceling', eventArgs_1, function (eventArgs) {\n                    /* istanbul ignore next */\n                    if (eventArgs.cancel) {\n                        metaData.file.statusCode = '3';\n                        var spinnerTarget = liElement.querySelector('.' + ABORT_ICON);\n                        if (!isNullOrUndefined(liElement) && !isNullOrUndefined(spinnerTarget)) {\n                            hideSpinner(spinnerTarget);\n                            detach(liElement.querySelector('.e-spinner-pane'));\n                        }\n                        _this.sendNextRequest(metaData);\n                    }\n                    else {\n                        metaData.request.emitError = false;\n                        response.abort();\n                        var formData = new FormData();\n                        var name_2 = _this.element.getAttribute('name');\n                        formData.append(name_2, metaData.file.name);\n                        formData.append('cancel-uploading', metaData.file.name);\n                        formData.append('cancelUploading', metaData.file.name);\n                        var ajax = new Ajax(_this.asyncSettings.removeUrl, 'POST', true, null);\n                        ajax.emitError = false;\n                        ajax.onLoad = function (e) { _this.removeChunkFile(e, metaData, custom); return {}; };\n                        ajax.send(formData);\n                    }\n                });\n            }\n            else {\n                if ((totalChunk - 1) === metaData.chunkIndex && totalChunk > metaData.chunkIndex) {\n                    var index = this.pausedData.indexOf(metaData);\n                    if (index >= 0) {\n                        this.pausedData.splice(index, 1);\n                    }\n                    if (isNullOrUndefined(this.template) && (isNullOrUndefined(custom) || !custom) && liElement) {\n                        if (liElement) {\n                            detach(liElement.querySelector('.' + PAUSE_UPLOAD));\n                        }\n                        this.removeChunkProgressBar(metaData);\n                    }\n                    this.raiseSuccessEvent(e, metaData.file);\n                    return;\n                }\n                this.sendNextRequest(metaData);\n            }\n        }\n        else {\n            this.chunkUploadFailed(e, metaData);\n        }\n    };\n    Uploader.prototype.sendNextRequest = function (metaData) {\n        metaData.start = metaData.end;\n        metaData.end += this.asyncSettings.chunkSize;\n        metaData.end = Math.min(metaData.end, metaData.file.size);\n        metaData.chunkIndex += 1;\n        this.sendRequest(metaData.file, metaData);\n    };\n    Uploader.prototype.removeChunkFile = function (e, metaData, custom) {\n        if (isNullOrUndefined(this.template) && (isNullOrUndefined(custom) && !custom)) {\n            var liElement = this.getLiElement(metaData.file);\n            var deleteIcon = liElement.querySelector('.' + ABORT_ICON);\n            var spinnerTarget = deleteIcon;\n            this.updateStatus(metaData.file, this.localizedTexts('fileUploadCancel'), '5');\n            this.updateProgressBarClasses(liElement, UPLOAD_FAILED);\n            this.removeProgressbar(liElement, 'failure');\n            deleteIcon.classList.remove(ABORT_ICON);\n            deleteIcon.classList.add(REMOVE_ICON);\n            deleteIcon.setAttribute('title', this.localizedTexts('remove'));\n            var pauseIcon = liElement.querySelector('.' + PAUSE_UPLOAD);\n            pauseIcon.classList.add(RETRY_ICON);\n            pauseIcon.classList.remove(PAUSE_UPLOAD);\n            pauseIcon.setAttribute('title', this.localizedTexts('retry'));\n            if (!isNullOrUndefined(liElement) && !isNullOrUndefined(deleteIcon)) {\n                hideSpinner(spinnerTarget);\n                detach(liElement.querySelector('.e-spinner-pane'));\n            }\n        }\n    };\n    Uploader.prototype.pauseUpload = function (metaData, e, custom) {\n        metaData.file.statusCode = '4';\n        metaData.file.status = this.localizedTexts('pause');\n        this.updateMetaData(metaData);\n        var eventArgs = {\n            event: e ? e : null,\n            file: metaData.file,\n            chunkIndex: metaData.chunkIndex,\n            chunkCount: Math.round(metaData.file.size / this.asyncSettings.chunkSize),\n            chunkSize: this.asyncSettings.chunkSize\n        };\n        this.abortUpload(metaData, custom, eventArgs);\n    };\n    Uploader.prototype.abortUpload = function (metaData, custom, eventArgs) {\n        metaData.request.emitError = false;\n        metaData.request.httpRequest.abort();\n        var liElement = this.getLiElement(metaData.file);\n        if (isNullOrUndefined(this.template) && (isNullOrUndefined(custom) || !custom)) {\n            var targetElement = liElement.querySelector('.' + PAUSE_UPLOAD);\n            targetElement.classList.remove(PAUSE_UPLOAD);\n            targetElement.classList.add(RESUME_UPLOAD);\n            targetElement.setAttribute('title', this.localizedTexts('resume'));\n            targetElement.nextElementSibling.classList.add(REMOVE_ICON);\n            targetElement.nextElementSibling.classList.remove(ABORT_ICON);\n            targetElement.nextElementSibling.setAttribute('title', this.localizedTexts('remove'));\n        }\n        for (var i = 0; i < this.pausedData.length; i++) {\n            if (this.pausedData[i].file.name === metaData.file.name) {\n                this.pausedData.splice(i, 1);\n            }\n        }\n        this.pausedData.push(metaData);\n        this.trigger('pausing', eventArgs);\n    };\n    Uploader.prototype.resumeUpload = function (metaData, e, custom) {\n        var liElement = this.getLiElement(metaData.file);\n        var targetElement;\n        if (!isNullOrUndefined(liElement)) {\n            targetElement = liElement.querySelector('.' + RESUME_UPLOAD);\n        }\n        if (!isNullOrUndefined(targetElement) && (isNullOrUndefined(custom) || !custom)) {\n            targetElement.classList.remove(RESUME_UPLOAD);\n            targetElement.classList.add(PAUSE_UPLOAD);\n            targetElement.setAttribute('title', this.localizedTexts('pause'));\n            targetElement.nextElementSibling.classList.remove(REMOVE_ICON);\n            targetElement.nextElementSibling.classList.add(ABORT_ICON);\n            targetElement.nextElementSibling.setAttribute('title', this.localizedTexts('abort'));\n        }\n        metaData.file.status = this.localizedTexts('inProgress');\n        metaData.file.statusCode = '3';\n        this.updateMetaData(metaData);\n        var eventArgs = {\n            event: e ? e : null,\n            file: metaData.file,\n            chunkIndex: metaData.chunkIndex,\n            chunkCount: Math.round(metaData.file.size / this.asyncSettings.chunkSize),\n            chunkSize: this.asyncSettings.chunkSize\n        };\n        this.trigger('resuming', eventArgs);\n        for (var i = 0; i < this.pausedData.length; i++) {\n            if (this.pausedData[i].end === this.pausedData[i].file.size) {\n                this.chunkUploadComplete(e, metaData, custom);\n            }\n            else {\n                if (this.pausedData[i].file.name === metaData.file.name) {\n                    this.pausedData[i].start = this.pausedData[i].end;\n                    this.pausedData[i].end = this.pausedData[i].end + this.asyncSettings.chunkSize;\n                    this.pausedData[i].end = Math.min(this.pausedData[i].end, this.pausedData[i].file.size);\n                    this.pausedData[i].chunkIndex = this.pausedData[i].chunkIndex + 1;\n                    this.sendRequest(this.pausedData[i].file, this.pausedData[i], custom);\n                }\n            }\n        }\n    };\n    Uploader.prototype.updateMetaData = function (metaData) {\n        if (this.uploadMetaData.indexOf(metaData) === -1) {\n            this.uploadMetaData.push(metaData);\n        }\n        else {\n            this.uploadMetaData.splice(this.uploadMetaData.indexOf(metaData), 1);\n            this.uploadMetaData.push(metaData);\n        }\n    };\n    Uploader.prototype.removeChunkProgressBar = function (metaData) {\n        var liElement = this.getLiElement(metaData.file);\n        if (!isNullOrUndefined(liElement)) {\n            this.updateProgressBarClasses(liElement, UPLOAD_SUCCESS);\n            this.removeProgressbar(liElement, 'success');\n            var cancelButton = liElement.querySelector('.' + ABORT_ICON);\n            if (!isNullOrUndefined(cancelButton)) {\n                cancelButton.classList.add(DELETE_ICON);\n                cancelButton.setAttribute('title', this.localizedTexts('delete'));\n                cancelButton.classList.remove(ABORT_ICON, UPLOAD_INPROGRESS);\n            }\n        }\n    };\n    Uploader.prototype.chunkUploadFailed = function (e, metaData, custom) {\n        var _this = this;\n        var chunkCount = Math.max(Math.ceil(metaData.file.size / this.asyncSettings.chunkSize), 1);\n        var liElement;\n        if (isNullOrUndefined(this.template) && (isNullOrUndefined(custom) || !custom)) {\n            liElement = this.getLiElement(metaData.file);\n        }\n        var requestResponse = e && e.currentTarget ? this.getResponse(e) : null;\n        var eventArgs = {\n            event: e,\n            file: metaData.file,\n            chunkIndex: metaData.chunkIndex,\n            totalChunk: chunkCount,\n            chunkSize: this.asyncSettings.chunkSize,\n            cancel: false,\n            response: requestResponse\n        };\n        this.trigger('chunkFailure', eventArgs, function (eventArgs) {\n            // To prevent triggering of failure event\n            // tslint:disable-next-line\n            if (!eventArgs.cancel) {\n                if (metaData.retryCount < _this.asyncSettings.retryCount) {\n                    setTimeout(function () { _this.retryRequest(liElement, metaData, custom); }, _this.asyncSettings.retryAfterDelay);\n                }\n                else {\n                    if (!isNullOrUndefined(liElement)) {\n                        var pauseButton = liElement.querySelector('.' + PAUSE_UPLOAD) ?\n                            liElement.querySelector('.' + PAUSE_UPLOAD) : liElement.querySelector('.' + RESUME_UPLOAD);\n                        if (!isNullOrUndefined(pauseButton)) {\n                            pauseButton.classList.add(RETRY_ICON);\n                            pauseButton.classList.remove(PAUSE_UPLOAD, RESUME_UPLOAD);\n                        }\n                        _this.updateProgressBarClasses(liElement, UPLOAD_FAILED);\n                        _this.removeProgressbar(liElement, 'failure');\n                        liElement.querySelector('.e-icons').classList.remove(UPLOAD_INPROGRESS);\n                        var iconElement = liElement.querySelector('.' + ABORT_ICON) ?\n                            liElement.querySelector('.' + ABORT_ICON) : liElement.querySelector('.' + REMOVE_ICON);\n                        iconElement.classList.remove(ABORT_ICON);\n                        if (!isNullOrUndefined(liElement.querySelector('.' + PAUSE_UPLOAD))) {\n                            detach(liElement.querySelector('.' + PAUSE_UPLOAD));\n                        }\n                        if (metaData.start > 0) {\n                            iconElement.classList.add(DELETE_ICON);\n                            iconElement.setAttribute('title', _this.localizedTexts('delete'));\n                        }\n                        else {\n                            iconElement.classList.add(REMOVE_ICON);\n                            iconElement.setAttribute('title', _this.localizedTexts('remove'));\n                        }\n                    }\n                    metaData.retryCount = 0;\n                    var file_1 = metaData.file;\n                    var failureMessage = _this.localizedTexts('uploadFailedMessage');\n                    var args = {\n                        e: e, response: requestResponse,\n                        operation: 'upload',\n                        file: _this.updateStatus(file_1, failureMessage, '0', false),\n                        statusText: failureMessage\n                    };\n                    _this.trigger('failure', args, function (args) {\n                        // tslint:disable-next-line\n                        _this.updateStatus(file_1, args.statusText, '0');\n                        _this.uploadSequential();\n                        _this.checkActionComplete(true);\n                    });\n                }\n            }\n        });\n    };\n    Uploader.prototype.retryRequest = function (liElement, metaData, custom) {\n        if (isNullOrUndefined(this.template) && (isNullOrUndefined(custom) || !custom) && liElement) {\n            this.updateProgressBarClasses(liElement, UPLOAD_FAILED);\n        }\n        metaData.retryCount += 1;\n        this.sendRequest(metaData.file, metaData);\n    };\n    Uploader.prototype.checkPausePlayAction = function (e) {\n        var targetElement = e.target;\n        var selectedElement = e.target.parentElement;\n        var index = this.fileList.indexOf(selectedElement);\n        var fileData = this.filesData[index];\n        var metaData = this.getCurrentMetaData(fileData);\n        if (targetElement.classList.contains(PAUSE_UPLOAD)) {\n            /* istanbul ignore next */\n            this.pauseUpload(metaData, e);\n        }\n        else if (targetElement.classList.contains(RESUME_UPLOAD)) {\n            /* istanbul ignore next */\n            this.resumeUpload(metaData, e);\n        }\n        else if (targetElement.classList.contains(RETRY_ICON)) {\n            if (metaData.file.status === this.localizedTexts('fileUploadCancel')) {\n                this.retryUpload(metaData, false);\n            }\n            else {\n                this.retryUpload(metaData, true);\n            }\n        }\n    };\n    Uploader.prototype.retryUpload = function (metaData, fromcanceledStage) {\n        if (fromcanceledStage) {\n            metaData.end = metaData.end + this.asyncSettings.chunkSize;\n            metaData.start = metaData.start + this.asyncSettings.chunkSize;\n            this.sendRequest(metaData.file, metaData);\n        }\n        else {\n            metaData.file.statusCode = '1';\n            metaData.file.status = this.localizedTexts('readyToUploadMessage');\n            this.chunkUpload(metaData.file);\n        }\n        /* istanbul ignore next */\n        (this.getLiElement(metaData.file)).classList.add(RESTRICT_RETRY);\n    };\n    Uploader.prototype.chunkUploadInProgress = function (e, metaData, custom) {\n        var _this = this;\n        if (metaData.file.statusCode === '4') {\n            return;\n        }\n        if (metaData.file.statusCode !== '4' && metaData.file.statusCode !== '5') {\n            metaData.file.statusCode = '3';\n            metaData.file.status = this.localizedTexts('inProgress');\n        }\n        this.updateMetaData(metaData);\n        var liElement = this.getLiElement(metaData.file);\n        if (isNullOrUndefined(liElement)) {\n            return;\n        }\n        var target;\n        var retryElement = liElement.querySelector('.' + RETRY_ICON);\n        if (!isNullOrUndefined(retryElement)) {\n            retryElement.classList.add(PAUSE_UPLOAD);\n            retryElement.setAttribute('title', this.localizedTexts('pause'));\n            retryElement.classList.remove(RETRY_ICON);\n        }\n        if (!isNullOrUndefined(liElement)) {\n            if (!(liElement.querySelectorAll('.' + PROGRESS_WRAPPER).length > 0)) {\n                var statusElement = liElement.querySelector('.' + STATUS);\n                if (isNullOrUndefined(this.template)) {\n                    statusElement.classList.add(UPLOAD_INPROGRESS);\n                    statusElement.classList.remove(UPLOAD_FAILED);\n                    this.createProgressBar(liElement);\n                    this.updateProgressBarClasses(liElement, UPLOAD_INPROGRESS);\n                }\n                var clearIcon = liElement.querySelector('.' + REMOVE_ICON) ? liElement.querySelector('.' + REMOVE_ICON) :\n                    liElement.querySelector('.' + DELETE_ICON);\n                if (!isNullOrUndefined(clearIcon)) {\n                    clearIcon.classList.add(ABORT_ICON);\n                    clearIcon.setAttribute('title', this.localizedTexts('abort'));\n                    clearIcon.classList.remove(REMOVE_ICON);\n                }\n            }\n            if (!isNaN(Math.round((e.loaded / e.total) * 100)) && isNullOrUndefined(this.template) && metaData.file.statusCode !== '4') {\n                var loadedSize = (metaData.chunkIndex * this.asyncSettings.chunkSize);\n                var value = Math.min((((loadedSize + e.loaded) / metaData.file.size) * 100), 100);\n                this.changeProgressValue(liElement, Math.round(value).toString() + '%');\n            }\n            if (metaData.chunkIndex === 0) {\n                this.checkActionButtonStatus();\n            }\n        }\n        if (isNullOrUndefined(liElement.querySelector('.' + PAUSE_UPLOAD)) && isNullOrUndefined(this.template)) {\n            this.pauseButton = this.createElement('span', { className: 'e-icons e-file-pause-btn', attrs: { 'tabindex': this.btnTabIndex } });\n            if (this.browserName === 'msie') {\n                this.pauseButton.classList.add('e-msie');\n            }\n            var abortIcon = liElement.querySelector('.' + ABORT_ICON);\n            abortIcon.parentElement.insertBefore(this.pauseButton, abortIcon);\n            this.pauseButton.setAttribute('title', this.localizedTexts('pause'));\n            this.pauseButton.addEventListener('click', function (e) { _this.checkPausePlayAction(e); }, false);\n        }\n    };\n    /**\n     * It is used to convert bytes value into kilobytes or megabytes depending on the size based\n     * on [binary prefix](https://en.wikipedia.org/wiki/Binary_prefix).\n     * @param { number } bytes - specifies the file size in bytes.\n     * @returns string\n     */\n    Uploader.prototype.bytesToSize = function (bytes) {\n        var i = -1;\n        var size;\n        if (!bytes) {\n            return '0.0 KB';\n        }\n        do {\n            bytes = bytes / 1024;\n            i++;\n        } while (bytes > 99);\n        if (i >= 2) {\n            bytes = bytes * 1024;\n            i = 1;\n        }\n        return Math.max(bytes, 0).toFixed(1) + ' ' + ['KB', 'MB'][i];\n    };\n    /**\n     * Allows you to sort the file data alphabetically based on its file name clearly.\n     * @param { FileList } filesData - specifies the files data for upload.\n     * @returns File[]\n     */\n    /* istanbul ignore next */\n    Uploader.prototype.sortFileList = function (filesData) {\n        filesData = filesData ? filesData : this.sortFilesList;\n        var files = filesData;\n        var fileNames = [];\n        for (var i = 0; i < files.length; i++) {\n            fileNames.push(files[i].name);\n        }\n        var sortedFileNames = fileNames.sort();\n        var sortedFilesData = [];\n        var index = 0;\n        for (var _i = 0, sortedFileNames_1 = sortedFileNames; _i < sortedFileNames_1.length; _i++) {\n            var name_3 = sortedFileNames_1[_i];\n            for (var i = 0; i < files.length; i++) {\n                if (name_3 === files[i].name) {\n                    sortedFilesData.push(files[i]);\n                }\n            }\n        }\n        return sortedFilesData;\n    };\n    /**\n     * Removes the component from the DOM and detaches all its related event handlers. Also it removes the attributes and classes.\n     * @method destroy\n     * @return {void}.\n     */\n    Uploader.prototype.destroy = function () {\n        this.element.value = null;\n        this.clearAll();\n        this.unWireEvents();\n        this.unBindDropEvents();\n        if (this.multiple) {\n            this.element.removeAttribute('multiple');\n        }\n        if (!this.enabled) {\n            this.element.removeAttribute('disabled');\n        }\n        this.element.removeAttribute('accept');\n        this.setInitialAttributes();\n        var attributes = ['aria-label', 'directory', 'webkitdirectory', 'tabindex'];\n        for (var _i = 0, attributes_2 = attributes; _i < attributes_2.length; _i++) {\n            var key = attributes_2[_i];\n            this.element.removeAttribute(key);\n        }\n        if (!isNullOrUndefined(this.uploadWrapper)) {\n            this.uploadWrapper.parentElement.appendChild(this.element);\n            detach(this.uploadWrapper);\n        }\n        this.uploadWrapper = null;\n        _super.prototype.destroy.call(this);\n    };\n    /**\n     * Allows you to call the upload process manually by calling save URL action.\n     * To process the selected files (added in upload queue), pass an empty argument otherwise\n     * upload the specific file based on its argument.\n     * @param { FileInfo | FileInfo[] } files - specifies the files data for upload.\n     * @returns void\n     */\n    Uploader.prototype.upload = function (files, custom) {\n        var _this = this;\n        files = files ? files : this.filesData;\n        var uploadFiles = this.getFilesInArray(files);\n        var eventArgs = {\n            customFormData: [],\n            currentRequest: null\n        };\n        this.trigger('beforeUpload', eventArgs, function (eventArgs) {\n            if (isBlazor()) {\n                _this.currentRequestHeader = eventArgs.currentRequest ? eventArgs.currentRequest : _this.currentRequestHeader;\n                _this.customFormDatas = (eventArgs.customFormData && eventArgs.customFormData.length > 0) ?\n                    eventArgs.customFormData : _this.customFormDatas;\n            }\n            _this.uploadFiles(uploadFiles, custom);\n        });\n    };\n    Uploader.prototype.getFilesInArray = function (files) {\n        var uploadFiles = [];\n        if (files instanceof Array) {\n            uploadFiles = files;\n        }\n        else {\n            uploadFiles.push(files);\n        }\n        return uploadFiles;\n    };\n    Uploader.prototype.uploadFiles = function (files, custom) {\n        var _this = this;\n        var selectedFiles = [];\n        if (this.asyncSettings.saveUrl === '' || isNullOrUndefined(this.asyncSettings.saveUrl)) {\n            return;\n        }\n        if (!custom || isNullOrUndefined(custom)) {\n            if (!this.multiple) {\n                var file = [];\n                file.push(files[0]);\n                selectedFiles = this.filterfileList(file);\n            }\n            else {\n                selectedFiles = this.filterfileList(files);\n            }\n        }\n        else {\n            selectedFiles = files;\n        }\n        var _loop_5 = function (i) {\n            if (isBlazor() && !this_3.checkChunkUpload()) {\n                /* istanbul ignore next */\n                /* tslint:disable */\n                this_3.getBase64(selectedFiles[i].rawFile).then(function (data) {\n                    _this.base64String.push(data);\n                    _this.uploadFilesRequest(selectedFiles, i, custom);\n                });\n                /* tslint:disable */\n            }\n            else {\n                this_3.uploadFilesRequest(selectedFiles, i, custom);\n            }\n        };\n        var this_3 = this;\n        for (var i = 0; i < selectedFiles.length; i++) {\n            _loop_5(i);\n        }\n    };\n    Uploader.prototype.uploadFilesRequest = function (selectedFiles, i, custom) {\n        var _this = this;\n        var cloneFiles = [];\n        var chunkEnabled = this.checkChunkUpload();\n        var ajax = new Ajax(this.asyncSettings.saveUrl, 'POST', true, null);\n        ajax.emitError = false;\n        var getFileData;\n        /* istanbul ignore next */\n        if (isBlazor()) {\n            getFileData = selectedFiles.slice(0);\n            cloneFiles.push(getFileData[i].rawFile);\n        }\n        var eventArgs = {\n            fileData: (isBlazor()) ? getFileData[i] : selectedFiles[i],\n            customFormData: [],\n            cancel: false\n        };\n        var formData = new FormData();\n        ajax.beforeSend = function (e) {\n            eventArgs.currentRequest = ajax.httpRequest;\n            /* istanbul ignore next */\n            if (isBlazor()) {\n                eventArgs.fileData.rawFile = !chunkEnabled ? _this.base64String[i] : eventArgs.fileData.rawFile;\n                if (_this.currentRequestHeader) {\n                    _this.updateCustomheader(ajax.httpRequest, _this.currentRequestHeader);\n                }\n                if (_this.customFormDatas) {\n                    _this.updateFormData(formData, _this.customFormDatas);\n                }\n            }\n            _this.trigger('uploading', eventArgs, function (eventArgs) {\n                /* istanbul ignore next */\n                if (isBlazor() && !chunkEnabled) {\n                    selectedFiles[i].rawFile = eventArgs.fileData.rawFile = cloneFiles[i];\n                }\n                if (eventArgs.cancel) {\n                    _this.eventCancelByArgs(e, eventArgs, selectedFiles[i]);\n                }\n                _this.updateFormData(formData, eventArgs.customFormData);\n            });\n        };\n        if (selectedFiles[i].statusCode === '1') {\n            var name_4 = this.element.getAttribute('name');\n            formData.append(name_4, selectedFiles[i].rawFile, selectedFiles[i].name);\n            if (chunkEnabled && selectedFiles[i].size > this.asyncSettings.chunkSize) {\n                this.chunkUpload(selectedFiles[i], custom, i);\n            }\n            else {\n                ajax.onLoad = function (e) {\n                    if (eventArgs.cancel && isBlazor()) {\n                        return {};\n                    }\n                    else {\n                        _this.uploadComplete(e, selectedFiles[i], custom);\n                        return {};\n                    }\n                };\n                ajax.onUploadProgress = function (e) {\n                    if (eventArgs.cancel && isBlazor()) {\n                        return {};\n                    }\n                    else {\n                        _this.uploadInProgress(e, selectedFiles[i], custom, ajax);\n                        return {};\n                    }\n                };\n                /* istanbul ignore next */\n                ajax.onError = function (e) { _this.uploadFailed(e, selectedFiles[i]); return {}; };\n                ajax.send(formData);\n            }\n        }\n    };\n    Uploader.prototype.spliceFiles = function (liIndex) {\n        var liElement = this.fileList[liIndex];\n        var allFiles = this.getFilesData();\n        var nameElements = +liElement.getAttribute('data-files-count');\n        var startIndex = 0;\n        for (var i = 0; i < liIndex; i++) {\n            startIndex += (+this.fileList[i].getAttribute('data-files-count'));\n        }\n        var endIndex = (startIndex + nameElements) - 1;\n        for (var j = endIndex; j >= startIndex; j--) {\n            allFiles.splice(j, 1);\n        }\n    };\n    /**\n     * Remove the uploaded file from server manually by calling the remove URL action.\n     * If you pass an empty argument to this method, the complete file list can be cleared,\n     * otherwise remove the specific file based on its argument (“file_data”).\n     * @param { FileInfo | FileInfo[] } fileData - specifies the files data to remove from file list/server.\n     * @param { boolean } customTemplate - Set true if the component rendering with customize template.\n     * @param { boolean } removeDirectly - Set true if files remove without removing event.\n     * @param { boolean } postRawFile - Set false, to post file name only to the remove action.\n     * @returns void\n     */\n    Uploader.prototype.remove = function (fileData, customTemplate, removeDirectly, postRawFile, args) {\n        var _this = this;\n        if (isNullOrUndefined(postRawFile)) {\n            postRawFile = true;\n        }\n        var eventArgs = {\n            event: args,\n            cancel: false,\n            filesData: [],\n            customFormData: [],\n            postRawFile: postRawFile,\n            currentRequest: null\n        };\n        var beforeEventArgs = {\n            cancel: false,\n            customFormData: [],\n            currentRequest: null\n        };\n        this.trigger('beforeRemove', beforeEventArgs, function (beforeEventArgs) {\n            if (!beforeEventArgs.cancel) {\n                if (isBlazor()) {\n                    _this.currentRequestHeader = beforeEventArgs.currentRequest;\n                    _this.customFormDatas = beforeEventArgs.customFormData;\n                }\n                var index = void 0;\n                if (_this.isFormUpload()) {\n                    eventArgs.filesData = fileData;\n                    _this.trigger('removing', eventArgs, function (eventArgs) {\n                        if (!eventArgs.cancel) {\n                            var removingFiles = _this.getFilesInArray(fileData);\n                            var isLiRemoved = false;\n                            var liIndex = void 0;\n                            for (var _i = 0, removingFiles_1 = removingFiles; _i < removingFiles_1.length; _i++) {\n                                var data = removingFiles_1[_i];\n                                if (!isLiRemoved) {\n                                    liIndex = _this.fileList.indexOf(data.list);\n                                }\n                                if (liIndex > -1) {\n                                    var inputElement = !isNullOrUndefined(data.input) ? data.input : null;\n                                    if (inputElement) {\n                                        detach(inputElement);\n                                    }\n                                    _this.spliceFiles(liIndex);\n                                    detach(_this.fileList[liIndex]);\n                                    _this.fileList.splice(liIndex, 1);\n                                    isLiRemoved = true;\n                                    liIndex = -1;\n                                }\n                            }\n                        }\n                    });\n                }\n                else if (_this.isForm && (isNullOrUndefined(_this.asyncSettings.removeUrl) || _this.asyncSettings.removeUrl === '')) {\n                    eventArgs.filesData = _this.getFilesData();\n                    _this.trigger('removing', eventArgs, function (eventArgs) {\n                        if (!eventArgs.cancel) {\n                            _this.clearAll();\n                        }\n                    });\n                }\n                else {\n                    var removeFiles = [];\n                    fileData = !isNullOrUndefined(fileData) ? fileData : _this.filesData;\n                    if (fileData instanceof Array) {\n                        removeFiles = fileData;\n                    }\n                    else {\n                        removeFiles.push(fileData);\n                    }\n                    eventArgs.filesData = removeFiles;\n                    var removeUrl = _this.asyncSettings.removeUrl;\n                    var validUrl = (removeUrl === '' || isNullOrUndefined(removeUrl)) ? false : true;\n                    var _loop_6 = function (files) {\n                        index = _this.filesData.indexOf(files);\n                        if ((files.statusCode === '2' || files.statusCode === '4') && validUrl) {\n                            _this.removeUploadedFile(files, eventArgs, removeDirectly, customTemplate);\n                        }\n                        else {\n                            if (!removeDirectly) {\n                                _this.trigger('removing', eventArgs, function (eventArgs) {\n                                    if (!eventArgs.cancel) {\n                                        _this.removeFilesData(files, customTemplate);\n                                    }\n                                });\n                            }\n                            else {\n                                _this.removeFilesData(files, customTemplate);\n                            }\n                        }\n                        if (_this.sequentialUpload) {\n                            /* istanbul ignore next */\n                            if (index <= _this.actionCompleteCount) {\n                                _this.checkActionComplete(false);\n                            }\n                        }\n                        else {\n                            _this.checkActionComplete(false);\n                        }\n                    };\n                    for (var _i = 0, removeFiles_1 = removeFiles; _i < removeFiles_1.length; _i++) {\n                        var files = removeFiles_1[_i];\n                        _loop_6(files);\n                    }\n                }\n            }\n        });\n    };\n    /**\n     * Clear all the file entries from list that can be uploaded files or added in upload queue.\n     * @returns void\n     */\n    Uploader.prototype.clearAll = function () {\n        var _this = this;\n        if (isNullOrUndefined(this.listParent)) {\n            if (this.browserName !== 'msie') {\n                this.element.value = '';\n            }\n            this.filesData = [];\n            return;\n        }\n        var eventArgs = {\n            cancel: false,\n            filesData: this.filesData\n        };\n        this.trigger('clearing', eventArgs, function (eventArgs) {\n            if (!eventArgs.cancel) {\n                _this.clearData();\n                _this.actionCompleteCount = 0;\n                _this.count = -1;\n            }\n        });\n    };\n    /**\n     * Get the data of files which are shown in file list.\n     * @param { number } index - specifies the file list item(li) index.\n     * @returns FileInfo[]\n     */\n    Uploader.prototype.getFilesData = function (index) {\n        if (!isBlazor()) {\n            if (isNullOrUndefined(index)) {\n                return this.filesData;\n            }\n            else {\n                return this.getSelectedFiles(index);\n            }\n        }\n        else {\n            for (var i = 0; i < this.filesData.length; i++) {\n                this.filesData[i].rawFile = this.base64String[i];\n            }\n            return this.filesData;\n        }\n    };\n    /**\n     * Pauses the in-progress chunked upload based on the file data.\n     * @param { FileInfo | FileInfo[] } fileData - specifies the files data to pause from uploading.\n     * @param { boolean } custom - Set true if used custom UI.\n     * @returns void\n     */\n    Uploader.prototype.pause = function (fileData, custom) {\n        fileData = fileData ? fileData : this.filesData;\n        var fileDataFiles = this.getFilesInArray(fileData);\n        this.pauseUploading(fileDataFiles, custom);\n    };\n    Uploader.prototype.pauseUploading = function (fileData, custom) {\n        var files = this.getFiles(fileData);\n        for (var i = 0; i < files.length; i++) {\n            if (files[i].statusCode === '3') {\n                this.pauseUpload(this.getCurrentMetaData(files[i], null), null, custom);\n            }\n        }\n    };\n    Uploader.prototype.getFiles = function (fileData) {\n        var files = [];\n        if (!isNullOrUndefined(fileData) && !(fileData instanceof Array)) {\n            files.push(fileData);\n        }\n        else {\n            files = fileData;\n        }\n        return files;\n    };\n    /**\n     * Resumes the chunked upload that is previously paused based on the file data.\n     * @param { FileInfo | FileInfo[] } fileData - specifies the files data to resume the paused file.\n     * @param { boolean } custom - Set true if used custom UI.\n     * @returns void\n     */\n    Uploader.prototype.resume = function (fileData, custom) {\n        fileData = fileData ? fileData : this.filesData;\n        var fileDataFiles = this.getFilesInArray(fileData);\n        this.resumeFiles(fileDataFiles, custom);\n    };\n    Uploader.prototype.resumeFiles = function (fileData, custom) {\n        var files = this.getFiles(fileData);\n        for (var i = 0; i < files.length; i++) {\n            if (files[i].statusCode === '4') {\n                this.resumeUpload(this.getCurrentMetaData(files[i], null), null, custom);\n            }\n        }\n    };\n    /**\n     * Retries the canceled or failed file upload based on the file data.\n     * @param { FileInfo | FileInfo[] } fileData - specifies the files data to retry the canceled or failed file.\n     * @param { boolean } fromcanceledStage - Set true to retry from canceled stage and set false to retry from initial stage.\n     * @returns void\n     */\n    Uploader.prototype.retry = function (fileData, fromcanceledStage, custom) {\n        fileData = fileData ? fileData : this.filesData;\n        var fileDataFiles = this.getFilesInArray(fileData);\n        this.retryFailedFiles(fileDataFiles, fromcanceledStage, custom);\n    };\n    Uploader.prototype.retryFailedFiles = function (fileData, fromcanceledStage, custom) {\n        var files = this.getFiles(fileData);\n        for (var i = 0; i < files.length; i++) {\n            if (files[i].statusCode === '5' || files[i].statusCode === '0') {\n                if (this.asyncSettings.chunkSize > 0) {\n                    this.retryUpload(this.getCurrentMetaData(files[i], null), fromcanceledStage);\n                }\n                else {\n                    var liElement = void 0;\n                    if (!custom) {\n                        liElement = this.fileList[this.filesData.indexOf(files[i])];\n                    }\n                    this.reloadcanceledFile(null, files[i], liElement, custom);\n                }\n            }\n        }\n    };\n    /**\n     * Stops the in-progress chunked upload based on the file data.\n     * When the file upload is canceled, the partially uploaded file is removed from server.\n     * @param { FileInfo | FileInfo[] } fileData - specifies the files data to cancel the progressing file.\n     * @returns void\n     */\n    Uploader.prototype.cancel = function (fileData) {\n        fileData = fileData ? fileData : this.filesData;\n        var cancelingFiles = this.getFilesInArray(fileData);\n        this.cancelUpload(cancelingFiles);\n    };\n    Uploader.prototype.cancelUpload = function (fileData) {\n        var files = this.getFiles(fileData);\n        if (this.asyncSettings.chunkSize > 0) {\n            for (var i = 0; i < files.length; i++) {\n                if (files[i].statusCode === '3') {\n                    var metaData = this.getCurrentMetaData(files[i], null);\n                    metaData.file.statusCode = '5';\n                    metaData.file.status = this.localizedTexts('fileUploadCancel');\n                    this.updateMetaData(metaData);\n                    this.showHideUploadSpinner(files[i]);\n                }\n            }\n        }\n        else {\n            for (var i = 0; i < files.length; i++) {\n                if (files[i].statusCode === '3') {\n                    files[i].statusCode = '5';\n                    files[i].status = this.localizedTexts('fileUploadCancel');\n                    this.showHideUploadSpinner(files[i]);\n                }\n            }\n        }\n    };\n    Uploader.prototype.showHideUploadSpinner = function (files) {\n        var liElement = this.getLiElement(files);\n        if (!isNullOrUndefined(liElement) && isNullOrUndefined(this.template)) {\n            var spinnerTarget = liElement.querySelector('.' + ABORT_ICON);\n            createSpinner({ target: spinnerTarget, width: '20px' });\n            showSpinner(spinnerTarget);\n        }\n    };\n    __decorate([\n        Complex({ saveUrl: '', removeUrl: '' }, AsyncSettings)\n    ], Uploader.prototype, \"asyncSettings\", void 0);\n    __decorate([\n        Property(false)\n    ], Uploader.prototype, \"sequentialUpload\", void 0);\n    __decorate([\n        Property({})\n    ], Uploader.prototype, \"htmlAttributes\", void 0);\n    __decorate([\n        Property('')\n    ], Uploader.prototype, \"cssClass\", void 0);\n    __decorate([\n        Property(true)\n    ], Uploader.prototype, \"enabled\", void 0);\n    __decorate([\n        Property(null)\n    ], Uploader.prototype, \"template\", void 0);\n    __decorate([\n        Property(true)\n    ], Uploader.prototype, \"multiple\", void 0);\n    __decorate([\n        Property(true)\n    ], Uploader.prototype, \"autoUpload\", void 0);\n    __decorate([\n        Complex({}, ButtonsProps)\n    ], Uploader.prototype, \"buttons\", void 0);\n    __decorate([\n        Property('')\n    ], Uploader.prototype, \"allowedExtensions\", void 0);\n    __decorate([\n        Property(0)\n    ], Uploader.prototype, \"minFileSize\", void 0);\n    __decorate([\n        Property(30000000)\n    ], Uploader.prototype, \"maxFileSize\", void 0);\n    __decorate([\n        Property(null)\n    ], Uploader.prototype, \"dropArea\", void 0);\n    __decorate([\n        Collection([{}], FilesProp)\n    ], Uploader.prototype, \"files\", void 0);\n    __decorate([\n        Property(true)\n    ], Uploader.prototype, \"showFileList\", void 0);\n    __decorate([\n        Property(false)\n    ], Uploader.prototype, \"directoryUpload\", void 0);\n    __decorate([\n        Event()\n    ], Uploader.prototype, \"created\", void 0);\n    __decorate([\n        Event()\n    ], Uploader.prototype, \"actionComplete\", void 0);\n    __decorate([\n        Event()\n    ], Uploader.prototype, \"rendering\", void 0);\n    __decorate([\n        Event()\n    ], Uploader.prototype, \"beforeUpload\", void 0);\n    __decorate([\n        Event()\n    ], Uploader.prototype, \"fileListRendering\", void 0);\n    __decorate([\n        Event()\n    ], Uploader.prototype, \"selected\", void 0);\n    __decorate([\n        Event()\n    ], Uploader.prototype, \"uploading\", void 0);\n    __decorate([\n        Event()\n    ], Uploader.prototype, \"success\", void 0);\n    __decorate([\n        Event()\n    ], Uploader.prototype, \"failure\", void 0);\n    __decorate([\n        Event()\n    ], Uploader.prototype, \"removing\", void 0);\n    __decorate([\n        Event()\n    ], Uploader.prototype, \"beforeRemove\", void 0);\n    __decorate([\n        Event()\n    ], Uploader.prototype, \"clearing\", void 0);\n    __decorate([\n        Event()\n    ], Uploader.prototype, \"progress\", void 0);\n    __decorate([\n        Event()\n    ], Uploader.prototype, \"change\", void 0);\n    __decorate([\n        Event()\n    ], Uploader.prototype, \"chunkSuccess\", void 0);\n    __decorate([\n        Event()\n    ], Uploader.prototype, \"chunkFailure\", void 0);\n    __decorate([\n        Event()\n    ], Uploader.prototype, \"chunkUploading\", void 0);\n    __decorate([\n        Event()\n    ], Uploader.prototype, \"canceling\", void 0);\n    __decorate([\n        Event()\n    ], Uploader.prototype, \"pausing\", void 0);\n    __decorate([\n        Event()\n    ], Uploader.prototype, \"resuming\", void 0);\n    Uploader = __decorate([\n        NotifyPropertyChanges\n    ], Uploader);\n    return Uploader;\n}(Component));\nexport { Uploader };\n"]},"metadata":{},"sourceType":"module"}