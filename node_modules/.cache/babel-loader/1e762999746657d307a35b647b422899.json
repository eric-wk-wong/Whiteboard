{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nimport { selectAll, select, createElement, Base, detach } from '@syncfusion/ej2-base';\nimport { extend, isNullOrUndefined, EventHandler } from '@syncfusion/ej2-base';\nimport { Property, NotifyPropertyChanges, Event, onIntlChange } from '@syncfusion/ej2-base';\nimport { L10n } from '@syncfusion/ej2-base';\n/**\n * global declarations\n */\n// tslint:disable-next-line:no-any\n\nexport var regex = {\n  EMAIL: new RegExp('^[A-Za-z0-9._%+-]{1,}@[A-Za-z0-9._%+-]{1,}([.]{1}[a-zA-Z0-9]{2,}' + '|[.]{1}[a-zA-Z0-9]{2,4}[.]{1}[a-zA-Z0-9]{2,4})$'),\n  URL: /^(?:http(s)?:\\/\\/)?[\\w.-]+(?:\\.[\\w\\.-]+)+[\\w\\-\\._~:/?#[\\]@!\\$&'\\(\\)\\*\\+,;=.]+$/m,\n  DATE_ISO: new RegExp('^([0-9]{4})-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])$'),\n  DIGITS: new RegExp('^[0-9]*$'),\n  PHONE: new RegExp('^[+]?[0-9]{9,13}$'),\n  CREDITCARD: new RegExp('^\\\\d{13,16}$')\n};\n/**\n * ErrorOption values\n * @private\n */\n\nexport var ErrorOption;\n\n(function (ErrorOption) {\n  /**\n   * Defines the error message.\n   */\n  ErrorOption[ErrorOption[\"Message\"] = 0] = \"Message\";\n  /**\n   * Defines the error element type.\n   */\n\n  ErrorOption[ErrorOption[\"Label\"] = 1] = \"Label\";\n})(ErrorOption || (ErrorOption = {}));\n/**\n * FormValidator class enables you to validate the form fields based on your defined rules\n * ```html\n * <form id='formId'>\n *  <input type='text' name='Name' />\n *  <input type='text' name='Age' />\n * </form>\n * <script>\n *   let formObject = new FormValidator('#formId', {\n *      rules: { Name: { required: true }, Age: { range: [18, 30] } };\n *   });\n *   formObject.validate();\n * </script>\n * ```\n */\n\n\nvar FormValidator =\n/** @class */\nfunction (_super) {\n  __extends(FormValidator, _super); // Initializes the FormValidator \n\n\n  function FormValidator(element, options) {\n    var _this = _super.call(this, options, element) || this;\n\n    _this.validated = [];\n    _this.errorRules = [];\n    _this.allowSubmit = false;\n    _this.required = 'required';\n    _this.infoElement = null;\n    _this.inputElement = null;\n    _this.selectQuery = 'input:not([type=reset]):not([type=button]), select, textarea'; // tslint:disable-next-line:no-any\n\n    _this.localyMessage = {};\n    /**\n     * Specifies the default messages for validation rules.\n     * @default { List of validation message }\n     */\n\n    _this.defaultMessages = {\n      required: 'This field is required.',\n      email: 'Please enter a valid email address.',\n      url: 'Please enter a valid URL.',\n      date: 'Please enter a valid date.',\n      dateIso: 'Please enter a valid date ( ISO ).',\n      creditcard: 'Please enter valid card number',\n      number: 'Please enter a valid number.',\n      digits: 'Please enter only digits.',\n      maxLength: 'Please enter no more than {0} characters.',\n      minLength: 'Please enter at least {0} characters.',\n      rangeLength: 'Please enter a value between {0} and {1} characters long.',\n      range: 'Please enter a value between {0} and {1}.',\n      max: 'Please enter a value less than or equal to {0}.',\n      min: 'Please enter a value greater than or equal to {0}.',\n      regex: 'Please enter a correct value.',\n      tel: 'Please enter a valid phone number.',\n      pattern: 'Please enter a correct pattern value.',\n      equalTo: 'Please enter the valid match text'\n    };\n\n    if (typeof _this.rules === 'undefined') {\n      _this.rules = {};\n    }\n\n    _this.l10n = new L10n('formValidator', _this.defaultMessages, _this.locale);\n\n    if (_this.locale) {\n      _this.localeFunc();\n    }\n\n    onIntlChange.on('notifyExternalChange', _this.afterLocalization, _this);\n    element = typeof element === 'string' ? select(element, document) : element; // Set novalidate to prevent default HTML5 form validation\n\n    if (_this.element != null) {\n      _this.element.setAttribute('novalidate', '');\n\n      _this.inputElements = selectAll(_this.selectQuery, _this.element);\n\n      _this.createHTML5Rules();\n\n      _this.wireEvents();\n    } else {\n      return undefined;\n    }\n\n    return _this;\n  }\n\n  FormValidator_1 = FormValidator; // tslint:enable\n\n  /**\n   * Add validation rules to the corresponding input element based on `name` attribute.\n   * @param {string} name `name` of form field.\n   * @param {Object} rules Validation rules for the corresponding element.\n   * @return {void}\n   */\n\n  FormValidator.prototype.addRules = function (name, rules) {\n    if (name) {\n      if (this.rules.hasOwnProperty(name)) {\n        extend(this.rules[name], rules, {});\n      } else {\n        this.rules[name] = rules;\n      }\n    }\n  };\n  /**\n   * Remove validation to the corresponding field based on name attribute.\n   * When no parameter is passed, remove all the validations in the form.\n   * @param {string} name Input name attribute value.\n   * @param {string[]} rules List of validation rules need to be remove from the corresponding element.\n   * @return {void}\n   */\n\n\n  FormValidator.prototype.removeRules = function (name, rules) {\n    if (!name && !rules) {\n      this.rules = {};\n    } else if (this.rules[name] && !rules) {\n      delete this.rules[name];\n    } else if (!isNullOrUndefined(this.rules[name] && rules)) {\n      for (var i = 0; i < rules.length; i++) {\n        delete this.rules[name][rules[i]];\n      }\n    } else {\n      return;\n    }\n  };\n  /**\n   * Validate the current form values using defined rules.\n   * Returns `true` when the form is valid otherwise `false`\n   * @param {string} selected - Optional parameter to validate specified element.\n   * @return {boolean}\n   */\n\n\n  FormValidator.prototype.validate = function (selected) {\n    var rules = Object.keys(this.rules);\n\n    if (selected && rules.length) {\n      this.validateRules(selected); //filter the selected element it don't have any valid input element\n\n      return rules.indexOf(selected) !== -1 && this.errorRules.filter(function (data) {\n        return data.name === selected;\n      }).length === 0;\n    } else {\n      this.errorRules = [];\n\n      for (var _i = 0, rules_1 = rules; _i < rules_1.length; _i++) {\n        var name_1 = rules_1[_i];\n        this.validateRules(name_1);\n      }\n\n      return this.errorRules.length === 0;\n    }\n  };\n  /**\n   * Reset the value of all the fields in form.\n   * @return {void}\n   */\n\n\n  FormValidator.prototype.reset = function () {\n    this.element.reset();\n    this.clearForm();\n  };\n  /**\n   * Get input element by name.\n   * @param {string} name - Input element name attribute value.\n   * @return {HTMLInputElement}\n   */\n\n\n  FormValidator.prototype.getInputElement = function (name) {\n    this.inputElement = select('[name=\"' + name + '\"]', this.element);\n    return this.inputElement;\n  };\n  /**\n   * Destroy the form validator object and error elements.\n   * @return {void}\n   */\n\n\n  FormValidator.prototype.destroy = function () {\n    this.reset();\n    this.unwireEvents();\n    this.rules = {};\n    var elements = selectAll('.' + this.errorClass + ', .' + this.validClass, this.element);\n\n    for (var _i = 0, elements_1 = elements; _i < elements_1.length; _i++) {\n      var element = elements_1[_i];\n      detach(element);\n    }\n\n    _super.prototype.destroy.call(this);\n\n    onIntlChange.off('notifyExternalChange', this.afterLocalization);\n  };\n  /**\n   * @private\n   */\n\n\n  FormValidator.prototype.onPropertyChanged = function (newProp, oldProp) {\n    for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n      var prop = _a[_i];\n\n      switch (prop) {\n        case 'locale':\n          this.localeFunc();\n          break;\n      }\n    }\n  };\n\n  ;\n  /**\n   * @private\n   */\n\n  FormValidator.prototype.localeFunc = function () {\n    for (var _i = 0, _a = Object.keys(this.defaultMessages); _i < _a.length; _i++) {\n      var key = _a[_i];\n      this.l10n.setLocale(this.locale);\n      var value = this.l10n.getConstant(key);\n      this.localyMessage[key] = value;\n    }\n  };\n  /**\n   * @private\n   */\n\n\n  FormValidator.prototype.getModuleName = function () {\n    return 'formValidator';\n  };\n  /**\n   * @private\n   */\n  // tslint:disable-next-line:no-any\n\n\n  FormValidator.prototype.afterLocalization = function (args) {\n    this.locale = args.locale;\n    this.localeFunc();\n  };\n  /**\n   * Allows you to refresh the form validator base events to the elements inside the form.\n   * @return {void}\n   */\n\n\n  FormValidator.prototype.refresh = function () {\n    this.unwireEvents();\n    this.inputElements = selectAll(this.selectQuery, this.element);\n    this.wireEvents();\n  };\n\n  FormValidator.prototype.clearForm = function () {\n    this.errorRules = [];\n    this.validated = [];\n    var elements = selectAll(this.selectQuery, this.element);\n\n    for (var _i = 0, elements_2 = elements; _i < elements_2.length; _i++) {\n      var element = elements_2[_i];\n      var input = element;\n      input.removeAttribute('aria-invalid');\n      input.classList.remove(this.errorClass);\n\n      if (input.name.length > 0) {\n        this.getInputElement(input.name);\n        this.getErrorElement(input.name);\n        this.hideMessage(input.name);\n      }\n\n      input.classList.remove(this.validClass);\n    }\n  };\n\n  FormValidator.prototype.createHTML5Rules = function () {\n    var defRules = ['required', 'validateHidden', 'regex', 'rangeLength', 'maxLength', 'minLength', 'dateIso', 'digits', 'pattern', 'data-val-required', 'type', 'data-validation', 'min', 'max', 'range', 'equalTo', 'data-val-minlength-min', 'data-val-equalto-other', 'data-val-maxlength-max', 'data-val-range-min', 'data-val-regex-pattern', 'data-val-length-max', 'data-val-creditcard', 'data-val-phone'];\n    var acceptedTypes = ['hidden', 'email', 'url', 'date', 'number', 'tel'];\n\n    for (var _i = 0, _a = this.inputElements; _i < _a.length; _i++) {\n      var input = _a[_i]; // Default attribute rules \n\n      var allRule = {};\n\n      for (var _b = 0, defRules_1 = defRules; _b < defRules_1.length; _b++) {\n        var rule = defRules_1[_b];\n\n        if (input.getAttribute(rule) !== null) {\n          switch (rule) {\n            case 'required':\n              this.defRule(input, allRule, rule, input.required);\n              break;\n\n            case 'data-validation':\n              rule = input.getAttribute(rule);\n              this.defRule(input, allRule, rule, true);\n              break;\n\n            case 'type':\n              if (acceptedTypes.indexOf(input.type) !== -1) {\n                this.defRule(input, allRule, input.type, true);\n              }\n\n              break;\n\n            case 'rangeLength':\n            case 'range':\n              this.defRule(input, allRule, rule, JSON.parse(input.getAttribute(rule)));\n              break;\n\n            case 'equalTo':\n              var id = input.getAttribute(rule);\n              this.defRule(input, allRule, rule, id);\n              break;\n\n            default:\n              if (input.getAttribute('data-val') === 'true') {\n                this.annotationRule(input, allRule, rule, input.getAttribute(rule));\n              } else {\n                this.defRule(input, allRule, rule, input.getAttribute(rule));\n              }\n\n          }\n        }\n      } //adding pattern type validation\n\n\n      if (Object.keys(allRule).length !== 0) {\n        this.addRules(input.name, allRule);\n      }\n    }\n  };\n\n  FormValidator.prototype.annotationRule = function (input, ruleCon, ruleName, value) {\n    var annotationRule = ruleName.split('-');\n    var rulesList = ['required', 'creditcard', 'phone', 'maxlength', 'minlength', 'range', 'regex', 'equalto'];\n    var ruleFirstName = annotationRule[annotationRule.length - 1];\n    var ruleSecondName = annotationRule[annotationRule.length - 2];\n\n    if (rulesList.indexOf(ruleFirstName) !== -1) {\n      switch (ruleFirstName) {\n        case 'required':\n          this.defRule(input, ruleCon, 'required', value);\n          break;\n\n        case 'creditcard':\n          this.defRule(input, ruleCon, 'creditcard', value);\n          break;\n\n        case 'phone':\n          this.defRule(input, ruleCon, 'tel', value);\n          break;\n      }\n    } else if (rulesList.indexOf(ruleSecondName) !== -1) {\n      switch (ruleSecondName) {\n        case 'maxlength':\n          this.defRule(input, ruleCon, 'maxLength', value);\n          break;\n\n        case 'minlength':\n          this.defRule(input, ruleCon, 'minLength', value);\n          break;\n\n        case 'range':\n          var minvalue = input.getAttribute('data-val-range-min');\n          var maxvalue = input.getAttribute('data-val-range-max');\n          this.defRule(input, ruleCon, 'range', [minvalue, maxvalue]);\n          break;\n\n        case 'equalto':\n          var id = input.getAttribute(ruleName).split('.');\n          this.defRule(input, ruleCon, 'equalTo', id[id.length - 1]);\n          break;\n\n        case 'regex':\n          this.defRule(input, ruleCon, 'regex', value);\n          break;\n      }\n    }\n  };\n\n  FormValidator.prototype.defRule = function (input, ruleCon, ruleName, value) {\n    var message = input.getAttribute('data-' + ruleName + '-message');\n    var annotationMessage = input.getAttribute('data-val-' + ruleName);\n    var customMessage;\n\n    if (this.rules[input.name] && ruleName !== 'validateHidden' && ruleName !== 'hidden') {\n      this.getInputElement(input.name);\n      customMessage = this.getErrorMessage(this.rules[input.name][ruleName], ruleName);\n    }\n\n    if (message) {\n      value = [value, message];\n    } else if (annotationMessage) {\n      value = [value, annotationMessage];\n    } else if (customMessage) {\n      value = [value, customMessage];\n    }\n\n    ruleCon[ruleName] = value;\n  }; // Wire events to the form elements\n\n\n  FormValidator.prototype.wireEvents = function () {\n    for (var _i = 0, _a = this.inputElements; _i < _a.length; _i++) {\n      var input = _a[_i];\n\n      if (FormValidator_1.isCheckable(input)) {\n        EventHandler.add(input, 'click', this.clickHandler, this);\n      } else if (input.tagName === 'SELECT') {\n        EventHandler.add(input, 'change', this.changeHandler, this);\n      } else {\n        EventHandler.add(input, 'focusout', this.focusOutHandler, this);\n        EventHandler.add(input, 'keyup', this.keyUpHandler, this);\n      }\n    }\n\n    EventHandler.add(this.element, 'submit', this.submitHandler, this);\n    EventHandler.add(this.element, 'reset', this.resetHandler, this);\n  }; // UnWire events to the form elements\n\n\n  FormValidator.prototype.unwireEvents = function () {\n    for (var _i = 0, _a = this.inputElements; _i < _a.length; _i++) {\n      var input = _a[_i];\n      EventHandler.clearEvents(input);\n    }\n\n    EventHandler.remove(this.element, 'submit', this.submitHandler);\n    EventHandler.remove(this.element, 'reset', this.resetHandler);\n  }; // Handle input element focusout event\n\n\n  FormValidator.prototype.focusOutHandler = function (e) {\n    this.trigger('focusout', e); //FormValidator.triggerCallback(this.focusout, e);\n\n    var element = e.target;\n\n    if (this.rules[element.name]) {\n      if (this.rules[element.name][this.required] || element.value.length > 0) {\n        this.validate(element.name);\n      } else if (this.validated.indexOf(element.name) === -1) {\n        this.validated.push(element.name);\n      }\n    }\n  }; // Handle input element keyup event\n\n\n  FormValidator.prototype.keyUpHandler = function (e) {\n    this.trigger('keyup', e);\n    var element = e.target; // List of keys need to prevent while validation\n\n    var excludeKeys = [16, 17, 18, 20, 35, 36, 37, 38, 39, 40, 45, 144, 225];\n\n    if (e.which === 9 && (!this.rules[element.name] || this.rules[element.name] && !this.rules[element.name][this.required])) {\n      return;\n    }\n\n    if (this.validated.indexOf(element.name) !== -1 && this.rules[element.name] && excludeKeys.indexOf(e.which) === -1) {\n      this.validate(element.name);\n    }\n  }; // Handle input click event\n\n\n  FormValidator.prototype.clickHandler = function (e) {\n    this.trigger('click', e);\n    var element = e.target; // If element type is not submit allow validation\n\n    if (element.type !== 'submit') {\n      this.validate(element.name);\n    } else if (element.getAttribute('formnovalidate') !== null) {\n      // Prevent form validation, if submit button has formnovalidate attribute\n      this.allowSubmit = true;\n    }\n  }; // Handle input change event\n\n\n  FormValidator.prototype.changeHandler = function (e) {\n    this.trigger('change', e);\n    var element = e.target;\n    this.validate(element.name);\n  }; // Handle form submit event\n\n\n  FormValidator.prototype.submitHandler = function (e) {\n    this.trigger('submit', e); //FormValidator.triggerCallback(this.submit, e);\n    // Prevent form submit if validation failed\n\n    if (!this.allowSubmit && !this.validate()) {\n      e.preventDefault();\n    } else {\n      this.allowSubmit = false;\n    }\n  }; // Handle form reset\n\n\n  FormValidator.prototype.resetHandler = function () {\n    this.clearForm();\n  }; // Validate each rule based on input element name\n\n\n  FormValidator.prototype.validateRules = function (name) {\n    if (!this.rules[name]) {\n      return;\n    }\n\n    var rules = Object.keys(this.rules[name]);\n    var hiddenType = false;\n    var validateHiddenType = false;\n    var vhPos = rules.indexOf('validateHidden');\n    var hPos = rules.indexOf('hidden');\n    this.getInputElement(name);\n\n    if (hPos !== -1) {\n      hiddenType = true;\n    }\n\n    if (vhPos !== -1) {\n      validateHiddenType = true;\n    }\n\n    if (!hiddenType || hiddenType && validateHiddenType) {\n      if (vhPos !== -1) {\n        rules.splice(vhPos, 1);\n      }\n\n      if (hPos !== -1) {\n        rules.splice(hPos - 1, 1);\n      }\n\n      this.getErrorElement(name);\n\n      for (var _i = 0, rules_2 = rules; _i < rules_2.length; _i++) {\n        var rule = rules_2[_i];\n        var errorMessage = this.getErrorMessage(this.rules[name][rule], rule);\n        var errorRule = {\n          name: name,\n          message: errorMessage\n        };\n        var eventArgs = {\n          inputName: name,\n          element: this.inputElement,\n          message: errorMessage\n        };\n\n        if (!this.isValid(name, rule) && !this.inputElement.classList.contains(this.ignore)) {\n          this.removeErrorRules(name);\n          this.errorRules.push(errorRule); // Set aria attributes to invalid elements\n\n          this.inputElement.setAttribute('aria-invalid', 'true');\n          this.inputElement.setAttribute('aria-describedby', this.inputElement.id + '-info');\n          this.inputElement.classList.add(this.errorClass);\n          this.inputElement.classList.remove(this.validClass);\n\n          if (!this.infoElement) {\n            this.createErrorElement(name, errorRule.message, this.inputElement);\n          } else {\n            this.showMessage(errorRule);\n          }\n\n          eventArgs.errorElement = this.infoElement;\n          eventArgs.status = 'failure';\n          this.inputElement.classList.add(this.errorClass);\n          this.inputElement.classList.remove(this.validClass);\n          this.optionalValidationStatus(name, eventArgs);\n          this.trigger('validationComplete', eventArgs); // Set aria-required to required rule elements\n\n          if (rule === 'required') {\n            this.inputElement.setAttribute('aria-required', 'true');\n          }\n\n          break;\n        } else {\n          this.hideMessage(name);\n          eventArgs.status = 'success';\n          this.trigger('validationComplete', eventArgs);\n        }\n      }\n    } else {\n      return;\n    }\n  }; // Update the optional validation status\n\n\n  FormValidator.prototype.optionalValidationStatus = function (name, refer) {\n    if (!this.rules[name][this.required] && !this.inputElement.value.length && !isNullOrUndefined(this.infoElement)) {\n      this.infoElement.innerHTML = this.inputElement.value;\n      this.infoElement.setAttribute('aria-invalid', 'false');\n      refer.status = '';\n      this.hideMessage(name);\n    }\n  }; // Check the input element whether it's value satisfy the validation rule or not\n\n\n  FormValidator.prototype.isValid = function (name, rule) {\n    var params = this.rules[name][rule];\n    var param = params instanceof Array && typeof params[1] === 'string' ? params[0] : params;\n    var currentRule = this.rules[name][rule];\n    var args = {\n      value: this.inputElement.value,\n      param: param,\n      element: this.inputElement,\n      formElement: this.element\n    };\n    this.trigger('validationBegin', args);\n\n    if (currentRule && typeof currentRule[0] === 'function') {\n      var fn = currentRule[0];\n      return fn.call(this, {\n        element: this.inputElement,\n        value: this.inputElement.value\n      });\n    } else if (FormValidator_1.isCheckable(this.inputElement)) {\n      if (rule !== 'required') {\n        return true;\n      }\n\n      return selectAll('input[name=' + name + ']:checked', this.element).length > 0;\n    } else {\n      return FormValidator_1.checkValidator[rule](args);\n    }\n  }; // Return default error message or custom error message \n\n\n  FormValidator.prototype.getErrorMessage = function (ruleValue, rule) {\n    var message = this.inputElement.getAttribute('data-' + rule + '-message') ? this.inputElement.getAttribute('data-' + rule + '-message') : ruleValue instanceof Array && typeof ruleValue[1] === 'string' ? ruleValue[1] : Object.keys(this.localyMessage).length !== 0 ? this.localyMessage[rule] : this.defaultMessages[rule];\n    var formats = message.match(/{(\\d)}/g);\n\n    if (!isNullOrUndefined(formats)) {\n      for (var i = 0; i < formats.length; i++) {\n        var value = ruleValue instanceof Array ? ruleValue[i] : ruleValue;\n        message = message.replace(formats[i], value);\n      }\n    }\n\n    return message;\n  }; // Create error element based on name and error message\n\n\n  FormValidator.prototype.createErrorElement = function (name, message, input) {\n    var errorElement = createElement(this.errorElement, {\n      className: this.errorClass,\n      innerHTML: message,\n      attrs: {\n        for: name\n      }\n    }); // Create message design if errorOption is message\n\n    if (this.errorOption === ErrorOption.Message) {\n      errorElement.classList.remove(this.errorClass);\n      errorElement.classList.add('e-message');\n      errorElement = createElement(this.errorContainer, {\n        className: this.errorClass,\n        innerHTML: errorElement.outerHTML\n      });\n    }\n\n    errorElement.id = this.inputElement.name + '-info'; // Append error message into MVC error message element\n\n    if (this.element.querySelector('[data-valmsg-for=\"' + input.id + '\"]')) {\n      this.element.querySelector('[data-valmsg-for=\"' + input.id + '\"]').appendChild(errorElement);\n    } else if (input.hasAttribute('data-msg-containerid') === true) {\n      // Append error message into custom div element\n      var containerId = input.getAttribute('data-msg-containerid');\n      var divElement = this.element.querySelector('#' + containerId);\n      divElement.appendChild(errorElement);\n    } else if (this.customPlacement != null) {\n      // Call custom placement function if customPlacement is not null\n      this.customPlacement.call(this, this.inputElement, errorElement);\n    } else {\n      this.inputElement.parentNode.insertBefore(errorElement, this.inputElement.nextSibling);\n    }\n\n    errorElement.style.display = 'block';\n    this.getErrorElement(name);\n    this.validated.push(name);\n    this.checkRequired(name);\n  }; // Get error element by name\n\n\n  FormValidator.prototype.getErrorElement = function (name) {\n    this.infoElement = select(this.errorElement + '.' + this.errorClass, this.inputElement.parentElement);\n\n    if (!this.infoElement) {\n      this.infoElement = select(this.errorElement + '.' + this.errorClass + '[for=\"' + name + '\"]', this.element);\n    }\n\n    return this.infoElement;\n  }; // Remove existing rule from errorRules object\n\n\n  FormValidator.prototype.removeErrorRules = function (name) {\n    for (var i = 0; i < this.errorRules.length; i++) {\n      var rule = this.errorRules[i];\n\n      if (rule.name === name) {\n        this.errorRules.splice(i, 1);\n      }\n    }\n  }; // Show error message to the input element\n\n\n  FormValidator.prototype.showMessage = function (errorRule) {\n    this.infoElement.style.display = 'block';\n    this.infoElement.innerHTML = errorRule.message;\n    this.checkRequired(errorRule.name);\n  }; // Hide error message based on input name\n\n\n  FormValidator.prototype.hideMessage = function (name) {\n    if (this.infoElement) {\n      this.infoElement.style.display = 'none';\n      this.removeErrorRules(name);\n      this.inputElement.classList.add(this.validClass);\n      this.inputElement.classList.remove(this.errorClass);\n      this.inputElement.setAttribute('aria-invalid', 'false');\n    }\n  }; // Check whether the input element have required rule and its value is not empty\n\n\n  FormValidator.prototype.checkRequired = function (name) {\n    if (!this.rules[name][this.required] && !this.inputElement.value.length && !isNullOrUndefined(this.infoElement)) {\n      this.infoElement.innerHTML = this.inputElement.value;\n      this.infoElement.setAttribute('aria-invalid', 'false');\n      this.hideMessage(name);\n    }\n  }; // Return boolean result if the input have chekcable or submit types\n\n\n  FormValidator.isCheckable = function (input) {\n    var inputType = input.getAttribute('type');\n    return inputType && (inputType === 'checkbox' || inputType === 'radio' || inputType === 'submit');\n  };\n\n  var FormValidator_1; // List of function to validate the rules\n\n  FormValidator.checkValidator = {\n    required: function (option) {\n      return option.value.length > 0;\n    },\n    email: function (option) {\n      return regex.EMAIL.test(option.value);\n    },\n    url: function (option) {\n      return regex.URL.test(option.value);\n    },\n    dateIso: function (option) {\n      return regex.DATE_ISO.test(option.value);\n    },\n    tel: function (option) {\n      return regex.PHONE.test(option.value);\n    },\n    creditcard: function (option) {\n      return regex.CREDITCARD.test(option.value);\n    },\n    number: function (option) {\n      return !isNaN(Number(option.value)) && option.value.indexOf(' ') === -1;\n    },\n    digits: function (option) {\n      return regex.DIGITS.test(option.value);\n    },\n    maxLength: function (option) {\n      return option.value.length <= option.param;\n    },\n    minLength: function (option) {\n      return option.value.length >= option.param;\n    },\n    rangeLength: function (option) {\n      var param = option.param;\n      return option.value.length >= param[0] && option.value.length <= param[1];\n    },\n    range: function (option) {\n      var param = option.param;\n      return !isNaN(Number(option.value)) && Number(option.value) >= param[0] && Number(option.value) <= param[1];\n    },\n    date: function (option) {\n      return !isNaN(new Date(option.value).getTime());\n    },\n    max: function (option) {\n      if (!isNaN(Number(option.value))) {\n        // Maximum rule validation for number\n        return +option.value <= option.param;\n      } // Maximum rule validation for date\n\n\n      return new Date(option.value).getTime() <= new Date(JSON.parse(JSON.stringify(option.param))).getTime();\n    },\n    min: function (option) {\n      if (!isNaN(Number(option.value))) {\n        // Minimum rule validation for number\n        return +option.value >= option.param;\n      } else if (option.value.indexOf(',') !== -1) {\n        var uNum = option.value.replace(/,/g, '');\n        return parseFloat(uNum) >= option.param;\n      } else {\n        // Minimum rule validation for date\n        return new Date(option.value).getTime() >= new Date(JSON.parse(JSON.stringify(option.param))).getTime();\n      }\n    },\n    regex: function (option) {\n      return new RegExp(option.param).test(option.value);\n    },\n    equalTo: function (option) {\n      var compareTo = option.formElement.querySelector('#' + option.param);\n      option.param = compareTo.value;\n      return option.param === option.value;\n    }\n  };\n\n  __decorate([Property('')], FormValidator.prototype, \"locale\", void 0);\n\n  __decorate([Property('e-hidden')], FormValidator.prototype, \"ignore\", void 0);\n\n  __decorate([Property()], FormValidator.prototype, \"rules\", void 0);\n\n  __decorate([Property('e-error')], FormValidator.prototype, \"errorClass\", void 0);\n\n  __decorate([Property('e-valid')], FormValidator.prototype, \"validClass\", void 0);\n\n  __decorate([Property('label')], FormValidator.prototype, \"errorElement\", void 0);\n\n  __decorate([Property('div')], FormValidator.prototype, \"errorContainer\", void 0);\n\n  __decorate([Property(ErrorOption.Label)], FormValidator.prototype, \"errorOption\", void 0);\n\n  __decorate([Event()], FormValidator.prototype, \"focusout\", void 0);\n\n  __decorate([Event()], FormValidator.prototype, \"keyup\", void 0);\n\n  __decorate([Event()], FormValidator.prototype, \"click\", void 0);\n\n  __decorate([Event()], FormValidator.prototype, \"change\", void 0);\n\n  __decorate([Event()], FormValidator.prototype, \"submit\", void 0);\n\n  __decorate([Event()], FormValidator.prototype, \"validationBegin\", void 0);\n\n  __decorate([Event()], FormValidator.prototype, \"validationComplete\", void 0);\n\n  __decorate([Event()], FormValidator.prototype, \"customPlacement\", void 0);\n\n  FormValidator = FormValidator_1 = __decorate([NotifyPropertyChanges], FormValidator);\n  return FormValidator;\n}(Base);\n\nexport { FormValidator };","map":{"version":3,"sources":["/Users/ewong/Development/Whiteboard/node_modules/@syncfusion/ej2-inputs/src/form-validator/form-validator.js"],"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","__decorate","decorators","target","key","desc","c","arguments","length","r","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","selectAll","select","createElement","Base","detach","extend","isNullOrUndefined","EventHandler","Property","NotifyPropertyChanges","Event","onIntlChange","L10n","regex","EMAIL","RegExp","URL","DATE_ISO","DIGITS","PHONE","CREDITCARD","ErrorOption","FormValidator","_super","element","options","_this","call","validated","errorRules","allowSubmit","required","infoElement","inputElement","selectQuery","localyMessage","defaultMessages","email","url","date","dateIso","creditcard","number","digits","maxLength","minLength","rangeLength","range","max","min","tel","pattern","equalTo","rules","l10n","locale","localeFunc","on","afterLocalization","document","setAttribute","inputElements","createHTML5Rules","wireEvents","undefined","FormValidator_1","addRules","name","removeRules","validate","selected","keys","validateRules","indexOf","filter","data","_i","rules_1","name_1","reset","clearForm","getInputElement","destroy","unwireEvents","elements","errorClass","validClass","elements_1","off","onPropertyChanged","newProp","oldProp","_a","prop","setLocale","value","getConstant","getModuleName","args","refresh","elements_2","input","removeAttribute","classList","remove","getErrorElement","hideMessage","defRules","acceptedTypes","allRule","_b","defRules_1","rule","getAttribute","defRule","type","JSON","parse","id","annotationRule","ruleCon","ruleName","split","rulesList","ruleFirstName","ruleSecondName","minvalue","maxvalue","message","annotationMessage","customMessage","getErrorMessage","isCheckable","add","clickHandler","tagName","changeHandler","focusOutHandler","keyUpHandler","submitHandler","resetHandler","clearEvents","e","trigger","push","excludeKeys","which","preventDefault","hiddenType","validateHiddenType","vhPos","hPos","splice","rules_2","errorMessage","errorRule","eventArgs","inputName","isValid","contains","ignore","removeErrorRules","createErrorElement","showMessage","errorElement","status","optionalValidationStatus","refer","innerHTML","params","param","currentRule","formElement","fn","checkValidator","ruleValue","formats","match","replace","className","attrs","for","errorOption","Message","errorContainer","outerHTML","querySelector","appendChild","hasAttribute","containerId","divElement","customPlacement","parentNode","insertBefore","nextSibling","style","display","checkRequired","parentElement","inputType","option","test","isNaN","Number","Date","getTime","stringify","uNum","parseFloat","compareTo","Label"],"mappings":"AAAA,IAAIA,SAAS,GAAI,QAAQ,KAAKA,SAAd,IAA6B,YAAY;AACrD,MAAIC,aAAa,GAAG,UAAUC,CAAV,EAAaC,CAAb,EAAgB;AAChCF,IAAAA,aAAa,GAAGG,MAAM,CAACC,cAAP,IACX;AAAEC,MAAAA,SAAS,EAAE;AAAb,iBAA6BC,KAA7B,IAAsC,UAAUL,CAAV,EAAaC,CAAb,EAAgB;AAAED,MAAAA,CAAC,CAACI,SAAF,GAAcH,CAAd;AAAkB,KAD/D,IAEZ,UAAUD,CAAV,EAAaC,CAAb,EAAgB;AAAE,WAAK,IAAIK,CAAT,IAAcL,CAAd,EAAiB,IAAIA,CAAC,CAACM,cAAF,CAAiBD,CAAjB,CAAJ,EAAyBN,CAAC,CAACM,CAAD,CAAD,GAAOL,CAAC,CAACK,CAAD,CAAR;AAAc,KAF9E;;AAGA,WAAOP,aAAa,CAACC,CAAD,EAAIC,CAAJ,CAApB;AACH,GALD;;AAMA,SAAO,UAAUD,CAAV,EAAaC,CAAb,EAAgB;AACnBF,IAAAA,aAAa,CAACC,CAAD,EAAIC,CAAJ,CAAb;;AACA,aAASO,EAAT,GAAc;AAAE,WAAKC,WAAL,GAAmBT,CAAnB;AAAuB;;AACvCA,IAAAA,CAAC,CAACU,SAAF,GAAcT,CAAC,KAAK,IAAN,GAAaC,MAAM,CAACS,MAAP,CAAcV,CAAd,CAAb,IAAiCO,EAAE,CAACE,SAAH,GAAeT,CAAC,CAACS,SAAjB,EAA4B,IAAIF,EAAJ,EAA7D,CAAd;AACH,GAJD;AAKH,CAZ2C,EAA5C;;AAaA,IAAII,UAAU,GAAI,QAAQ,KAAKA,UAAd,IAA6B,UAAUC,UAAV,EAAsBC,MAAtB,EAA8BC,GAA9B,EAAmCC,IAAnC,EAAyC;AACnF,MAAIC,CAAC,GAAGC,SAAS,CAACC,MAAlB;AAAA,MAA0BC,CAAC,GAAGH,CAAC,GAAG,CAAJ,GAAQH,MAAR,GAAiBE,IAAI,KAAK,IAAT,GAAgBA,IAAI,GAAGd,MAAM,CAACmB,wBAAP,CAAgCP,MAAhC,EAAwCC,GAAxC,CAAvB,GAAsEC,IAArH;AAAA,MAA2HhB,CAA3H;AACA,MAAI,OAAOsB,OAAP,KAAmB,QAAnB,IAA+B,OAAOA,OAAO,CAACC,QAAf,KAA4B,UAA/D,EAA2EH,CAAC,GAAGE,OAAO,CAACC,QAAR,CAAiBV,UAAjB,EAA6BC,MAA7B,EAAqCC,GAArC,EAA0CC,IAA1C,CAAJ,CAA3E,KACK,KAAK,IAAIQ,CAAC,GAAGX,UAAU,CAACM,MAAX,GAAoB,CAAjC,EAAoCK,CAAC,IAAI,CAAzC,EAA4CA,CAAC,EAA7C,EAAiD,IAAIxB,CAAC,GAAGa,UAAU,CAACW,CAAD,CAAlB,EAAuBJ,CAAC,GAAG,CAACH,CAAC,GAAG,CAAJ,GAAQjB,CAAC,CAACoB,CAAD,CAAT,GAAeH,CAAC,GAAG,CAAJ,GAAQjB,CAAC,CAACc,MAAD,EAASC,GAAT,EAAcK,CAAd,CAAT,GAA4BpB,CAAC,CAACc,MAAD,EAASC,GAAT,CAA7C,KAA+DK,CAAnE;AAC7E,SAAOH,CAAC,GAAG,CAAJ,IAASG,CAAT,IAAclB,MAAM,CAACuB,cAAP,CAAsBX,MAAtB,EAA8BC,GAA9B,EAAmCK,CAAnC,CAAd,EAAqDA,CAA5D;AACH,CALD;;AAMA,SAASM,SAAT,EAAoBC,MAApB,EAA4BC,aAA5B,EAA2CC,IAA3C,EAAiDC,MAAjD,QAA+D,sBAA/D;AACA,SAASC,MAAT,EAAiBC,iBAAjB,EAAoCC,YAApC,QAAwD,sBAAxD;AACA,SAASC,QAAT,EAAmBC,qBAAnB,EAA0CC,KAA1C,EAAiDC,YAAjD,QAAqE,sBAArE;AACA,SAASC,IAAT,QAAqB,sBAArB;AACA;;;AAGA;;AACA,OAAO,IAAIC,KAAK,GAAG;AACfC,EAAAA,KAAK,EAAE,IAAIC,MAAJ,CAAW,qEACd,iDADG,CADQ;AAGfC,EAAAA,GAAG,EAAE,iFAHU;AAIfC,EAAAA,QAAQ,EAAE,IAAIF,MAAJ,CAAW,yDAAX,CAJK;AAKfG,EAAAA,MAAM,EAAE,IAAIH,MAAJ,CAAW,UAAX,CALO;AAMfI,EAAAA,KAAK,EAAE,IAAIJ,MAAJ,CAAW,mBAAX,CANQ;AAOfK,EAAAA,UAAU,EAAE,IAAIL,MAAJ,CAAW,cAAX;AAPG,CAAZ;AASP;;;;;AAIA,OAAO,IAAIM,WAAJ;;AACP,CAAC,UAAUA,WAAV,EAAuB;AACpB;;;AAGAA,EAAAA,WAAW,CAACA,WAAW,CAAC,SAAD,CAAX,GAAyB,CAA1B,CAAX,GAA0C,SAA1C;AACA;;;;AAGAA,EAAAA,WAAW,CAACA,WAAW,CAAC,OAAD,CAAX,GAAuB,CAAxB,CAAX,GAAwC,OAAxC;AACH,CATD,EASGA,WAAW,KAAKA,WAAW,GAAG,EAAnB,CATd;AAUA;;;;;;;;;;;;;;;;;AAeA,IAAIC,aAAa;AAAG;AAAe,UAAUC,MAAV,EAAkB;AACjDnD,EAAAA,SAAS,CAACkD,aAAD,EAAgBC,MAAhB,CAAT,CADiD,CAEjD;;;AACA,WAASD,aAAT,CAAuBE,OAAvB,EAAgCC,OAAhC,EAAyC;AACrC,QAAIC,KAAK,GAAGH,MAAM,CAACI,IAAP,CAAY,IAAZ,EAAkBF,OAAlB,EAA2BD,OAA3B,KAAuC,IAAnD;;AACAE,IAAAA,KAAK,CAACE,SAAN,GAAkB,EAAlB;AACAF,IAAAA,KAAK,CAACG,UAAN,GAAmB,EAAnB;AACAH,IAAAA,KAAK,CAACI,WAAN,GAAoB,KAApB;AACAJ,IAAAA,KAAK,CAACK,QAAN,GAAiB,UAAjB;AACAL,IAAAA,KAAK,CAACM,WAAN,GAAoB,IAApB;AACAN,IAAAA,KAAK,CAACO,YAAN,GAAqB,IAArB;AACAP,IAAAA,KAAK,CAACQ,WAAN,GAAoB,8DAApB,CARqC,CASrC;;AACAR,IAAAA,KAAK,CAACS,aAAN,GAAsB,EAAtB;AACA;;;;;AAIAT,IAAAA,KAAK,CAACU,eAAN,GAAwB;AACpBL,MAAAA,QAAQ,EAAE,yBADU;AAEpBM,MAAAA,KAAK,EAAE,qCAFa;AAGpBC,MAAAA,GAAG,EAAE,2BAHe;AAIpBC,MAAAA,IAAI,EAAE,4BAJc;AAKpBC,MAAAA,OAAO,EAAE,oCALW;AAMpBC,MAAAA,UAAU,EAAE,gCANQ;AAOpBC,MAAAA,MAAM,EAAE,8BAPY;AAQpBC,MAAAA,MAAM,EAAE,2BARY;AASpBC,MAAAA,SAAS,EAAE,2CATS;AAUpBC,MAAAA,SAAS,EAAE,uCAVS;AAWpBC,MAAAA,WAAW,EAAE,2DAXO;AAYpBC,MAAAA,KAAK,EAAE,2CAZa;AAapBC,MAAAA,GAAG,EAAE,iDAbe;AAcpBC,MAAAA,GAAG,EAAE,oDAde;AAepBpC,MAAAA,KAAK,EAAE,+BAfa;AAgBpBqC,MAAAA,GAAG,EAAE,oCAhBe;AAiBpBC,MAAAA,OAAO,EAAE,uCAjBW;AAkBpBC,MAAAA,OAAO,EAAE;AAlBW,KAAxB;;AAoBA,QAAI,OAAO1B,KAAK,CAAC2B,KAAb,KAAuB,WAA3B,EAAwC;AACpC3B,MAAAA,KAAK,CAAC2B,KAAN,GAAc,EAAd;AACH;;AACD3B,IAAAA,KAAK,CAAC4B,IAAN,GAAa,IAAI1C,IAAJ,CAAS,eAAT,EAA0Bc,KAAK,CAACU,eAAhC,EAAiDV,KAAK,CAAC6B,MAAvD,CAAb;;AACA,QAAI7B,KAAK,CAAC6B,MAAV,EAAkB;AACd7B,MAAAA,KAAK,CAAC8B,UAAN;AACH;;AACD7C,IAAAA,YAAY,CAAC8C,EAAb,CAAgB,sBAAhB,EAAwC/B,KAAK,CAACgC,iBAA9C,EAAiEhC,KAAjE;AACAF,IAAAA,OAAO,GAAG,OAAOA,OAAP,KAAmB,QAAnB,GAA8BvB,MAAM,CAACuB,OAAD,EAAUmC,QAAV,CAApC,GAA0DnC,OAApE,CA3CqC,CA4CrC;;AACA,QAAIE,KAAK,CAACF,OAAN,IAAiB,IAArB,EAA2B;AACvBE,MAAAA,KAAK,CAACF,OAAN,CAAcoC,YAAd,CAA2B,YAA3B,EAAyC,EAAzC;;AACAlC,MAAAA,KAAK,CAACmC,aAAN,GAAsB7D,SAAS,CAAC0B,KAAK,CAACQ,WAAP,EAAoBR,KAAK,CAACF,OAA1B,CAA/B;;AACAE,MAAAA,KAAK,CAACoC,gBAAN;;AACApC,MAAAA,KAAK,CAACqC,UAAN;AACH,KALD,MAMK;AACD,aAAOC,SAAP;AACH;;AACD,WAAOtC,KAAP;AACH;;AACDuC,EAAAA,eAAe,GAAG3C,aAAlB,CA3DiD,CA4DjD;;AACA;;;;;;;AAMAA,EAAAA,aAAa,CAACtC,SAAd,CAAwBkF,QAAxB,GAAmC,UAAUC,IAAV,EAAgBd,KAAhB,EAAuB;AACtD,QAAIc,IAAJ,EAAU;AACN,UAAI,KAAKd,KAAL,CAAWxE,cAAX,CAA0BsF,IAA1B,CAAJ,EAAqC;AACjC9D,QAAAA,MAAM,CAAC,KAAKgD,KAAL,CAAWc,IAAX,CAAD,EAAmBd,KAAnB,EAA0B,EAA1B,CAAN;AACH,OAFD,MAGK;AACD,aAAKA,KAAL,CAAWc,IAAX,IAAmBd,KAAnB;AACH;AACJ;AACJ,GATD;AAUA;;;;;;;;;AAOA/B,EAAAA,aAAa,CAACtC,SAAd,CAAwBoF,WAAxB,GAAsC,UAAUD,IAAV,EAAgBd,KAAhB,EAAuB;AACzD,QAAI,CAACc,IAAD,IAAS,CAACd,KAAd,EAAqB;AACjB,WAAKA,KAAL,GAAa,EAAb;AACH,KAFD,MAGK,IAAI,KAAKA,KAAL,CAAWc,IAAX,KAAoB,CAACd,KAAzB,EAAgC;AACjC,aAAO,KAAKA,KAAL,CAAWc,IAAX,CAAP;AACH,KAFI,MAGA,IAAI,CAAC7D,iBAAiB,CAAC,KAAK+C,KAAL,CAAWc,IAAX,KAAoBd,KAArB,CAAtB,EAAmD;AACpD,WAAK,IAAIvD,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGuD,KAAK,CAAC5D,MAA1B,EAAkCK,CAAC,EAAnC,EAAuC;AACnC,eAAO,KAAKuD,KAAL,CAAWc,IAAX,EAAiBd,KAAK,CAACvD,CAAD,CAAtB,CAAP;AACH;AACJ,KAJI,MAKA;AACD;AACH;AACJ,GAfD;AAgBA;;;;;;;;AAMAwB,EAAAA,aAAa,CAACtC,SAAd,CAAwBqF,QAAxB,GAAmC,UAAUC,QAAV,EAAoB;AACnD,QAAIjB,KAAK,GAAG7E,MAAM,CAAC+F,IAAP,CAAY,KAAKlB,KAAjB,CAAZ;;AACA,QAAIiB,QAAQ,IAAIjB,KAAK,CAAC5D,MAAtB,EAA8B;AAC1B,WAAK+E,aAAL,CAAmBF,QAAnB,EAD0B,CAE1B;;AACA,aAAOjB,KAAK,CAACoB,OAAN,CAAcH,QAAd,MAA4B,CAAC,CAA7B,IAAkC,KAAKzC,UAAL,CAAgB6C,MAAhB,CAAuB,UAAUC,IAAV,EAAgB;AAC5E,eAAOA,IAAI,CAACR,IAAL,KAAcG,QAArB;AACH,OAFwC,EAEtC7E,MAFsC,KAE3B,CAFd;AAGH,KAND,MAOK;AACD,WAAKoC,UAAL,GAAkB,EAAlB;;AACA,WAAK,IAAI+C,EAAE,GAAG,CAAT,EAAYC,OAAO,GAAGxB,KAA3B,EAAkCuB,EAAE,GAAGC,OAAO,CAACpF,MAA/C,EAAuDmF,EAAE,EAAzD,EAA6D;AACzD,YAAIE,MAAM,GAAGD,OAAO,CAACD,EAAD,CAApB;AACA,aAAKJ,aAAL,CAAmBM,MAAnB;AACH;;AACD,aAAO,KAAKjD,UAAL,CAAgBpC,MAAhB,KAA2B,CAAlC;AACH;AACJ,GAjBD;AAkBA;;;;;;AAIA6B,EAAAA,aAAa,CAACtC,SAAd,CAAwB+F,KAAxB,GAAgC,YAAY;AACxC,SAAKvD,OAAL,CAAauD,KAAb;AACA,SAAKC,SAAL;AACH,GAHD;AAIA;;;;;;;AAKA1D,EAAAA,aAAa,CAACtC,SAAd,CAAwBiG,eAAxB,GAA0C,UAAUd,IAAV,EAAgB;AACtD,SAAKlC,YAAL,GAAqBhC,MAAM,CAAC,YAAYkE,IAAZ,GAAmB,IAApB,EAA0B,KAAK3C,OAA/B,CAA3B;AACA,WAAO,KAAKS,YAAZ;AACH,GAHD;AAIA;;;;;;AAIAX,EAAAA,aAAa,CAACtC,SAAd,CAAwBkG,OAAxB,GAAkC,YAAY;AAC1C,SAAKH,KAAL;AACA,SAAKI,YAAL;AACA,SAAK9B,KAAL,GAAa,EAAb;AACA,QAAI+B,QAAQ,GAAGpF,SAAS,CAAC,MAAM,KAAKqF,UAAX,GAAwB,KAAxB,GAAgC,KAAKC,UAAtC,EAAkD,KAAK9D,OAAvD,CAAxB;;AACA,SAAK,IAAIoD,EAAE,GAAG,CAAT,EAAYW,UAAU,GAAGH,QAA9B,EAAwCR,EAAE,GAAGW,UAAU,CAAC9F,MAAxD,EAAgEmF,EAAE,EAAlE,EAAsE;AAClE,UAAIpD,OAAO,GAAG+D,UAAU,CAACX,EAAD,CAAxB;AACAxE,MAAAA,MAAM,CAACoB,OAAD,CAAN;AACH;;AACDD,IAAAA,MAAM,CAACvC,SAAP,CAAiBkG,OAAjB,CAAyBvD,IAAzB,CAA8B,IAA9B;;AACAhB,IAAAA,YAAY,CAAC6E,GAAb,CAAiB,sBAAjB,EAAyC,KAAK9B,iBAA9C;AACH,GAXD;AAYA;;;;;AAGApC,EAAAA,aAAa,CAACtC,SAAd,CAAwByG,iBAAxB,GAA4C,UAAUC,OAAV,EAAmBC,OAAnB,EAA4B;AACpE,SAAK,IAAIf,EAAE,GAAG,CAAT,EAAYgB,EAAE,GAAGpH,MAAM,CAAC+F,IAAP,CAAYmB,OAAZ,CAAtB,EAA4Cd,EAAE,GAAGgB,EAAE,CAACnG,MAApD,EAA4DmF,EAAE,EAA9D,EAAkE;AAC9D,UAAIiB,IAAI,GAAGD,EAAE,CAAChB,EAAD,CAAb;;AACA,cAAQiB,IAAR;AACI,aAAK,QAAL;AACI,eAAKrC,UAAL;AACA;AAHR;AAKH;AACJ,GATD;;AAUA;AACA;;;;AAGAlC,EAAAA,aAAa,CAACtC,SAAd,CAAwBwE,UAAxB,GAAqC,YAAY;AAC7C,SAAK,IAAIoB,EAAE,GAAG,CAAT,EAAYgB,EAAE,GAAGpH,MAAM,CAAC+F,IAAP,CAAY,KAAKnC,eAAjB,CAAtB,EAAyDwC,EAAE,GAAGgB,EAAE,CAACnG,MAAjE,EAAyEmF,EAAE,EAA3E,EAA+E;AAC3E,UAAIvF,GAAG,GAAGuG,EAAE,CAAChB,EAAD,CAAZ;AACA,WAAKtB,IAAL,CAAUwC,SAAV,CAAoB,KAAKvC,MAAzB;AACA,UAAIwC,KAAK,GAAG,KAAKzC,IAAL,CAAU0C,WAAV,CAAsB3G,GAAtB,CAAZ;AACA,WAAK8C,aAAL,CAAmB9C,GAAnB,IAA0B0G,KAA1B;AACH;AACJ,GAPD;AAQA;;;;;AAGAzE,EAAAA,aAAa,CAACtC,SAAd,CAAwBiH,aAAxB,GAAwC,YAAY;AAChD,WAAO,eAAP;AACH,GAFD;AAGA;;;AAGA;;;AACA3E,EAAAA,aAAa,CAACtC,SAAd,CAAwB0E,iBAAxB,GAA4C,UAAUwC,IAAV,EAAgB;AACxD,SAAK3C,MAAL,GAAc2C,IAAI,CAAC3C,MAAnB;AACA,SAAKC,UAAL;AACH,GAHD;AAIA;;;;;;AAIAlC,EAAAA,aAAa,CAACtC,SAAd,CAAwBmH,OAAxB,GAAkC,YAAY;AAC1C,SAAKhB,YAAL;AACA,SAAKtB,aAAL,GAAqB7D,SAAS,CAAC,KAAKkC,WAAN,EAAmB,KAAKV,OAAxB,CAA9B;AACA,SAAKuC,UAAL;AACH,GAJD;;AAKAzC,EAAAA,aAAa,CAACtC,SAAd,CAAwBgG,SAAxB,GAAoC,YAAY;AAC5C,SAAKnD,UAAL,GAAkB,EAAlB;AACA,SAAKD,SAAL,GAAiB,EAAjB;AACA,QAAIwD,QAAQ,GAAGpF,SAAS,CAAC,KAAKkC,WAAN,EAAmB,KAAKV,OAAxB,CAAxB;;AACA,SAAK,IAAIoD,EAAE,GAAG,CAAT,EAAYwB,UAAU,GAAGhB,QAA9B,EAAwCR,EAAE,GAAGwB,UAAU,CAAC3G,MAAxD,EAAgEmF,EAAE,EAAlE,EAAsE;AAClE,UAAIpD,OAAO,GAAG4E,UAAU,CAACxB,EAAD,CAAxB;AACA,UAAIyB,KAAK,GAAG7E,OAAZ;AACA6E,MAAAA,KAAK,CAACC,eAAN,CAAsB,cAAtB;AACAD,MAAAA,KAAK,CAACE,SAAN,CAAgBC,MAAhB,CAAuB,KAAKnB,UAA5B;;AACA,UAAIgB,KAAK,CAAClC,IAAN,CAAW1E,MAAX,GAAoB,CAAxB,EAA2B;AACvB,aAAKwF,eAAL,CAAqBoB,KAAK,CAAClC,IAA3B;AACA,aAAKsC,eAAL,CAAqBJ,KAAK,CAAClC,IAA3B;AACA,aAAKuC,WAAL,CAAiBL,KAAK,CAAClC,IAAvB;AACH;;AACDkC,MAAAA,KAAK,CAACE,SAAN,CAAgBC,MAAhB,CAAuB,KAAKlB,UAA5B;AACH;AACJ,GAhBD;;AAiBAhE,EAAAA,aAAa,CAACtC,SAAd,CAAwB8E,gBAAxB,GAA2C,YAAY;AACnD,QAAI6C,QAAQ,GAAG,CAAC,UAAD,EAAa,gBAAb,EAA+B,OAA/B,EAAwC,aAAxC,EAAuD,WAAvD,EAAoE,WAApE,EAAiF,SAAjF,EAA4F,QAA5F,EACX,SADW,EACA,mBADA,EACqB,MADrB,EAC6B,iBAD7B,EACgD,KADhD,EACuD,KADvD,EAC8D,OAD9D,EACuE,SADvE,EACkF,wBADlF,EAEX,wBAFW,EAEe,wBAFf,EAEyC,oBAFzC,EAE+D,wBAF/D,EAEyF,qBAFzF,EAGX,qBAHW,EAGY,gBAHZ,CAAf;AAIA,QAAIC,aAAa,GAAG,CAAC,QAAD,EAAW,OAAX,EAAoB,KAApB,EAA2B,MAA3B,EAAmC,QAAnC,EAA6C,KAA7C,CAApB;;AACA,SAAK,IAAIhC,EAAE,GAAG,CAAT,EAAYgB,EAAE,GAAI,KAAK/B,aAA5B,EAA4Ce,EAAE,GAAGgB,EAAE,CAACnG,MAApD,EAA4DmF,EAAE,EAA9D,EAAkE;AAC9D,UAAIyB,KAAK,GAAGT,EAAE,CAAChB,EAAD,CAAd,CAD8D,CAE9D;;AACA,UAAIiC,OAAO,GAAG,EAAd;;AACA,WAAK,IAAIC,EAAE,GAAG,CAAT,EAAYC,UAAU,GAAGJ,QAA9B,EAAwCG,EAAE,GAAGC,UAAU,CAACtH,MAAxD,EAAgEqH,EAAE,EAAlE,EAAsE;AAClE,YAAIE,IAAI,GAAGD,UAAU,CAACD,EAAD,CAArB;;AACA,YAAIT,KAAK,CAACY,YAAN,CAAmBD,IAAnB,MAA6B,IAAjC,EAAuC;AACnC,kBAAQA,IAAR;AACI,iBAAK,UAAL;AACI,mBAAKE,OAAL,CAAab,KAAb,EAAoBQ,OAApB,EAA6BG,IAA7B,EAAmCX,KAAK,CAACtE,QAAzC;AACA;;AACJ,iBAAK,iBAAL;AACIiF,cAAAA,IAAI,GAAGX,KAAK,CAACY,YAAN,CAAmBD,IAAnB,CAAP;AACA,mBAAKE,OAAL,CAAab,KAAb,EAAoBQ,OAApB,EAA6BG,IAA7B,EAAmC,IAAnC;AACA;;AACJ,iBAAK,MAAL;AACI,kBAAIJ,aAAa,CAACnC,OAAd,CAAsB4B,KAAK,CAACc,IAA5B,MAAsC,CAAC,CAA3C,EAA8C;AAC1C,qBAAKD,OAAL,CAAab,KAAb,EAAoBQ,OAApB,EAA6BR,KAAK,CAACc,IAAnC,EAAyC,IAAzC;AACH;;AACD;;AACJ,iBAAK,aAAL;AACA,iBAAK,OAAL;AACI,mBAAKD,OAAL,CAAab,KAAb,EAAoBQ,OAApB,EAA6BG,IAA7B,EAAmCI,IAAI,CAACC,KAAL,CAAWhB,KAAK,CAACY,YAAN,CAAmBD,IAAnB,CAAX,CAAnC;AACA;;AACJ,iBAAK,SAAL;AACI,kBAAIM,EAAE,GAAGjB,KAAK,CAACY,YAAN,CAAmBD,IAAnB,CAAT;AACA,mBAAKE,OAAL,CAAab,KAAb,EAAoBQ,OAApB,EAA6BG,IAA7B,EAAmCM,EAAnC;AACA;;AACJ;AACI,kBAAIjB,KAAK,CAACY,YAAN,CAAmB,UAAnB,MAAmC,MAAvC,EAA+C;AAC3C,qBAAKM,cAAL,CAAoBlB,KAApB,EAA2BQ,OAA3B,EAAoCG,IAApC,EAA0CX,KAAK,CAACY,YAAN,CAAmBD,IAAnB,CAA1C;AACH,eAFD,MAGK;AACD,qBAAKE,OAAL,CAAab,KAAb,EAAoBQ,OAApB,EAA6BG,IAA7B,EAAmCX,KAAK,CAACY,YAAN,CAAmBD,IAAnB,CAAnC;AACH;;AA3BT;AA6BH;AACJ,OArC6D,CAsC9D;;;AACA,UAAIxI,MAAM,CAAC+F,IAAP,CAAYsC,OAAZ,EAAqBpH,MAArB,KAAgC,CAApC,EAAuC;AACnC,aAAKyE,QAAL,CAAcmC,KAAK,CAAClC,IAApB,EAA0B0C,OAA1B;AACH;AACJ;AACJ,GAjDD;;AAkDAvF,EAAAA,aAAa,CAACtC,SAAd,CAAwBuI,cAAxB,GAAyC,UAAUlB,KAAV,EAAiBmB,OAAjB,EAA0BC,QAA1B,EAAoC1B,KAApC,EAA2C;AAChF,QAAIwB,cAAc,GAAGE,QAAQ,CAACC,KAAT,CAAe,GAAf,CAArB;AACA,QAAIC,SAAS,GAAG,CAAC,UAAD,EAAa,YAAb,EAA2B,OAA3B,EAAoC,WAApC,EAAiD,WAAjD,EAA8D,OAA9D,EAAuE,OAAvE,EAAgF,SAAhF,CAAhB;AACA,QAAIC,aAAa,GAAGL,cAAc,CAACA,cAAc,CAAC9H,MAAf,GAAwB,CAAzB,CAAlC;AACA,QAAIoI,cAAc,GAAGN,cAAc,CAACA,cAAc,CAAC9H,MAAf,GAAwB,CAAzB,CAAnC;;AACA,QAAIkI,SAAS,CAAClD,OAAV,CAAkBmD,aAAlB,MAAqC,CAAC,CAA1C,EAA6C;AACzC,cAAQA,aAAR;AACI,aAAK,UAAL;AACI,eAAKV,OAAL,CAAab,KAAb,EAAoBmB,OAApB,EAA6B,UAA7B,EAAyCzB,KAAzC;AACA;;AACJ,aAAK,YAAL;AACI,eAAKmB,OAAL,CAAab,KAAb,EAAoBmB,OAApB,EAA6B,YAA7B,EAA2CzB,KAA3C;AACA;;AACJ,aAAK,OAAL;AACI,eAAKmB,OAAL,CAAab,KAAb,EAAoBmB,OAApB,EAA6B,KAA7B,EAAoCzB,KAApC;AACA;AATR;AAWH,KAZD,MAaK,IAAI4B,SAAS,CAAClD,OAAV,CAAkBoD,cAAlB,MAAsC,CAAC,CAA3C,EAA8C;AAC/C,cAAQA,cAAR;AACI,aAAK,WAAL;AACI,eAAKX,OAAL,CAAab,KAAb,EAAoBmB,OAApB,EAA6B,WAA7B,EAA0CzB,KAA1C;AACA;;AACJ,aAAK,WAAL;AACI,eAAKmB,OAAL,CAAab,KAAb,EAAoBmB,OAApB,EAA6B,WAA7B,EAA0CzB,KAA1C;AACA;;AACJ,aAAK,OAAL;AACI,cAAI+B,QAAQ,GAAGzB,KAAK,CAACY,YAAN,CAAmB,oBAAnB,CAAf;AACA,cAAIc,QAAQ,GAAG1B,KAAK,CAACY,YAAN,CAAmB,oBAAnB,CAAf;AACA,eAAKC,OAAL,CAAab,KAAb,EAAoBmB,OAApB,EAA6B,OAA7B,EAAsC,CAACM,QAAD,EAAWC,QAAX,CAAtC;AACA;;AACJ,aAAK,SAAL;AACI,cAAIT,EAAE,GAAGjB,KAAK,CAACY,YAAN,CAAmBQ,QAAnB,EAA6BC,KAA7B,CAAmC,GAAnC,CAAT;AACA,eAAKR,OAAL,CAAab,KAAb,EAAoBmB,OAApB,EAA6B,SAA7B,EAAwCF,EAAE,CAACA,EAAE,CAAC7H,MAAH,GAAY,CAAb,CAA1C;AACA;;AACJ,aAAK,OAAL;AACI,eAAKyH,OAAL,CAAab,KAAb,EAAoBmB,OAApB,EAA6B,OAA7B,EAAsCzB,KAAtC;AACA;AAlBR;AAoBH;AACJ,GAxCD;;AAyCAzE,EAAAA,aAAa,CAACtC,SAAd,CAAwBkI,OAAxB,GAAkC,UAAUb,KAAV,EAAiBmB,OAAjB,EAA0BC,QAA1B,EAAoC1B,KAApC,EAA2C;AACzE,QAAIiC,OAAO,GAAG3B,KAAK,CAACY,YAAN,CAAmB,UAAUQ,QAAV,GAAqB,UAAxC,CAAd;AACA,QAAIQ,iBAAiB,GAAG5B,KAAK,CAACY,YAAN,CAAmB,cAAcQ,QAAjC,CAAxB;AACA,QAAIS,aAAJ;;AACA,QAAI,KAAK7E,KAAL,CAAWgD,KAAK,CAAClC,IAAjB,KAA0BsD,QAAQ,KAAK,gBAAvC,IAA2DA,QAAQ,KAAK,QAA5E,EAAsF;AAClF,WAAKxC,eAAL,CAAqBoB,KAAK,CAAClC,IAA3B;AACA+D,MAAAA,aAAa,GAAG,KAAKC,eAAL,CAAqB,KAAK9E,KAAL,CAAWgD,KAAK,CAAClC,IAAjB,EAAuBsD,QAAvB,CAArB,EAAuDA,QAAvD,CAAhB;AACH;;AACD,QAAIO,OAAJ,EAAa;AACTjC,MAAAA,KAAK,GAAG,CAACA,KAAD,EAAQiC,OAAR,CAAR;AACH,KAFD,MAGK,IAAIC,iBAAJ,EAAuB;AACxBlC,MAAAA,KAAK,GAAG,CAACA,KAAD,EAAQkC,iBAAR,CAAR;AACH,KAFI,MAGA,IAAIC,aAAJ,EAAmB;AACpBnC,MAAAA,KAAK,GAAG,CAACA,KAAD,EAAQmC,aAAR,CAAR;AACH;;AACDV,IAAAA,OAAO,CAACC,QAAD,CAAP,GAAoB1B,KAApB;AACH,GAlBD,CAzTiD,CA4UjD;;;AACAzE,EAAAA,aAAa,CAACtC,SAAd,CAAwB+E,UAAxB,GAAqC,YAAY;AAC7C,SAAK,IAAIa,EAAE,GAAG,CAAT,EAAYgB,EAAE,GAAI,KAAK/B,aAA5B,EAA4Ce,EAAE,GAAGgB,EAAE,CAACnG,MAApD,EAA4DmF,EAAE,EAA9D,EAAkE;AAC9D,UAAIyB,KAAK,GAAGT,EAAE,CAAChB,EAAD,CAAd;;AACA,UAAIX,eAAe,CAACmE,WAAhB,CAA4B/B,KAA5B,CAAJ,EAAwC;AACpC9F,QAAAA,YAAY,CAAC8H,GAAb,CAAiBhC,KAAjB,EAAwB,OAAxB,EAAiC,KAAKiC,YAAtC,EAAoD,IAApD;AACH,OAFD,MAGK,IAAIjC,KAAK,CAACkC,OAAN,KAAkB,QAAtB,EAAgC;AACjChI,QAAAA,YAAY,CAAC8H,GAAb,CAAiBhC,KAAjB,EAAwB,QAAxB,EAAkC,KAAKmC,aAAvC,EAAsD,IAAtD;AACH,OAFI,MAGA;AACDjI,QAAAA,YAAY,CAAC8H,GAAb,CAAiBhC,KAAjB,EAAwB,UAAxB,EAAoC,KAAKoC,eAAzC,EAA0D,IAA1D;AACAlI,QAAAA,YAAY,CAAC8H,GAAb,CAAiBhC,KAAjB,EAAwB,OAAxB,EAAiC,KAAKqC,YAAtC,EAAoD,IAApD;AACH;AACJ;;AACDnI,IAAAA,YAAY,CAAC8H,GAAb,CAAiB,KAAK7G,OAAtB,EAA+B,QAA/B,EAAyC,KAAKmH,aAA9C,EAA6D,IAA7D;AACApI,IAAAA,YAAY,CAAC8H,GAAb,CAAiB,KAAK7G,OAAtB,EAA+B,OAA/B,EAAwC,KAAKoH,YAA7C,EAA2D,IAA3D;AACH,GAhBD,CA7UiD,CA8VjD;;;AACAtH,EAAAA,aAAa,CAACtC,SAAd,CAAwBmG,YAAxB,GAAuC,YAAY;AAC/C,SAAK,IAAIP,EAAE,GAAG,CAAT,EAAYgB,EAAE,GAAI,KAAK/B,aAA5B,EAA4Ce,EAAE,GAAGgB,EAAE,CAACnG,MAApD,EAA4DmF,EAAE,EAA9D,EAAkE;AAC9D,UAAIyB,KAAK,GAAGT,EAAE,CAAChB,EAAD,CAAd;AACArE,MAAAA,YAAY,CAACsI,WAAb,CAAyBxC,KAAzB;AACH;;AACD9F,IAAAA,YAAY,CAACiG,MAAb,CAAoB,KAAKhF,OAAzB,EAAkC,QAAlC,EAA4C,KAAKmH,aAAjD;AACApI,IAAAA,YAAY,CAACiG,MAAb,CAAoB,KAAKhF,OAAzB,EAAkC,OAAlC,EAA2C,KAAKoH,YAAhD;AACH,GAPD,CA/ViD,CAuWjD;;;AACAtH,EAAAA,aAAa,CAACtC,SAAd,CAAwByJ,eAAxB,GAA0C,UAAUK,CAAV,EAAa;AACnD,SAAKC,OAAL,CAAa,UAAb,EAAyBD,CAAzB,EADmD,CAEnD;;AACA,QAAItH,OAAO,GAAGsH,CAAC,CAAC1J,MAAhB;;AACA,QAAI,KAAKiE,KAAL,CAAW7B,OAAO,CAAC2C,IAAnB,CAAJ,EAA8B;AAC1B,UAAI,KAAKd,KAAL,CAAW7B,OAAO,CAAC2C,IAAnB,EAAyB,KAAKpC,QAA9B,KAA2CP,OAAO,CAACuE,KAAR,CAActG,MAAd,GAAuB,CAAtE,EAAyE;AACrE,aAAK4E,QAAL,CAAc7C,OAAO,CAAC2C,IAAtB;AACH,OAFD,MAGK,IAAI,KAAKvC,SAAL,CAAe6C,OAAf,CAAuBjD,OAAO,CAAC2C,IAA/B,MAAyC,CAAC,CAA9C,EAAiD;AAClD,aAAKvC,SAAL,CAAeoH,IAAf,CAAoBxH,OAAO,CAAC2C,IAA5B;AACH;AACJ;AACJ,GAZD,CAxWiD,CAqXjD;;;AACA7C,EAAAA,aAAa,CAACtC,SAAd,CAAwB0J,YAAxB,GAAuC,UAAUI,CAAV,EAAa;AAChD,SAAKC,OAAL,CAAa,OAAb,EAAsBD,CAAtB;AACA,QAAItH,OAAO,GAAGsH,CAAC,CAAC1J,MAAhB,CAFgD,CAGhD;;AACA,QAAI6J,WAAW,GAAG,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,EAAa,EAAb,EAAiB,EAAjB,EAAqB,EAArB,EAAyB,EAAzB,EAA6B,EAA7B,EAAiC,EAAjC,EAAqC,EAArC,EAAyC,EAAzC,EAA6C,GAA7C,EAAkD,GAAlD,CAAlB;;AACA,QAAIH,CAAC,CAACI,KAAF,KAAY,CAAZ,KAAkB,CAAC,KAAK7F,KAAL,CAAW7B,OAAO,CAAC2C,IAAnB,CAAD,IAA8B,KAAKd,KAAL,CAAW7B,OAAO,CAAC2C,IAAnB,KAA4B,CAAC,KAAKd,KAAL,CAAW7B,OAAO,CAAC2C,IAAnB,EAAyB,KAAKpC,QAA9B,CAA7E,CAAJ,EAA4H;AACxH;AACH;;AACD,QAAI,KAAKH,SAAL,CAAe6C,OAAf,CAAuBjD,OAAO,CAAC2C,IAA/B,MAAyC,CAAC,CAA1C,IAA+C,KAAKd,KAAL,CAAW7B,OAAO,CAAC2C,IAAnB,CAA/C,IAA2E8E,WAAW,CAACxE,OAAZ,CAAoBqE,CAAC,CAACI,KAAtB,MAAiC,CAAC,CAAjH,EAAoH;AAChH,WAAK7E,QAAL,CAAc7C,OAAO,CAAC2C,IAAtB;AACH;AACJ,GAXD,CAtXiD,CAkYjD;;;AACA7C,EAAAA,aAAa,CAACtC,SAAd,CAAwBsJ,YAAxB,GAAuC,UAAUQ,CAAV,EAAa;AAChD,SAAKC,OAAL,CAAa,OAAb,EAAsBD,CAAtB;AACA,QAAItH,OAAO,GAAGsH,CAAC,CAAC1J,MAAhB,CAFgD,CAGhD;;AACA,QAAIoC,OAAO,CAAC2F,IAAR,KAAiB,QAArB,EAA+B;AAC3B,WAAK9C,QAAL,CAAc7C,OAAO,CAAC2C,IAAtB;AACH,KAFD,MAGK,IAAI3C,OAAO,CAACyF,YAAR,CAAqB,gBAArB,MAA2C,IAA/C,EAAqD;AACtD;AACA,WAAKnF,WAAL,GAAmB,IAAnB;AACH;AACJ,GAXD,CAnYiD,CA+YjD;;;AACAR,EAAAA,aAAa,CAACtC,SAAd,CAAwBwJ,aAAxB,GAAwC,UAAUM,CAAV,EAAa;AACjD,SAAKC,OAAL,CAAa,QAAb,EAAuBD,CAAvB;AACA,QAAItH,OAAO,GAAGsH,CAAC,CAAC1J,MAAhB;AACA,SAAKiF,QAAL,CAAc7C,OAAO,CAAC2C,IAAtB;AACH,GAJD,CAhZiD,CAqZjD;;;AACA7C,EAAAA,aAAa,CAACtC,SAAd,CAAwB2J,aAAxB,GAAwC,UAAUG,CAAV,EAAa;AACjD,SAAKC,OAAL,CAAa,QAAb,EAAuBD,CAAvB,EADiD,CAEjD;AACA;;AACA,QAAI,CAAC,KAAKhH,WAAN,IAAqB,CAAC,KAAKuC,QAAL,EAA1B,EAA2C;AACvCyE,MAAAA,CAAC,CAACK,cAAF;AACH,KAFD,MAGK;AACD,WAAKrH,WAAL,GAAmB,KAAnB;AACH;AACJ,GAVD,CAtZiD,CAiajD;;;AACAR,EAAAA,aAAa,CAACtC,SAAd,CAAwB4J,YAAxB,GAAuC,YAAY;AAC/C,SAAK5D,SAAL;AACH,GAFD,CAlaiD,CAqajD;;;AACA1D,EAAAA,aAAa,CAACtC,SAAd,CAAwBwF,aAAxB,GAAwC,UAAUL,IAAV,EAAgB;AACpD,QAAI,CAAC,KAAKd,KAAL,CAAWc,IAAX,CAAL,EAAuB;AACnB;AACH;;AACD,QAAId,KAAK,GAAG7E,MAAM,CAAC+F,IAAP,CAAY,KAAKlB,KAAL,CAAWc,IAAX,CAAZ,CAAZ;AACA,QAAIiF,UAAU,GAAG,KAAjB;AACA,QAAIC,kBAAkB,GAAG,KAAzB;AACA,QAAIC,KAAK,GAAGjG,KAAK,CAACoB,OAAN,CAAc,gBAAd,CAAZ;AACA,QAAI8E,IAAI,GAAGlG,KAAK,CAACoB,OAAN,CAAc,QAAd,CAAX;AACA,SAAKQ,eAAL,CAAqBd,IAArB;;AACA,QAAIoF,IAAI,KAAK,CAAC,CAAd,EAAiB;AACbH,MAAAA,UAAU,GAAG,IAAb;AACH;;AACD,QAAIE,KAAK,KAAK,CAAC,CAAf,EAAkB;AACdD,MAAAA,kBAAkB,GAAG,IAArB;AACH;;AACD,QAAI,CAACD,UAAD,IAAgBA,UAAU,IAAIC,kBAAlC,EAAuD;AACnD,UAAIC,KAAK,KAAK,CAAC,CAAf,EAAkB;AACdjG,QAAAA,KAAK,CAACmG,MAAN,CAAaF,KAAb,EAAoB,CAApB;AACH;;AACD,UAAIC,IAAI,KAAK,CAAC,CAAd,EAAiB;AACblG,QAAAA,KAAK,CAACmG,MAAN,CAAcD,IAAI,GAAG,CAArB,EAAyB,CAAzB;AACH;;AACD,WAAK9C,eAAL,CAAqBtC,IAArB;;AACA,WAAK,IAAIS,EAAE,GAAG,CAAT,EAAY6E,OAAO,GAAGpG,KAA3B,EAAkCuB,EAAE,GAAG6E,OAAO,CAAChK,MAA/C,EAAuDmF,EAAE,EAAzD,EAA6D;AACzD,YAAIoC,IAAI,GAAGyC,OAAO,CAAC7E,EAAD,CAAlB;AACA,YAAI8E,YAAY,GAAG,KAAKvB,eAAL,CAAqB,KAAK9E,KAAL,CAAWc,IAAX,EAAiB6C,IAAjB,CAArB,EAA6CA,IAA7C,CAAnB;AACA,YAAI2C,SAAS,GAAG;AAAExF,UAAAA,IAAI,EAAEA,IAAR;AAAc6D,UAAAA,OAAO,EAAE0B;AAAvB,SAAhB;AACA,YAAIE,SAAS,GAAG;AACZC,UAAAA,SAAS,EAAE1F,IADC;AAEZ3C,UAAAA,OAAO,EAAE,KAAKS,YAFF;AAGZ+F,UAAAA,OAAO,EAAE0B;AAHG,SAAhB;;AAKA,YAAI,CAAC,KAAKI,OAAL,CAAa3F,IAAb,EAAmB6C,IAAnB,CAAD,IAA6B,CAAC,KAAK/E,YAAL,CAAkBsE,SAAlB,CAA4BwD,QAA5B,CAAqC,KAAKC,MAA1C,CAAlC,EAAqF;AACjF,eAAKC,gBAAL,CAAsB9F,IAAtB;AACA,eAAKtC,UAAL,CAAgBmH,IAAhB,CAAqBW,SAArB,EAFiF,CAGjF;;AACA,eAAK1H,YAAL,CAAkB2B,YAAlB,CAA+B,cAA/B,EAA+C,MAA/C;AACA,eAAK3B,YAAL,CAAkB2B,YAAlB,CAA+B,kBAA/B,EAAmD,KAAK3B,YAAL,CAAkBqF,EAAlB,GAAuB,OAA1E;AACA,eAAKrF,YAAL,CAAkBsE,SAAlB,CAA4B8B,GAA5B,CAAgC,KAAKhD,UAArC;AACA,eAAKpD,YAAL,CAAkBsE,SAAlB,CAA4BC,MAA5B,CAAmC,KAAKlB,UAAxC;;AACA,cAAI,CAAC,KAAKtD,WAAV,EAAuB;AACnB,iBAAKkI,kBAAL,CAAwB/F,IAAxB,EAA8BwF,SAAS,CAAC3B,OAAxC,EAAiD,KAAK/F,YAAtD;AACH,WAFD,MAGK;AACD,iBAAKkI,WAAL,CAAiBR,SAAjB;AACH;;AACDC,UAAAA,SAAS,CAACQ,YAAV,GAAyB,KAAKpI,WAA9B;AACA4H,UAAAA,SAAS,CAACS,MAAV,GAAmB,SAAnB;AACA,eAAKpI,YAAL,CAAkBsE,SAAlB,CAA4B8B,GAA5B,CAAgC,KAAKhD,UAArC;AACA,eAAKpD,YAAL,CAAkBsE,SAAlB,CAA4BC,MAA5B,CAAmC,KAAKlB,UAAxC;AACA,eAAKgF,wBAAL,CAA8BnG,IAA9B,EAAoCyF,SAApC;AACA,eAAKb,OAAL,CAAa,oBAAb,EAAmCa,SAAnC,EAnBiF,CAoBjF;;AACA,cAAI5C,IAAI,KAAK,UAAb,EAAyB;AACrB,iBAAK/E,YAAL,CAAkB2B,YAAlB,CAA+B,eAA/B,EAAgD,MAAhD;AACH;;AACD;AACH,SAzBD,MA0BK;AACD,eAAK8C,WAAL,CAAiBvC,IAAjB;AACAyF,UAAAA,SAAS,CAACS,MAAV,GAAmB,SAAnB;AACA,eAAKtB,OAAL,CAAa,oBAAb,EAAmCa,SAAnC;AACH;AACJ;AACJ,KAjDD,MAkDK;AACD;AACH;AACJ,GArED,CAtaiD,CA4ejD;;;AACAtI,EAAAA,aAAa,CAACtC,SAAd,CAAwBsL,wBAAxB,GAAmD,UAAUnG,IAAV,EAAgBoG,KAAhB,EAAuB;AACtE,QAAI,CAAC,KAAKlH,KAAL,CAAWc,IAAX,EAAiB,KAAKpC,QAAtB,CAAD,IAAoC,CAAC,KAAKE,YAAL,CAAkB8D,KAAlB,CAAwBtG,MAA7D,IAAuE,CAACa,iBAAiB,CAAC,KAAK0B,WAAN,CAA7F,EAAiH;AAC7G,WAAKA,WAAL,CAAiBwI,SAAjB,GAA6B,KAAKvI,YAAL,CAAkB8D,KAA/C;AACA,WAAK/D,WAAL,CAAiB4B,YAAjB,CAA8B,cAA9B,EAA8C,OAA9C;AACA2G,MAAAA,KAAK,CAACF,MAAN,GAAe,EAAf;AACA,WAAK3D,WAAL,CAAiBvC,IAAjB;AACH;AACJ,GAPD,CA7eiD,CAqfjD;;;AACA7C,EAAAA,aAAa,CAACtC,SAAd,CAAwB8K,OAAxB,GAAkC,UAAU3F,IAAV,EAAgB6C,IAAhB,EAAsB;AACpD,QAAIyD,MAAM,GAAG,KAAKpH,KAAL,CAAWc,IAAX,EAAiB6C,IAAjB,CAAb;AACA,QAAI0D,KAAK,GAAID,MAAM,YAAY9L,KAAlB,IAA2B,OAAO8L,MAAM,CAAC,CAAD,CAAb,KAAqB,QAAjD,GAA6DA,MAAM,CAAC,CAAD,CAAnE,GAAyEA,MAArF;AACA,QAAIE,WAAW,GAAG,KAAKtH,KAAL,CAAWc,IAAX,EAAiB6C,IAAjB,CAAlB;AACA,QAAId,IAAI,GAAG;AAAEH,MAAAA,KAAK,EAAE,KAAK9D,YAAL,CAAkB8D,KAA3B;AAAkC2E,MAAAA,KAAK,EAAEA,KAAzC;AAAgDlJ,MAAAA,OAAO,EAAE,KAAKS,YAA9D;AAA4E2I,MAAAA,WAAW,EAAE,KAAKpJ;AAA9F,KAAX;AACA,SAAKuH,OAAL,CAAa,iBAAb,EAAgC7C,IAAhC;;AACA,QAAIyE,WAAW,IAAI,OAAOA,WAAW,CAAC,CAAD,CAAlB,KAA0B,UAA7C,EAAyD;AACrD,UAAIE,EAAE,GAAGF,WAAW,CAAC,CAAD,CAApB;AACA,aAAOE,EAAE,CAAClJ,IAAH,CAAQ,IAAR,EAAc;AAAEH,QAAAA,OAAO,EAAE,KAAKS,YAAhB;AAA8B8D,QAAAA,KAAK,EAAE,KAAK9D,YAAL,CAAkB8D;AAAvD,OAAd,CAAP;AACH,KAHD,MAIK,IAAI9B,eAAe,CAACmE,WAAhB,CAA4B,KAAKnG,YAAjC,CAAJ,EAAoD;AACrD,UAAI+E,IAAI,KAAK,UAAb,EAAyB;AACrB,eAAO,IAAP;AACH;;AACD,aAAOhH,SAAS,CAAC,gBAAgBmE,IAAhB,GAAuB,WAAxB,EAAqC,KAAK3C,OAA1C,CAAT,CAA4D/B,MAA5D,GAAqE,CAA5E;AACH,KALI,MAMA;AACD,aAAOwE,eAAe,CAAC6G,cAAhB,CAA+B9D,IAA/B,EAAqCd,IAArC,CAAP;AACH;AACJ,GAnBD,CAtfiD,CA0gBjD;;;AACA5E,EAAAA,aAAa,CAACtC,SAAd,CAAwBmJ,eAAxB,GAA0C,UAAU4C,SAAV,EAAqB/D,IAArB,EAA2B;AACjE,QAAIgB,OAAO,GAAG,KAAK/F,YAAL,CAAkBgF,YAAlB,CAA+B,UAAUD,IAAV,GAAiB,UAAhD,IACV,KAAK/E,YAAL,CAAkBgF,YAAlB,CAA+B,UAAUD,IAAV,GAAiB,UAAhD,CADU,GAET+D,SAAS,YAAYpM,KAArB,IAA8B,OAAOoM,SAAS,CAAC,CAAD,CAAhB,KAAwB,QAAvD,GAAmEA,SAAS,CAAC,CAAD,CAA5E,GACKvM,MAAM,CAAC+F,IAAP,CAAY,KAAKpC,aAAjB,EAAgC1C,MAAhC,KAA2C,CAA5C,GAAiD,KAAK0C,aAAL,CAAmB6E,IAAnB,CAAjD,GAA4E,KAAK5E,eAAL,CAAqB4E,IAArB,CAHpF;AAIA,QAAIgE,OAAO,GAAGhD,OAAO,CAACiD,KAAR,CAAc,SAAd,CAAd;;AACA,QAAI,CAAC3K,iBAAiB,CAAC0K,OAAD,CAAtB,EAAiC;AAC7B,WAAK,IAAIlL,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGkL,OAAO,CAACvL,MAA5B,EAAoCK,CAAC,EAArC,EAAyC;AACrC,YAAIiG,KAAK,GAAGgF,SAAS,YAAYpM,KAArB,GAA6BoM,SAAS,CAACjL,CAAD,CAAtC,GAA4CiL,SAAxD;AACA/C,QAAAA,OAAO,GAAGA,OAAO,CAACkD,OAAR,CAAgBF,OAAO,CAAClL,CAAD,CAAvB,EAA4BiG,KAA5B,CAAV;AACH;AACJ;;AACD,WAAOiC,OAAP;AACH,GAbD,CA3gBiD,CAyhBjD;;;AACA1G,EAAAA,aAAa,CAACtC,SAAd,CAAwBkL,kBAAxB,GAA6C,UAAU/F,IAAV,EAAgB6D,OAAhB,EAAyB3B,KAAzB,EAAgC;AACzE,QAAI+D,YAAY,GAAGlK,aAAa,CAAC,KAAKkK,YAAN,EAAoB;AAChDe,MAAAA,SAAS,EAAE,KAAK9F,UADgC;AAEhDmF,MAAAA,SAAS,EAAExC,OAFqC;AAGhDoD,MAAAA,KAAK,EAAE;AAAEC,QAAAA,GAAG,EAAElH;AAAP;AAHyC,KAApB,CAAhC,CADyE,CAMzE;;AACA,QAAI,KAAKmH,WAAL,KAAqBjK,WAAW,CAACkK,OAArC,EAA8C;AAC1CnB,MAAAA,YAAY,CAAC7D,SAAb,CAAuBC,MAAvB,CAA8B,KAAKnB,UAAnC;AACA+E,MAAAA,YAAY,CAAC7D,SAAb,CAAuB8B,GAAvB,CAA2B,WAA3B;AACA+B,MAAAA,YAAY,GAAGlK,aAAa,CAAC,KAAKsL,cAAN,EAAsB;AAAEL,QAAAA,SAAS,EAAE,KAAK9F,UAAlB;AAA8BmF,QAAAA,SAAS,EAAEJ,YAAY,CAACqB;AAAtD,OAAtB,CAA5B;AACH;;AACDrB,IAAAA,YAAY,CAAC9C,EAAb,GAAkB,KAAKrF,YAAL,CAAkBkC,IAAlB,GAAyB,OAA3C,CAZyE,CAazE;;AACA,QAAI,KAAK3C,OAAL,CAAakK,aAAb,CAA2B,uBAAuBrF,KAAK,CAACiB,EAA7B,GAAkC,IAA7D,CAAJ,EAAwE;AACpE,WAAK9F,OAAL,CAAakK,aAAb,CAA2B,uBAAuBrF,KAAK,CAACiB,EAA7B,GAAkC,IAA7D,EAAmEqE,WAAnE,CAA+EvB,YAA/E;AACH,KAFD,MAGK,IAAI/D,KAAK,CAACuF,YAAN,CAAmB,sBAAnB,MAA+C,IAAnD,EAAyD;AAC1D;AACA,UAAIC,WAAW,GAAGxF,KAAK,CAACY,YAAN,CAAmB,sBAAnB,CAAlB;AACA,UAAI6E,UAAU,GAAG,KAAKtK,OAAL,CAAakK,aAAb,CAA2B,MAAMG,WAAjC,CAAjB;AACAC,MAAAA,UAAU,CAACH,WAAX,CAAuBvB,YAAvB;AACH,KALI,MAMA,IAAI,KAAK2B,eAAL,IAAwB,IAA5B,EAAkC;AACnC;AACA,WAAKA,eAAL,CAAqBpK,IAArB,CAA0B,IAA1B,EAAgC,KAAKM,YAArC,EAAmDmI,YAAnD;AACH,KAHI,MAIA;AACD,WAAKnI,YAAL,CAAkB+J,UAAlB,CAA6BC,YAA7B,CAA0C7B,YAA1C,EAAwD,KAAKnI,YAAL,CAAkBiK,WAA1E;AACH;;AACD9B,IAAAA,YAAY,CAAC+B,KAAb,CAAmBC,OAAnB,GAA6B,OAA7B;AACA,SAAK3F,eAAL,CAAqBtC,IAArB;AACA,SAAKvC,SAAL,CAAeoH,IAAf,CAAoB7E,IAApB;AACA,SAAKkI,aAAL,CAAmBlI,IAAnB;AACH,GAlCD,CA1hBiD,CA6jBjD;;;AACA7C,EAAAA,aAAa,CAACtC,SAAd,CAAwByH,eAAxB,GAA0C,UAAUtC,IAAV,EAAgB;AACtD,SAAKnC,WAAL,GAAmB/B,MAAM,CAAC,KAAKmK,YAAL,GAAoB,GAApB,GAA0B,KAAK/E,UAAhC,EAA4C,KAAKpD,YAAL,CAAkBqK,aAA9D,CAAzB;;AACA,QAAI,CAAC,KAAKtK,WAAV,EAAuB;AACnB,WAAKA,WAAL,GAAmB/B,MAAM,CAAC,KAAKmK,YAAL,GAAoB,GAApB,GAA0B,KAAK/E,UAA/B,GAA4C,QAA5C,GAAuDlB,IAAvD,GAA8D,IAA/D,EAAqE,KAAK3C,OAA1E,CAAzB;AACH;;AACD,WAAO,KAAKQ,WAAZ;AACH,GAND,CA9jBiD,CAqkBjD;;;AACAV,EAAAA,aAAa,CAACtC,SAAd,CAAwBiL,gBAAxB,GAA2C,UAAU9F,IAAV,EAAgB;AACvD,SAAK,IAAIrE,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAK+B,UAAL,CAAgBpC,MAApC,EAA4CK,CAAC,EAA7C,EAAiD;AAC7C,UAAIkH,IAAI,GAAG,KAAKnF,UAAL,CAAgB/B,CAAhB,CAAX;;AACA,UAAIkH,IAAI,CAAC7C,IAAL,KAAcA,IAAlB,EAAwB;AACpB,aAAKtC,UAAL,CAAgB2H,MAAhB,CAAuB1J,CAAvB,EAA0B,CAA1B;AACH;AACJ;AACJ,GAPD,CAtkBiD,CA8kBjD;;;AACAwB,EAAAA,aAAa,CAACtC,SAAd,CAAwBmL,WAAxB,GAAsC,UAAUR,SAAV,EAAqB;AACvD,SAAK3H,WAAL,CAAiBmK,KAAjB,CAAuBC,OAAvB,GAAiC,OAAjC;AACA,SAAKpK,WAAL,CAAiBwI,SAAjB,GAA6Bb,SAAS,CAAC3B,OAAvC;AACA,SAAKqE,aAAL,CAAmB1C,SAAS,CAACxF,IAA7B;AACH,GAJD,CA/kBiD,CAolBjD;;;AACA7C,EAAAA,aAAa,CAACtC,SAAd,CAAwB0H,WAAxB,GAAsC,UAAUvC,IAAV,EAAgB;AAClD,QAAI,KAAKnC,WAAT,EAAsB;AAClB,WAAKA,WAAL,CAAiBmK,KAAjB,CAAuBC,OAAvB,GAAiC,MAAjC;AACA,WAAKnC,gBAAL,CAAsB9F,IAAtB;AACA,WAAKlC,YAAL,CAAkBsE,SAAlB,CAA4B8B,GAA5B,CAAgC,KAAK/C,UAArC;AACA,WAAKrD,YAAL,CAAkBsE,SAAlB,CAA4BC,MAA5B,CAAmC,KAAKnB,UAAxC;AACA,WAAKpD,YAAL,CAAkB2B,YAAlB,CAA+B,cAA/B,EAA+C,OAA/C;AACH;AACJ,GARD,CArlBiD,CA8lBjD;;;AACAtC,EAAAA,aAAa,CAACtC,SAAd,CAAwBqN,aAAxB,GAAwC,UAAUlI,IAAV,EAAgB;AACpD,QAAI,CAAC,KAAKd,KAAL,CAAWc,IAAX,EAAiB,KAAKpC,QAAtB,CAAD,IAAoC,CAAC,KAAKE,YAAL,CAAkB8D,KAAlB,CAAwBtG,MAA7D,IAAuE,CAACa,iBAAiB,CAAC,KAAK0B,WAAN,CAA7F,EAAiH;AAC7G,WAAKA,WAAL,CAAiBwI,SAAjB,GAA6B,KAAKvI,YAAL,CAAkB8D,KAA/C;AACA,WAAK/D,WAAL,CAAiB4B,YAAjB,CAA8B,cAA9B,EAA8C,OAA9C;AACA,WAAK8C,WAAL,CAAiBvC,IAAjB;AACH;AACJ,GAND,CA/lBiD,CAsmBjD;;;AACA7C,EAAAA,aAAa,CAAC8G,WAAd,GAA4B,UAAU/B,KAAV,EAAiB;AACzC,QAAIkG,SAAS,GAAGlG,KAAK,CAACY,YAAN,CAAmB,MAAnB,CAAhB;AACA,WAAOsF,SAAS,KAAKA,SAAS,KAAK,UAAd,IAA4BA,SAAS,KAAK,OAA1C,IAAqDA,SAAS,KAAK,QAAxE,CAAhB;AACH,GAHD;;AAIA,MAAItI,eAAJ,CA3mBiD,CA4mBjD;;AACA3C,EAAAA,aAAa,CAACwJ,cAAd,GAA+B;AAC3B/I,IAAAA,QAAQ,EAAE,UAAUyK,MAAV,EAAkB;AACxB,aAAOA,MAAM,CAACzG,KAAP,CAAatG,MAAb,GAAsB,CAA7B;AACH,KAH0B;AAI3B4C,IAAAA,KAAK,EAAE,UAAUmK,MAAV,EAAkB;AACrB,aAAO3L,KAAK,CAACC,KAAN,CAAY2L,IAAZ,CAAiBD,MAAM,CAACzG,KAAxB,CAAP;AACH,KAN0B;AAO3BzD,IAAAA,GAAG,EAAE,UAAUkK,MAAV,EAAkB;AACnB,aAAO3L,KAAK,CAACG,GAAN,CAAUyL,IAAV,CAAeD,MAAM,CAACzG,KAAtB,CAAP;AACH,KAT0B;AAU3BvD,IAAAA,OAAO,EAAE,UAAUgK,MAAV,EAAkB;AACvB,aAAO3L,KAAK,CAACI,QAAN,CAAewL,IAAf,CAAoBD,MAAM,CAACzG,KAA3B,CAAP;AACH,KAZ0B;AAa3B7C,IAAAA,GAAG,EAAE,UAAUsJ,MAAV,EAAkB;AACnB,aAAO3L,KAAK,CAACM,KAAN,CAAYsL,IAAZ,CAAiBD,MAAM,CAACzG,KAAxB,CAAP;AACH,KAf0B;AAgB3BtD,IAAAA,UAAU,EAAE,UAAU+J,MAAV,EAAkB;AAC1B,aAAO3L,KAAK,CAACO,UAAN,CAAiBqL,IAAjB,CAAsBD,MAAM,CAACzG,KAA7B,CAAP;AACH,KAlB0B;AAmB3BrD,IAAAA,MAAM,EAAE,UAAU8J,MAAV,EAAkB;AACtB,aAAO,CAACE,KAAK,CAACC,MAAM,CAACH,MAAM,CAACzG,KAAR,CAAP,CAAN,IAAgCyG,MAAM,CAACzG,KAAP,CAAatB,OAAb,CAAqB,GAArB,MAA8B,CAAC,CAAtE;AACH,KArB0B;AAsB3B9B,IAAAA,MAAM,EAAE,UAAU6J,MAAV,EAAkB;AACtB,aAAO3L,KAAK,CAACK,MAAN,CAAauL,IAAb,CAAkBD,MAAM,CAACzG,KAAzB,CAAP;AACH,KAxB0B;AAyB3BnD,IAAAA,SAAS,EAAE,UAAU4J,MAAV,EAAkB;AACzB,aAAOA,MAAM,CAACzG,KAAP,CAAatG,MAAb,IAAuB+M,MAAM,CAAC9B,KAArC;AACH,KA3B0B;AA4B3B7H,IAAAA,SAAS,EAAE,UAAU2J,MAAV,EAAkB;AACzB,aAAOA,MAAM,CAACzG,KAAP,CAAatG,MAAb,IAAuB+M,MAAM,CAAC9B,KAArC;AACH,KA9B0B;AA+B3B5H,IAAAA,WAAW,EAAE,UAAU0J,MAAV,EAAkB;AAC3B,UAAI9B,KAAK,GAAG8B,MAAM,CAAC9B,KAAnB;AACA,aAAO8B,MAAM,CAACzG,KAAP,CAAatG,MAAb,IAAuBiL,KAAK,CAAC,CAAD,CAA5B,IAAmC8B,MAAM,CAACzG,KAAP,CAAatG,MAAb,IAAuBiL,KAAK,CAAC,CAAD,CAAtE;AACH,KAlC0B;AAmC3B3H,IAAAA,KAAK,EAAE,UAAUyJ,MAAV,EAAkB;AACrB,UAAI9B,KAAK,GAAG8B,MAAM,CAAC9B,KAAnB;AACA,aAAO,CAACgC,KAAK,CAACC,MAAM,CAACH,MAAM,CAACzG,KAAR,CAAP,CAAN,IAAgC4G,MAAM,CAACH,MAAM,CAACzG,KAAR,CAAN,IAAwB2E,KAAK,CAAC,CAAD,CAA7D,IAAoEiC,MAAM,CAACH,MAAM,CAACzG,KAAR,CAAN,IAAwB2E,KAAK,CAAC,CAAD,CAAxG;AACH,KAtC0B;AAuC3BnI,IAAAA,IAAI,EAAE,UAAUiK,MAAV,EAAkB;AACpB,aAAO,CAACE,KAAK,CAAC,IAAIE,IAAJ,CAASJ,MAAM,CAACzG,KAAhB,EAAuB8G,OAAvB,EAAD,CAAb;AACH,KAzC0B;AA0C3B7J,IAAAA,GAAG,EAAE,UAAUwJ,MAAV,EAAkB;AACnB,UAAI,CAACE,KAAK,CAACC,MAAM,CAACH,MAAM,CAACzG,KAAR,CAAP,CAAV,EAAkC;AAC9B;AACA,eAAO,CAACyG,MAAM,CAACzG,KAAR,IAAiByG,MAAM,CAAC9B,KAA/B;AACH,OAJkB,CAKnB;;;AACA,aAAO,IAAIkC,IAAJ,CAASJ,MAAM,CAACzG,KAAhB,EAAuB8G,OAAvB,MAAoC,IAAID,IAAJ,CAASxF,IAAI,CAACC,KAAL,CAAWD,IAAI,CAAC0F,SAAL,CAAeN,MAAM,CAAC9B,KAAtB,CAAX,CAAT,EAAmDmC,OAAnD,EAA3C;AACH,KAjD0B;AAkD3B5J,IAAAA,GAAG,EAAE,UAAUuJ,MAAV,EAAkB;AACnB,UAAI,CAACE,KAAK,CAACC,MAAM,CAACH,MAAM,CAACzG,KAAR,CAAP,CAAV,EAAkC;AAC9B;AACA,eAAO,CAACyG,MAAM,CAACzG,KAAR,IAAiByG,MAAM,CAAC9B,KAA/B;AACH,OAHD,MAIK,IAAK8B,MAAM,CAACzG,KAAR,CAAetB,OAAf,CAAuB,GAAvB,MAAgC,CAAC,CAArC,EAAwC;AACzC,YAAIsI,IAAI,GAAIP,MAAM,CAACzG,KAAR,CAAemF,OAAf,CAAuB,IAAvB,EAA6B,EAA7B,CAAX;AACA,eAAO8B,UAAU,CAACD,IAAD,CAAV,IAAoBP,MAAM,CAAC9B,KAAlC;AACH,OAHI,MAIA;AACD;AACA,eAAO,IAAIkC,IAAJ,CAASJ,MAAM,CAACzG,KAAhB,EAAuB8G,OAAvB,MAAoC,IAAID,IAAJ,CAASxF,IAAI,CAACC,KAAL,CAAWD,IAAI,CAAC0F,SAAL,CAAeN,MAAM,CAAC9B,KAAtB,CAAX,CAAT,EAAmDmC,OAAnD,EAA3C;AACH;AACJ,KA/D0B;AAgE3BhM,IAAAA,KAAK,EAAE,UAAU2L,MAAV,EAAkB;AACrB,aAAO,IAAIzL,MAAJ,CAAWyL,MAAM,CAAC9B,KAAlB,EAAyB+B,IAAzB,CAA8BD,MAAM,CAACzG,KAArC,CAAP;AACH,KAlE0B;AAmE3B3C,IAAAA,OAAO,EAAE,UAAUoJ,MAAV,EAAkB;AACvB,UAAIS,SAAS,GAAGT,MAAM,CAAC5B,WAAP,CAAmBc,aAAnB,CAAiC,MAAMc,MAAM,CAAC9B,KAA9C,CAAhB;AACA8B,MAAAA,MAAM,CAAC9B,KAAP,GAAeuC,SAAS,CAAClH,KAAzB;AACA,aAAOyG,MAAM,CAAC9B,KAAP,KAAiB8B,MAAM,CAACzG,KAA/B;AACH;AAvE0B,GAA/B;;AAyEA7G,EAAAA,UAAU,CAAC,CACPsB,QAAQ,CAAC,EAAD,CADD,CAAD,EAEPc,aAAa,CAACtC,SAFP,EAEkB,QAFlB,EAE4B,KAAK,CAFjC,CAAV;;AAGAE,EAAAA,UAAU,CAAC,CACPsB,QAAQ,CAAC,UAAD,CADD,CAAD,EAEPc,aAAa,CAACtC,SAFP,EAEkB,QAFlB,EAE4B,KAAK,CAFjC,CAAV;;AAGAE,EAAAA,UAAU,CAAC,CACPsB,QAAQ,EADD,CAAD,EAEPc,aAAa,CAACtC,SAFP,EAEkB,OAFlB,EAE2B,KAAK,CAFhC,CAAV;;AAGAE,EAAAA,UAAU,CAAC,CACPsB,QAAQ,CAAC,SAAD,CADD,CAAD,EAEPc,aAAa,CAACtC,SAFP,EAEkB,YAFlB,EAEgC,KAAK,CAFrC,CAAV;;AAGAE,EAAAA,UAAU,CAAC,CACPsB,QAAQ,CAAC,SAAD,CADD,CAAD,EAEPc,aAAa,CAACtC,SAFP,EAEkB,YAFlB,EAEgC,KAAK,CAFrC,CAAV;;AAGAE,EAAAA,UAAU,CAAC,CACPsB,QAAQ,CAAC,OAAD,CADD,CAAD,EAEPc,aAAa,CAACtC,SAFP,EAEkB,cAFlB,EAEkC,KAAK,CAFvC,CAAV;;AAGAE,EAAAA,UAAU,CAAC,CACPsB,QAAQ,CAAC,KAAD,CADD,CAAD,EAEPc,aAAa,CAACtC,SAFP,EAEkB,gBAFlB,EAEoC,KAAK,CAFzC,CAAV;;AAGAE,EAAAA,UAAU,CAAC,CACPsB,QAAQ,CAACa,WAAW,CAAC6L,KAAb,CADD,CAAD,EAEP5L,aAAa,CAACtC,SAFP,EAEkB,aAFlB,EAEiC,KAAK,CAFtC,CAAV;;AAGAE,EAAAA,UAAU,CAAC,CACPwB,KAAK,EADE,CAAD,EAEPY,aAAa,CAACtC,SAFP,EAEkB,UAFlB,EAE8B,KAAK,CAFnC,CAAV;;AAGAE,EAAAA,UAAU,CAAC,CACPwB,KAAK,EADE,CAAD,EAEPY,aAAa,CAACtC,SAFP,EAEkB,OAFlB,EAE2B,KAAK,CAFhC,CAAV;;AAGAE,EAAAA,UAAU,CAAC,CACPwB,KAAK,EADE,CAAD,EAEPY,aAAa,CAACtC,SAFP,EAEkB,OAFlB,EAE2B,KAAK,CAFhC,CAAV;;AAGAE,EAAAA,UAAU,CAAC,CACPwB,KAAK,EADE,CAAD,EAEPY,aAAa,CAACtC,SAFP,EAEkB,QAFlB,EAE4B,KAAK,CAFjC,CAAV;;AAGAE,EAAAA,UAAU,CAAC,CACPwB,KAAK,EADE,CAAD,EAEPY,aAAa,CAACtC,SAFP,EAEkB,QAFlB,EAE4B,KAAK,CAFjC,CAAV;;AAGAE,EAAAA,UAAU,CAAC,CACPwB,KAAK,EADE,CAAD,EAEPY,aAAa,CAACtC,SAFP,EAEkB,iBAFlB,EAEqC,KAAK,CAF1C,CAAV;;AAGAE,EAAAA,UAAU,CAAC,CACPwB,KAAK,EADE,CAAD,EAEPY,aAAa,CAACtC,SAFP,EAEkB,oBAFlB,EAEwC,KAAK,CAF7C,CAAV;;AAGAE,EAAAA,UAAU,CAAC,CACPwB,KAAK,EADE,CAAD,EAEPY,aAAa,CAACtC,SAFP,EAEkB,iBAFlB,EAEqC,KAAK,CAF1C,CAAV;;AAGAsC,EAAAA,aAAa,GAAG2C,eAAe,GAAG/E,UAAU,CAAC,CACzCuB,qBADyC,CAAD,EAEzCa,aAFyC,CAA5C;AAGA,SAAOA,aAAP;AACH,CA1uBkC,CA0uBjCnB,IA1uBiC,CAAnC;;AA2uBA,SAASmB,aAAT","sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { selectAll, select, createElement, Base, detach } from '@syncfusion/ej2-base';\nimport { extend, isNullOrUndefined, EventHandler } from '@syncfusion/ej2-base';\nimport { Property, NotifyPropertyChanges, Event, onIntlChange } from '@syncfusion/ej2-base';\nimport { L10n } from '@syncfusion/ej2-base';\n/**\n * global declarations\n */\n// tslint:disable-next-line:no-any\nexport var regex = {\n    EMAIL: new RegExp('^[A-Za-z0-9._%+-]{1,}@[A-Za-z0-9._%+-]{1,}([.]{1}[a-zA-Z0-9]{2,}' +\n        '|[.]{1}[a-zA-Z0-9]{2,4}[.]{1}[a-zA-Z0-9]{2,4})$'),\n    URL: /^(?:http(s)?:\\/\\/)?[\\w.-]+(?:\\.[\\w\\.-]+)+[\\w\\-\\._~:/?#[\\]@!\\$&'\\(\\)\\*\\+,;=.]+$/m,\n    DATE_ISO: new RegExp('^([0-9]{4})-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])$'),\n    DIGITS: new RegExp('^[0-9]*$'),\n    PHONE: new RegExp('^[+]?[0-9]{9,13}$'),\n    CREDITCARD: new RegExp('^\\\\d{13,16}$')\n};\n/**\n * ErrorOption values\n * @private\n */\nexport var ErrorOption;\n(function (ErrorOption) {\n    /**\n     * Defines the error message.\n     */\n    ErrorOption[ErrorOption[\"Message\"] = 0] = \"Message\";\n    /**\n     * Defines the error element type.\n     */\n    ErrorOption[ErrorOption[\"Label\"] = 1] = \"Label\";\n})(ErrorOption || (ErrorOption = {}));\n/**\n * FormValidator class enables you to validate the form fields based on your defined rules\n * ```html\n * <form id='formId'>\n *  <input type='text' name='Name' />\n *  <input type='text' name='Age' />\n * </form>\n * <script>\n *   let formObject = new FormValidator('#formId', {\n *      rules: { Name: { required: true }, Age: { range: [18, 30] } };\n *   });\n *   formObject.validate();\n * </script>\n * ```\n */\nvar FormValidator = /** @class */ (function (_super) {\n    __extends(FormValidator, _super);\n    // Initializes the FormValidator \n    function FormValidator(element, options) {\n        var _this = _super.call(this, options, element) || this;\n        _this.validated = [];\n        _this.errorRules = [];\n        _this.allowSubmit = false;\n        _this.required = 'required';\n        _this.infoElement = null;\n        _this.inputElement = null;\n        _this.selectQuery = 'input:not([type=reset]):not([type=button]), select, textarea';\n        // tslint:disable-next-line:no-any\n        _this.localyMessage = {};\n        /**\n         * Specifies the default messages for validation rules.\n         * @default { List of validation message }\n         */\n        _this.defaultMessages = {\n            required: 'This field is required.',\n            email: 'Please enter a valid email address.',\n            url: 'Please enter a valid URL.',\n            date: 'Please enter a valid date.',\n            dateIso: 'Please enter a valid date ( ISO ).',\n            creditcard: 'Please enter valid card number',\n            number: 'Please enter a valid number.',\n            digits: 'Please enter only digits.',\n            maxLength: 'Please enter no more than {0} characters.',\n            minLength: 'Please enter at least {0} characters.',\n            rangeLength: 'Please enter a value between {0} and {1} characters long.',\n            range: 'Please enter a value between {0} and {1}.',\n            max: 'Please enter a value less than or equal to {0}.',\n            min: 'Please enter a value greater than or equal to {0}.',\n            regex: 'Please enter a correct value.',\n            tel: 'Please enter a valid phone number.',\n            pattern: 'Please enter a correct pattern value.',\n            equalTo: 'Please enter the valid match text',\n        };\n        if (typeof _this.rules === 'undefined') {\n            _this.rules = {};\n        }\n        _this.l10n = new L10n('formValidator', _this.defaultMessages, _this.locale);\n        if (_this.locale) {\n            _this.localeFunc();\n        }\n        onIntlChange.on('notifyExternalChange', _this.afterLocalization, _this);\n        element = typeof element === 'string' ? select(element, document) : element;\n        // Set novalidate to prevent default HTML5 form validation\n        if (_this.element != null) {\n            _this.element.setAttribute('novalidate', '');\n            _this.inputElements = selectAll(_this.selectQuery, _this.element);\n            _this.createHTML5Rules();\n            _this.wireEvents();\n        }\n        else {\n            return undefined;\n        }\n        return _this;\n    }\n    FormValidator_1 = FormValidator;\n    // tslint:enable\n    /**\n     * Add validation rules to the corresponding input element based on `name` attribute.\n     * @param {string} name `name` of form field.\n     * @param {Object} rules Validation rules for the corresponding element.\n     * @return {void}\n     */\n    FormValidator.prototype.addRules = function (name, rules) {\n        if (name) {\n            if (this.rules.hasOwnProperty(name)) {\n                extend(this.rules[name], rules, {});\n            }\n            else {\n                this.rules[name] = rules;\n            }\n        }\n    };\n    /**\n     * Remove validation to the corresponding field based on name attribute.\n     * When no parameter is passed, remove all the validations in the form.\n     * @param {string} name Input name attribute value.\n     * @param {string[]} rules List of validation rules need to be remove from the corresponding element.\n     * @return {void}\n     */\n    FormValidator.prototype.removeRules = function (name, rules) {\n        if (!name && !rules) {\n            this.rules = {};\n        }\n        else if (this.rules[name] && !rules) {\n            delete this.rules[name];\n        }\n        else if (!isNullOrUndefined(this.rules[name] && rules)) {\n            for (var i = 0; i < rules.length; i++) {\n                delete this.rules[name][rules[i]];\n            }\n        }\n        else {\n            return;\n        }\n    };\n    /**\n     * Validate the current form values using defined rules.\n     * Returns `true` when the form is valid otherwise `false`\n     * @param {string} selected - Optional parameter to validate specified element.\n     * @return {boolean}\n     */\n    FormValidator.prototype.validate = function (selected) {\n        var rules = Object.keys(this.rules);\n        if (selected && rules.length) {\n            this.validateRules(selected);\n            //filter the selected element it don't have any valid input element\n            return rules.indexOf(selected) !== -1 && this.errorRules.filter(function (data) {\n                return data.name === selected;\n            }).length === 0;\n        }\n        else {\n            this.errorRules = [];\n            for (var _i = 0, rules_1 = rules; _i < rules_1.length; _i++) {\n                var name_1 = rules_1[_i];\n                this.validateRules(name_1);\n            }\n            return this.errorRules.length === 0;\n        }\n    };\n    /**\n     * Reset the value of all the fields in form.\n     * @return {void}\n     */\n    FormValidator.prototype.reset = function () {\n        this.element.reset();\n        this.clearForm();\n    };\n    /**\n     * Get input element by name.\n     * @param {string} name - Input element name attribute value.\n     * @return {HTMLInputElement}\n     */\n    FormValidator.prototype.getInputElement = function (name) {\n        this.inputElement = (select('[name=\"' + name + '\"]', this.element));\n        return this.inputElement;\n    };\n    /**\n     * Destroy the form validator object and error elements.\n     * @return {void}\n     */\n    FormValidator.prototype.destroy = function () {\n        this.reset();\n        this.unwireEvents();\n        this.rules = {};\n        var elements = selectAll('.' + this.errorClass + ', .' + this.validClass, this.element);\n        for (var _i = 0, elements_1 = elements; _i < elements_1.length; _i++) {\n            var element = elements_1[_i];\n            detach(element);\n        }\n        _super.prototype.destroy.call(this);\n        onIntlChange.off('notifyExternalChange', this.afterLocalization);\n    };\n    /**\n     * @private\n     */\n    FormValidator.prototype.onPropertyChanged = function (newProp, oldProp) {\n        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            switch (prop) {\n                case 'locale':\n                    this.localeFunc();\n                    break;\n            }\n        }\n    };\n    ;\n    /**\n     * @private\n     */\n    FormValidator.prototype.localeFunc = function () {\n        for (var _i = 0, _a = Object.keys(this.defaultMessages); _i < _a.length; _i++) {\n            var key = _a[_i];\n            this.l10n.setLocale(this.locale);\n            var value = this.l10n.getConstant(key);\n            this.localyMessage[key] = value;\n        }\n    };\n    /**\n     * @private\n     */\n    FormValidator.prototype.getModuleName = function () {\n        return 'formValidator';\n    };\n    /**\n     * @private\n     */\n    // tslint:disable-next-line:no-any\n    FormValidator.prototype.afterLocalization = function (args) {\n        this.locale = args.locale;\n        this.localeFunc();\n    };\n    /**\n     * Allows you to refresh the form validator base events to the elements inside the form.\n     * @return {void}\n     */\n    FormValidator.prototype.refresh = function () {\n        this.unwireEvents();\n        this.inputElements = selectAll(this.selectQuery, this.element);\n        this.wireEvents();\n    };\n    FormValidator.prototype.clearForm = function () {\n        this.errorRules = [];\n        this.validated = [];\n        var elements = selectAll(this.selectQuery, this.element);\n        for (var _i = 0, elements_2 = elements; _i < elements_2.length; _i++) {\n            var element = elements_2[_i];\n            var input = element;\n            input.removeAttribute('aria-invalid');\n            input.classList.remove(this.errorClass);\n            if (input.name.length > 0) {\n                this.getInputElement(input.name);\n                this.getErrorElement(input.name);\n                this.hideMessage(input.name);\n            }\n            input.classList.remove(this.validClass);\n        }\n    };\n    FormValidator.prototype.createHTML5Rules = function () {\n        var defRules = ['required', 'validateHidden', 'regex', 'rangeLength', 'maxLength', 'minLength', 'dateIso', 'digits',\n            'pattern', 'data-val-required', 'type', 'data-validation', 'min', 'max', 'range', 'equalTo', 'data-val-minlength-min',\n            'data-val-equalto-other', 'data-val-maxlength-max', 'data-val-range-min', 'data-val-regex-pattern', 'data-val-length-max',\n            'data-val-creditcard', 'data-val-phone'];\n        var acceptedTypes = ['hidden', 'email', 'url', 'date', 'number', 'tel'];\n        for (var _i = 0, _a = (this.inputElements); _i < _a.length; _i++) {\n            var input = _a[_i];\n            // Default attribute rules \n            var allRule = {};\n            for (var _b = 0, defRules_1 = defRules; _b < defRules_1.length; _b++) {\n                var rule = defRules_1[_b];\n                if (input.getAttribute(rule) !== null) {\n                    switch (rule) {\n                        case 'required':\n                            this.defRule(input, allRule, rule, input.required);\n                            break;\n                        case 'data-validation':\n                            rule = input.getAttribute(rule);\n                            this.defRule(input, allRule, rule, true);\n                            break;\n                        case 'type':\n                            if (acceptedTypes.indexOf(input.type) !== -1) {\n                                this.defRule(input, allRule, input.type, true);\n                            }\n                            break;\n                        case 'rangeLength':\n                        case 'range':\n                            this.defRule(input, allRule, rule, JSON.parse(input.getAttribute(rule)));\n                            break;\n                        case 'equalTo':\n                            var id = input.getAttribute(rule);\n                            this.defRule(input, allRule, rule, id);\n                            break;\n                        default:\n                            if (input.getAttribute('data-val') === 'true') {\n                                this.annotationRule(input, allRule, rule, input.getAttribute(rule));\n                            }\n                            else {\n                                this.defRule(input, allRule, rule, input.getAttribute(rule));\n                            }\n                    }\n                }\n            }\n            //adding pattern type validation\n            if (Object.keys(allRule).length !== 0) {\n                this.addRules(input.name, allRule);\n            }\n        }\n    };\n    FormValidator.prototype.annotationRule = function (input, ruleCon, ruleName, value) {\n        var annotationRule = ruleName.split('-');\n        var rulesList = ['required', 'creditcard', 'phone', 'maxlength', 'minlength', 'range', 'regex', 'equalto'];\n        var ruleFirstName = annotationRule[annotationRule.length - 1];\n        var ruleSecondName = annotationRule[annotationRule.length - 2];\n        if (rulesList.indexOf(ruleFirstName) !== -1) {\n            switch (ruleFirstName) {\n                case 'required':\n                    this.defRule(input, ruleCon, 'required', value);\n                    break;\n                case 'creditcard':\n                    this.defRule(input, ruleCon, 'creditcard', value);\n                    break;\n                case 'phone':\n                    this.defRule(input, ruleCon, 'tel', value);\n                    break;\n            }\n        }\n        else if (rulesList.indexOf(ruleSecondName) !== -1) {\n            switch (ruleSecondName) {\n                case 'maxlength':\n                    this.defRule(input, ruleCon, 'maxLength', value);\n                    break;\n                case 'minlength':\n                    this.defRule(input, ruleCon, 'minLength', value);\n                    break;\n                case 'range':\n                    var minvalue = input.getAttribute('data-val-range-min');\n                    var maxvalue = input.getAttribute('data-val-range-max');\n                    this.defRule(input, ruleCon, 'range', [minvalue, maxvalue]);\n                    break;\n                case 'equalto':\n                    var id = input.getAttribute(ruleName).split('.');\n                    this.defRule(input, ruleCon, 'equalTo', id[id.length - 1]);\n                    break;\n                case 'regex':\n                    this.defRule(input, ruleCon, 'regex', value);\n                    break;\n            }\n        }\n    };\n    FormValidator.prototype.defRule = function (input, ruleCon, ruleName, value) {\n        var message = input.getAttribute('data-' + ruleName + '-message');\n        var annotationMessage = input.getAttribute('data-val-' + ruleName);\n        var customMessage;\n        if (this.rules[input.name] && ruleName !== 'validateHidden' && ruleName !== 'hidden') {\n            this.getInputElement(input.name);\n            customMessage = this.getErrorMessage(this.rules[input.name][ruleName], ruleName);\n        }\n        if (message) {\n            value = [value, message];\n        }\n        else if (annotationMessage) {\n            value = [value, annotationMessage];\n        }\n        else if (customMessage) {\n            value = [value, customMessage];\n        }\n        ruleCon[ruleName] = value;\n    };\n    // Wire events to the form elements\n    FormValidator.prototype.wireEvents = function () {\n        for (var _i = 0, _a = (this.inputElements); _i < _a.length; _i++) {\n            var input = _a[_i];\n            if (FormValidator_1.isCheckable(input)) {\n                EventHandler.add(input, 'click', this.clickHandler, this);\n            }\n            else if (input.tagName === 'SELECT') {\n                EventHandler.add(input, 'change', this.changeHandler, this);\n            }\n            else {\n                EventHandler.add(input, 'focusout', this.focusOutHandler, this);\n                EventHandler.add(input, 'keyup', this.keyUpHandler, this);\n            }\n        }\n        EventHandler.add(this.element, 'submit', this.submitHandler, this);\n        EventHandler.add(this.element, 'reset', this.resetHandler, this);\n    };\n    // UnWire events to the form elements\n    FormValidator.prototype.unwireEvents = function () {\n        for (var _i = 0, _a = (this.inputElements); _i < _a.length; _i++) {\n            var input = _a[_i];\n            EventHandler.clearEvents(input);\n        }\n        EventHandler.remove(this.element, 'submit', this.submitHandler);\n        EventHandler.remove(this.element, 'reset', this.resetHandler);\n    };\n    // Handle input element focusout event\n    FormValidator.prototype.focusOutHandler = function (e) {\n        this.trigger('focusout', e);\n        //FormValidator.triggerCallback(this.focusout, e);\n        var element = e.target;\n        if (this.rules[element.name]) {\n            if (this.rules[element.name][this.required] || element.value.length > 0) {\n                this.validate(element.name);\n            }\n            else if (this.validated.indexOf(element.name) === -1) {\n                this.validated.push(element.name);\n            }\n        }\n    };\n    // Handle input element keyup event\n    FormValidator.prototype.keyUpHandler = function (e) {\n        this.trigger('keyup', e);\n        var element = e.target;\n        // List of keys need to prevent while validation\n        var excludeKeys = [16, 17, 18, 20, 35, 36, 37, 38, 39, 40, 45, 144, 225];\n        if (e.which === 9 && (!this.rules[element.name] || (this.rules[element.name] && !this.rules[element.name][this.required]))) {\n            return;\n        }\n        if (this.validated.indexOf(element.name) !== -1 && this.rules[element.name] && excludeKeys.indexOf(e.which) === -1) {\n            this.validate(element.name);\n        }\n    };\n    // Handle input click event\n    FormValidator.prototype.clickHandler = function (e) {\n        this.trigger('click', e);\n        var element = e.target;\n        // If element type is not submit allow validation\n        if (element.type !== 'submit') {\n            this.validate(element.name);\n        }\n        else if (element.getAttribute('formnovalidate') !== null) {\n            // Prevent form validation, if submit button has formnovalidate attribute\n            this.allowSubmit = true;\n        }\n    };\n    // Handle input change event\n    FormValidator.prototype.changeHandler = function (e) {\n        this.trigger('change', e);\n        var element = e.target;\n        this.validate(element.name);\n    };\n    // Handle form submit event\n    FormValidator.prototype.submitHandler = function (e) {\n        this.trigger('submit', e);\n        //FormValidator.triggerCallback(this.submit, e);\n        // Prevent form submit if validation failed\n        if (!this.allowSubmit && !this.validate()) {\n            e.preventDefault();\n        }\n        else {\n            this.allowSubmit = false;\n        }\n    };\n    // Handle form reset\n    FormValidator.prototype.resetHandler = function () {\n        this.clearForm();\n    };\n    // Validate each rule based on input element name\n    FormValidator.prototype.validateRules = function (name) {\n        if (!this.rules[name]) {\n            return;\n        }\n        var rules = Object.keys(this.rules[name]);\n        var hiddenType = false;\n        var validateHiddenType = false;\n        var vhPos = rules.indexOf('validateHidden');\n        var hPos = rules.indexOf('hidden');\n        this.getInputElement(name);\n        if (hPos !== -1) {\n            hiddenType = true;\n        }\n        if (vhPos !== -1) {\n            validateHiddenType = true;\n        }\n        if (!hiddenType || (hiddenType && validateHiddenType)) {\n            if (vhPos !== -1) {\n                rules.splice(vhPos, 1);\n            }\n            if (hPos !== -1) {\n                rules.splice((hPos - 1), 1);\n            }\n            this.getErrorElement(name);\n            for (var _i = 0, rules_2 = rules; _i < rules_2.length; _i++) {\n                var rule = rules_2[_i];\n                var errorMessage = this.getErrorMessage(this.rules[name][rule], rule);\n                var errorRule = { name: name, message: errorMessage };\n                var eventArgs = {\n                    inputName: name,\n                    element: this.inputElement,\n                    message: errorMessage\n                };\n                if (!this.isValid(name, rule) && !this.inputElement.classList.contains(this.ignore)) {\n                    this.removeErrorRules(name);\n                    this.errorRules.push(errorRule);\n                    // Set aria attributes to invalid elements\n                    this.inputElement.setAttribute('aria-invalid', 'true');\n                    this.inputElement.setAttribute('aria-describedby', this.inputElement.id + '-info');\n                    this.inputElement.classList.add(this.errorClass);\n                    this.inputElement.classList.remove(this.validClass);\n                    if (!this.infoElement) {\n                        this.createErrorElement(name, errorRule.message, this.inputElement);\n                    }\n                    else {\n                        this.showMessage(errorRule);\n                    }\n                    eventArgs.errorElement = this.infoElement;\n                    eventArgs.status = 'failure';\n                    this.inputElement.classList.add(this.errorClass);\n                    this.inputElement.classList.remove(this.validClass);\n                    this.optionalValidationStatus(name, eventArgs);\n                    this.trigger('validationComplete', eventArgs);\n                    // Set aria-required to required rule elements\n                    if (rule === 'required') {\n                        this.inputElement.setAttribute('aria-required', 'true');\n                    }\n                    break;\n                }\n                else {\n                    this.hideMessage(name);\n                    eventArgs.status = 'success';\n                    this.trigger('validationComplete', eventArgs);\n                }\n            }\n        }\n        else {\n            return;\n        }\n    };\n    // Update the optional validation status\n    FormValidator.prototype.optionalValidationStatus = function (name, refer) {\n        if (!this.rules[name][this.required] && !this.inputElement.value.length && !isNullOrUndefined(this.infoElement)) {\n            this.infoElement.innerHTML = this.inputElement.value;\n            this.infoElement.setAttribute('aria-invalid', 'false');\n            refer.status = '';\n            this.hideMessage(name);\n        }\n    };\n    // Check the input element whether it's value satisfy the validation rule or not\n    FormValidator.prototype.isValid = function (name, rule) {\n        var params = this.rules[name][rule];\n        var param = (params instanceof Array && typeof params[1] === 'string') ? params[0] : params;\n        var currentRule = this.rules[name][rule];\n        var args = { value: this.inputElement.value, param: param, element: this.inputElement, formElement: this.element };\n        this.trigger('validationBegin', args);\n        if (currentRule && typeof currentRule[0] === 'function') {\n            var fn = currentRule[0];\n            return fn.call(this, { element: this.inputElement, value: this.inputElement.value });\n        }\n        else if (FormValidator_1.isCheckable(this.inputElement)) {\n            if (rule !== 'required') {\n                return true;\n            }\n            return selectAll('input[name=' + name + ']:checked', this.element).length > 0;\n        }\n        else {\n            return FormValidator_1.checkValidator[rule](args);\n        }\n    };\n    // Return default error message or custom error message \n    FormValidator.prototype.getErrorMessage = function (ruleValue, rule) {\n        var message = this.inputElement.getAttribute('data-' + rule + '-message') ?\n            this.inputElement.getAttribute('data-' + rule + '-message') :\n            (ruleValue instanceof Array && typeof ruleValue[1] === 'string') ? ruleValue[1] :\n                (Object.keys(this.localyMessage).length !== 0) ? this.localyMessage[rule] : this.defaultMessages[rule];\n        var formats = message.match(/{(\\d)}/g);\n        if (!isNullOrUndefined(formats)) {\n            for (var i = 0; i < formats.length; i++) {\n                var value = ruleValue instanceof Array ? ruleValue[i] : ruleValue;\n                message = message.replace(formats[i], value);\n            }\n        }\n        return message;\n    };\n    // Create error element based on name and error message\n    FormValidator.prototype.createErrorElement = function (name, message, input) {\n        var errorElement = createElement(this.errorElement, {\n            className: this.errorClass,\n            innerHTML: message,\n            attrs: { for: name }\n        });\n        // Create message design if errorOption is message\n        if (this.errorOption === ErrorOption.Message) {\n            errorElement.classList.remove(this.errorClass);\n            errorElement.classList.add('e-message');\n            errorElement = createElement(this.errorContainer, { className: this.errorClass, innerHTML: errorElement.outerHTML });\n        }\n        errorElement.id = this.inputElement.name + '-info';\n        // Append error message into MVC error message element\n        if (this.element.querySelector('[data-valmsg-for=\"' + input.id + '\"]')) {\n            this.element.querySelector('[data-valmsg-for=\"' + input.id + '\"]').appendChild(errorElement);\n        }\n        else if (input.hasAttribute('data-msg-containerid') === true) {\n            // Append error message into custom div element\n            var containerId = input.getAttribute('data-msg-containerid');\n            var divElement = this.element.querySelector('#' + containerId);\n            divElement.appendChild(errorElement);\n        }\n        else if (this.customPlacement != null) {\n            // Call custom placement function if customPlacement is not null\n            this.customPlacement.call(this, this.inputElement, errorElement);\n        }\n        else {\n            this.inputElement.parentNode.insertBefore(errorElement, this.inputElement.nextSibling);\n        }\n        errorElement.style.display = 'block';\n        this.getErrorElement(name);\n        this.validated.push(name);\n        this.checkRequired(name);\n    };\n    // Get error element by name\n    FormValidator.prototype.getErrorElement = function (name) {\n        this.infoElement = select(this.errorElement + '.' + this.errorClass, this.inputElement.parentElement);\n        if (!this.infoElement) {\n            this.infoElement = select(this.errorElement + '.' + this.errorClass + '[for=\"' + name + '\"]', this.element);\n        }\n        return this.infoElement;\n    };\n    // Remove existing rule from errorRules object\n    FormValidator.prototype.removeErrorRules = function (name) {\n        for (var i = 0; i < this.errorRules.length; i++) {\n            var rule = this.errorRules[i];\n            if (rule.name === name) {\n                this.errorRules.splice(i, 1);\n            }\n        }\n    };\n    // Show error message to the input element\n    FormValidator.prototype.showMessage = function (errorRule) {\n        this.infoElement.style.display = 'block';\n        this.infoElement.innerHTML = errorRule.message;\n        this.checkRequired(errorRule.name);\n    };\n    // Hide error message based on input name\n    FormValidator.prototype.hideMessage = function (name) {\n        if (this.infoElement) {\n            this.infoElement.style.display = 'none';\n            this.removeErrorRules(name);\n            this.inputElement.classList.add(this.validClass);\n            this.inputElement.classList.remove(this.errorClass);\n            this.inputElement.setAttribute('aria-invalid', 'false');\n        }\n    };\n    // Check whether the input element have required rule and its value is not empty\n    FormValidator.prototype.checkRequired = function (name) {\n        if (!this.rules[name][this.required] && !this.inputElement.value.length && !isNullOrUndefined(this.infoElement)) {\n            this.infoElement.innerHTML = this.inputElement.value;\n            this.infoElement.setAttribute('aria-invalid', 'false');\n            this.hideMessage(name);\n        }\n    };\n    // Return boolean result if the input have chekcable or submit types\n    FormValidator.isCheckable = function (input) {\n        var inputType = input.getAttribute('type');\n        return inputType && (inputType === 'checkbox' || inputType === 'radio' || inputType === 'submit');\n    };\n    var FormValidator_1;\n    // List of function to validate the rules\n    FormValidator.checkValidator = {\n        required: function (option) {\n            return option.value.length > 0;\n        },\n        email: function (option) {\n            return regex.EMAIL.test(option.value);\n        },\n        url: function (option) {\n            return regex.URL.test(option.value);\n        },\n        dateIso: function (option) {\n            return regex.DATE_ISO.test(option.value);\n        },\n        tel: function (option) {\n            return regex.PHONE.test(option.value);\n        },\n        creditcard: function (option) {\n            return regex.CREDITCARD.test(option.value);\n        },\n        number: function (option) {\n            return !isNaN(Number(option.value)) && option.value.indexOf(' ') === -1;\n        },\n        digits: function (option) {\n            return regex.DIGITS.test(option.value);\n        },\n        maxLength: function (option) {\n            return option.value.length <= option.param;\n        },\n        minLength: function (option) {\n            return option.value.length >= option.param;\n        },\n        rangeLength: function (option) {\n            var param = option.param;\n            return option.value.length >= param[0] && option.value.length <= param[1];\n        },\n        range: function (option) {\n            var param = option.param;\n            return !isNaN(Number(option.value)) && Number(option.value) >= param[0] && Number(option.value) <= param[1];\n        },\n        date: function (option) {\n            return !isNaN(new Date(option.value).getTime());\n        },\n        max: function (option) {\n            if (!isNaN(Number(option.value))) {\n                // Maximum rule validation for number\n                return +option.value <= option.param;\n            }\n            // Maximum rule validation for date\n            return new Date(option.value).getTime() <= new Date(JSON.parse(JSON.stringify(option.param))).getTime();\n        },\n        min: function (option) {\n            if (!isNaN(Number(option.value))) {\n                // Minimum rule validation for number\n                return +option.value >= option.param;\n            }\n            else if ((option.value).indexOf(',') !== -1) {\n                var uNum = (option.value).replace(/,/g, '');\n                return parseFloat(uNum) >= option.param;\n            }\n            else {\n                // Minimum rule validation for date\n                return new Date(option.value).getTime() >= new Date(JSON.parse(JSON.stringify(option.param))).getTime();\n            }\n        },\n        regex: function (option) {\n            return new RegExp(option.param).test(option.value);\n        },\n        equalTo: function (option) {\n            var compareTo = option.formElement.querySelector('#' + option.param);\n            option.param = compareTo.value;\n            return option.param === option.value;\n        },\n    };\n    __decorate([\n        Property('')\n    ], FormValidator.prototype, \"locale\", void 0);\n    __decorate([\n        Property('e-hidden')\n    ], FormValidator.prototype, \"ignore\", void 0);\n    __decorate([\n        Property()\n    ], FormValidator.prototype, \"rules\", void 0);\n    __decorate([\n        Property('e-error')\n    ], FormValidator.prototype, \"errorClass\", void 0);\n    __decorate([\n        Property('e-valid')\n    ], FormValidator.prototype, \"validClass\", void 0);\n    __decorate([\n        Property('label')\n    ], FormValidator.prototype, \"errorElement\", void 0);\n    __decorate([\n        Property('div')\n    ], FormValidator.prototype, \"errorContainer\", void 0);\n    __decorate([\n        Property(ErrorOption.Label)\n    ], FormValidator.prototype, \"errorOption\", void 0);\n    __decorate([\n        Event()\n    ], FormValidator.prototype, \"focusout\", void 0);\n    __decorate([\n        Event()\n    ], FormValidator.prototype, \"keyup\", void 0);\n    __decorate([\n        Event()\n    ], FormValidator.prototype, \"click\", void 0);\n    __decorate([\n        Event()\n    ], FormValidator.prototype, \"change\", void 0);\n    __decorate([\n        Event()\n    ], FormValidator.prototype, \"submit\", void 0);\n    __decorate([\n        Event()\n    ], FormValidator.prototype, \"validationBegin\", void 0);\n    __decorate([\n        Event()\n    ], FormValidator.prototype, \"validationComplete\", void 0);\n    __decorate([\n        Event()\n    ], FormValidator.prototype, \"customPlacement\", void 0);\n    FormValidator = FormValidator_1 = __decorate([\n        NotifyPropertyChanges\n    ], FormValidator);\n    return FormValidator;\n}(Base));\nexport { FormValidator };\n"]},"metadata":{},"sourceType":"module"}